#
# Copyright (C) 2015 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: E2E Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'ide-config/**'
      - '**.md'
  schedule:
    - cron: '0 1 * * *' # Every day at 1

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ci-e2e-kubernetes-client-${{ github.ref }}
  cancel-in-progress: true

env:
  IT_REVISION: master
  IT_MODULE: kubernetes-itests
  MAVEN_ARGS: -B -C -V -ntp -Dhttp.keepAlive=false -e

jobs:
  buildWithoutTests:
    name: BuildWithoutTests
    runs-on: ubuntu-latest
    if: github.repository == 'fabric8io/kubernetes-client'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache .m2 registry
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: cache-e2e-${{ github.sha }}-${{ github.run_id }}
      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Install Kubernetes Client
        run: ./mvnw ${MAVEN_ARGS} clean install -DskipTests -Djacoco.skip=true

  minikube_baremetal:
    name: Baremetal K8S
    needs: buildWithoutTests
    runs-on: ubuntu-latest
    if: github.repository == 'fabric8io/kubernetes-client'
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.29.0,v1.28.1,v1.27.5, v1.26.8, v1.25.13, v1.20.15, v1.19.16]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.10.0
        with:
          minikube version: v1.31.2
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: '--force'
      - name: Cache .m2 registry
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: cache-e2e-${{ github.sha }}-${{ github.run_id }}
      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Install and Run Integration Tests
        run: |
          ./mvnw ${MAVEN_ARGS} -Pitests -pl $IT_MODULE test -Dtest="io.fabric8.kubernetes.**"

  k8s-legacy:
    name: K8S legacy
    needs: buildWithoutTests
    runs-on: ubuntu-20.04
    if: github.repository == 'fabric8io/kubernetes-client'
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.10.0
        with:
          minikube version: v1.31.2
          kubernetes version: v1.12.10
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: '--force'
      - name: Cache .m2 registry
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: cache-e2e-${{ github.sha }}-${{ github.run_id }}
      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Install and Run Integration Tests
        run: |
          ./mvnw ${MAVEN_ARGS} -Pitests -pl $IT_MODULE test -Dtest="io.fabric8.kubernetes.**"

  openshift:
    name: OpenShift
    needs: buildWithoutTests
    runs-on: ubuntu-20.04
    if: github.repository == 'fabric8io/kubernetes-client'
    strategy:
      fail-fast: false
      matrix:
        openshift: [v3.10.0]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup OpenShift
        uses: manusa/actions-setup-openshift@v1.1.5
        with:
          oc version: ${{ matrix.openshift }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Cache .m2 registry
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: cache-e2e-${{ github.sha }}-${{ github.run_id }}
      - name: Setup Java 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
      - name: Install and Run Integration Tests
        run: |
          ./mvnw ${MAVEN_ARGS} -Pitests -pl $IT_MODULE verify
