<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (C) 2015 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.fabric8</groupId>
  <artifactId>kubernetes-client-project</artifactId>
  <version>5.4-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Fabric8 :: Kubernetes :: Project</name>
  <description>Java client for Kubernetes and OpenShift</description>
  <url>http://fabric8.io/</url>
  <inceptionYear>2015</inceptionYear>

  <organization>
    <name>Red Hat</name>
    <url>http://redhat.com</url>
  </organization>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <!-- including A developer as it's required by the maven poms going into
    central -->
  <developers>
    <developer>
      <id>geeks</id>
      <name>Fabric8 Development Team</name>
      <organization>fabric8</organization>
      <organizationUrl>http://fabric8.io/</organizationUrl>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git@github.com:fabric8io/kubernetes-client.git</connection>
    <developerConnection>scm:git:git@github.com:fabric8io/kubernetes-client.git</developerConnection>
    <url>http://github.com/fabric8io/kubernetes-client/</url>
    <tag>${project.version}</tag>
  </scm>

  <distributionManagement>
    <snapshotRepository>
      <id>oss-sonatype-staging</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <repository>
      <id>oss-sonatype-staging</id>
      <name>Sonatype Staging Repository</name>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
  </distributionManagement>

  <properties>
    <useIncrementalCompilation>false</useIncrementalCompilation>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Core versions -->
    <sundrio.version>0.30.1</sundrio.version>
    <okhttp.version>3.12.12</okhttp.version>
    <okhttp.bundle.version>3.12.1_1</okhttp.bundle.version>
    <okio.version>1.15.0</okio.version>
    <okio.bundle.version>1.15.0_1</okio.bundle.version>
    <jackson.version>2.11.2</jackson.version>
    <mockwebserver.version>0.1.8</mockwebserver.version>

    <!-- API versions -->
    <jsr305.version>3.0.2</jsr305.version>

    <!-- Testing versions -->
    <assertj.core.version>3.19.0</assertj.core.version>
    <arquillian.core.version>1.2.0.Final</arquillian.core.version>
    <awaitility.version>4.0.3</awaitility.version>
    <jsonassert.version>1.5.0</jsonassert.version>

    <retrofit.bundle.version>2.5.0_1</retrofit.bundle.version>
    <conscrypt-openjdk-uber.version>1.4.2</conscrypt-openjdk-uber.version>
    <conscrypt-openjdk-uber.bundle.version>1.4.2_1</conscrypt-openjdk-uber.bundle.version>
    <generex.version>1.0.2</generex.version>
    <generex.bundle.version>1.0.1_1</generex.bundle.version>
    <automaton.version>1.11-8</automaton.version>
    <automaton.bundle.version>1.11-8_1</automaton.bundle.version>
    <aries-spifly.bundle.version>1.3.0</aries-spifly.bundle.version>
    <asm.bundle.version>8.0.1</asm.bundle.version>
    <jackson.bundle.version>${jackson.version}</jackson.bundle.version>
    <junit.version>5.7.1</junit.version>
    <junit.compatible-with-arquillian.version>4.13.2</junit.compatible-with-arquillian.version>
    <zjsonpatch.version>0.3.0</zjsonpatch.version>
    <arquillian.cube.version>1.18.2</arquillian.cube.version>
    <slf4j.version>1.7.30</slf4j.version>
    <mockito.version>3.8.0</mockito.version>
    <lombok.version>1.18.20</lombok.version>
    <snakeyaml.version>1.26</snakeyaml.version>
    <bouncycastle.version>1.68</bouncycastle.version>
    <commons-codec.version>1.15</commons-codec.version>
    <commons-compress.version>1.20</commons-compress.version>
    <scr.annotations.version>1.12.0</scr.annotations.version>
    <jsonschema2pojo.version>1.1.0</jsonschema2pojo.version>
    <properties.maven.plugin.version>1.0.0</properties.maven.plugin.version>

    <!-- Maven plugin versions -->
    <buildnumber.plugin.version>1.4</buildnumber.plugin.version>
    <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
    <maven.bundle.plugin.version>5.1.2</maven.bundle.plugin.version>
    <maven.buildhelper.plugin.version>3.2.0</maven.buildhelper.plugin.version>
    <maven.jar.plugin.version>3.2.0</maven.jar.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
    <maven.scr.plugin.version>1.26.4</maven.scr.plugin.version>
    <maven.resources.plugin.version>3.2.0</maven.resources.plugin.version>
    <maven.release.plugin.version>3.0.0-M1</maven.release.plugin.version>
    <maven.javadoc.plugin.version>3.2.0</maven.javadoc.plugin.version>
    <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
    <maven.enforcer.plugin.version>3.0.0-M3</maven.enforcer.plugin.version>
    <maven.deploy.plugin.version>3.0.0-M1</maven.deploy.plugin.version>
    <maven.gpg.plugin.version>1.6</maven.gpg.plugin.version>
    <maven.antrun.plugin.version>3.0.0</maven.antrun.plugin.version>
    <maven.dependency.plugin.version>3.1.2</maven.dependency.plugin.version>
    <maven.shade.plugin.version>3.2.4</maven.shade.plugin.version>
    <maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version>
    <jandex.plugin.version>1.0.8</jandex.plugin.version>
    <jandex.version>2.2.3.Final</jandex.version>
    <jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
    <sonar-maven-plugin.version>3.8.0.2131</sonar-maven-plugin.version>

    <!-- Other options -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <svc.version>1.1.1</svc.version>

    <exec.master>https://localhost:8443</exec.master>

    <javadoc.include.deps>false</javadoc.include.deps>
    <javadoc.source.includes />
    <javadoc.package.excludes />

    <osgi.import />
    <osgi.export />
    <osgi.private />
    <osgi.dynamic.import />
    <osgi.require-capability />
    <osgi.provide-capability />
    <osgi.bundles />
    <osgi.activator />
    <osgi.export.service />
    <osgi.include.resources>{maven-resources}</osgi.include.resources>
    <karaf.itest.skip>false</karaf.itest.skip>
    <project.build.outputTimestamp>2020-11-14T12:24:00Z</project.build.outputTimestamp>
  </properties>

  <modules>
    <module>model-annotator</module>
    <module>kubernetes-model-generator</module>
    <module>kubernetes-client</module>
    <module>kubernetes-server-mock</module>
    <module>openshift-client</module>
    <module>extensions</module>
    <module>openshift-server-mock</module>
    <module>kubernetes-examples</module>
    <module>platforms</module>
    <module>kubernetes-tests</module>
    <module>uberjar</module>
    <module>crd-generator</module>
  </modules>

  <dependencyManagement>
    <dependencies>
      <!-- Internal -->
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>crd-generator-apt</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-common</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-rbac</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-admissionregistration</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-apps</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-autoscaling</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-apiextensions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-batch</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-certificates</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-coordination</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-discovery</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-events</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-extensions</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-networking</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-metrics</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-policy</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-scheduling</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-storageclass</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-model-node</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-operator</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-operatorhub</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-monitoring</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model-console</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>openshift-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-server-mock</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>knative-model</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>knative-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>knative-server-mock</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-v1alpha1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-v1beta1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-model-triggers</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>tekton-server-mock</artifactId>
        <version>${project.version}</version>
      </dependency>

      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>camel-k-model-v1alpha1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>camel-k-model-v1</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>camel-k-client</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>camel-k-server-mock</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Jackson dependencies, imported as a BOM -->
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <!-- Dependencies -->
      <dependency>
        <groupId>io.sundr</groupId>
        <artifactId>builder-annotations</artifactId>
        <version>${sundrio.version}</version>
        <scope>provided</scope>
        <exclusions>
          <exclusion>
            <groupId>com.sun</groupId>
            <artifactId>tools</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>io.sundr</groupId>
        <artifactId>transform-annotations</artifactId>
        <version>${sundrio.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- Testing and Mocking -->
      <dependency>
        <groupId>io.dekorate</groupId>
        <artifactId>mockwebserver</artifactId>
        <version>${mockwebserver.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.skyscreamer</groupId>
        <artifactId>jsonassert</artifactId>
        <version>${jsonassert.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <!-- JUnit dependencies, imported as a BOM -->
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.core.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>${awaitility.version}</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven.compiler.plugin.version}</version>
          <configuration>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven.jar.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven.javadoc.plugin.version}</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven.source.plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven.antrun.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven.dependency.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven.release.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-gpg-plugin</artifactId>
          <version>${maven.gpg.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven.deploy.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven.resources.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven.install.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven.enforcer.plugin.version}</version>
          <!-- <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <failFast>true</failFast>
                <rules>
                  <requireMavenVersion>
                    <version>[3.2.5,)</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions> -->
        </plugin>
        <plugin>
          <groupId>org.jboss.jandex</groupId>
          <artifactId>jandex-maven-plugin</artifactId>
          <version>${jandex.plugin.version}</version>
          <executions>
            <execution>
              <id>make-index</id>
              <goals>
                <goal>jandex</goal>
              </goals>
              <inherited>true</inherited>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>org.jboss</groupId>
              <artifactId>jandex</artifactId>
              <version>${jandex.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <!-- Create jandex index for faster performance in environments that use it -->
      <plugin>
        <groupId>org.jboss.jandex</groupId>
        <artifactId>jandex-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-report</id>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <environmentVariables>
            <ENV_VAR_EXISTS>value</ENV_VAR_EXISTS>
            <ENV_VAR_EXISTS_BOOLEAN>true</ENV_VAR_EXISTS_BOOLEAN>
          </environmentVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <aggregate>true</aggregate>
          <header>header.txt</header>
          <properties>
            <owner>Red Hat, Inc.</owner>
          </properties>
          <excludes>
            <exclude>**/.idea</exclude>
            <exclude>.idea</exclude>
            <exclude>.editorconfig</exclude>
            <exclude>license.txt</exclude>
            <exclude>**/test-kubeconfig</exclude>
            <exclude>**/io/fabric8/kubernetes/client/lib/**/*.java</exclude>
            <exclude>kubernetes-model/vendor/**/*</exclude>
            <exclude>kubernetes-model/generate</exclude>
            <exclude>kubernetes-model/.openshift-version</exclude>
            <exclude>kubernetes-model/glide.*</exclude>
            <exclude>kubernetes-model/Gopkg.*</exclude>
            <exclude>extensions/**/vendor/**/*</exclude>
            <exclude>**/go.mod</exclude>
            <exclude>**/go.sum</exclude>
            <exclude>kubernetes-client/src/test/resources/*</exclude>
            <exclude>kubernetes-client/src/test/resources/mockito-extensions/*</exclude>
            <exclude>**/src/test/resources/ssl/*</exclude>
            <exclude>Jenkinsfile</exclude>
          </excludes>
          <mapping>
            <go>JAVADOC_STYLE</go>
            <svg>XML_STYLE</svg>
            <Makefile>SCRIPT_STYLE</Makefile>
          </mapping>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven.bundle.plugin.version}</version>
        <extensions>true</extensions>
        <inherited>true</inherited>
        <configuration>
          <instructions>
            <Bundle-Name>${project.name}</Bundle-Name>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
            <Export-Package>${osgi.export}</Export-Package>
            <Import-Package>${osgi.import}</Import-Package>
            <DynamicImport-Package>${osgi.dynamic.import}</DynamicImport-Package>
            <Require-Capability>${osgi.require-capability}</Require-Capability>
            <Provide-Capability>${osgi.provide-capability}</Provide-Capability>
            <Private-Package>${osgi.private}</Private-Package>
            <Require-Bundle>${osgi.bundles}</Require-Bundle>
            <Bundle-Activator>${osgi.activator}</Bundle-Activator>
            <Export-Service>${osgi.export.service}</Export-Service>
            <Include-Resource>${osgi.include.resources}</Include-Resource>
            <_removeheaders>Bnd-LastModified</_removeheaders>
            <_reproducible>true</_reproducible>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.sundr</groupId>
        <artifactId>sundr-maven-plugin</artifactId>
        <version>${sundrio.version}</version>
        <dependencies>
          <dependency>
            <groupId>io.sundr</groupId>
            <artifactId>sundr-codegen</artifactId>
            <version>${sundrio.version}</version>
            <exclusions>
              <exclusion>
                <groupId>com.sun</groupId>
                <artifactId>tools</artifactId>
              </exclusion>
            </exclusions>
          </dependency>
        </dependencies>
        <configuration>
          <boms>
            <bom>
              <artifactId>kubernetes-client-bom</artifactId>
              <name>Fabric8 :: Kubernetes :: Bom</name>
              <properties>
                <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                <sonar.skip>true</sonar.skip>
              </properties>
            </bom>
            <bom>
              <artifactId>kubernetes-client-bom-with-deps</artifactId>
              <name>Fabric8 :: Kubernetes :: Bom with Dependencies</name>
              <dependencies>
                <includes>
                  <include>com.squareup*:*</include>
                  <include>com.fasterxml.jackson*:*</include>
                  <include>io.fabric8:kubernetes-model-core*</include>
                  <include>io.fabric8:kubernetes-model-rbac*</include>
                  <include>io.fabric8:kubernetes-model-admissionregistration*</include>
                  <include>io.fabric8:kubernetes-model-apiextensions*</include>
                  <include>io.fabric8:kubernetes-model-apps*</include>
                  <include>io.fabric8:kubernetes-model-autoscaling*</include>
                  <include>io.fabric8:kubernetes-model-batch*</include>
                  <include>io.fabric8:kubernetes-model-certificates*</include>
                  <include>io.fabric8:kubernetes-model-coordination*</include>
                  <include>io.fabric8:kubernetes-model-discovery*</include>
                  <include>io.fabric8:kubernetes-model-events*</include>
                  <include>io.fabric8:kubernetes-model-extensions*</include>
                  <include>io.fabric8:kubernetes-model-networking*</include>
                  <include>io.fabric8:kubernetes-model-node*</include>
                  <include>io.fabric8:kubernetes-model-metrics*</include>
                  <include>io.fabric8:kubernetes-model-policy*</include>
                  <include>io.fabric8:kubernetes-model-scheduling*</include>
                  <include>io.fabric8:kubernetes-model-storageclass*</include>
                  <include>io.fabric8:openshift-model*</include>
                </includes>
              </dependencies>
              <properties>
                <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                <sonar.skip>true</sonar.skip>
              </properties>
            </bom>
          </boms>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>generate-bom</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${maven.buildhelper.plugin.version}</version>
        <inherited>true</inherited>
        <executions>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>1.6.8</version>
        <extensions>true</extensions>
        <configuration>
          <serverId>oss-sonatype-staging</serverId>
          <nexusUrl>https://oss.sonatype.org/</nexusUrl>
          <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>release</id>
      <properties>
        <karaf.itest.skip>true</karaf.itest.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven.gpg.plugin.version}</version>
            <configuration>
              <passphrase>4uds0n</passphrase>
              <useAgent>true</useAgent>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-release-plugin</artifactId>
            <version>${maven.release.plugin.version}</version>
            <configuration>
              <autoVersionSubmodules>true</autoVersionSubmodules>
              <pushChanges>false</pushChanges>
              <localCheckout>true</localCheckout>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>${maven.enforcer.plugin.version}</version>
            <executions>
              <execution>
                <id>enforce-no-snapshots</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireReleaseDeps>
                      <message>No Snapshots Allowed!</message>
                    </requireReleaseDeps>
                  </rules>
                  <fail>false</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <includeDependencySources>${javadoc.include.deps}</includeDependencySources>
              <dependencySourceIncludes>
                <dependencySourceInclude>${javadoc.source.includes}</dependencySourceInclude>
              </dependencySourceIncludes>
              <excludePackageNames>${javadoc.package.excludes}</excludePackageNames>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <additionalparam>${javadoc.opts}</additionalparam>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>itests-kubernetes</id>
      <modules>
        <module>kubernetes-itests</module>
      </modules>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <groupId>org.arquillian.cube</groupId>
          <artifactId>arquillian-cube-kubernetes-starter</artifactId>
          <version>${arquillian.cube.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>itests-openshift</id>
      <modules>
        <module>kubernetes-itests</module>
      </modules>
      <dependencies>
        <dependency>
          <groupId>org.arquillian.cube</groupId>
          <artifactId>arquillian-cube-openshift-starter</artifactId>
          <version>${arquillian.cube.version}</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <configuration>
              <skipTests>true</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>doclint-java8-disable</id>
      <activation>
        <jdk>[1.8,)</jdk>
      </activation>
      <properties>
        <javadoc.opts>-Xdoclint:none</javadoc.opts>
      </properties>
    </profile>
    <profile>
      <id>sonar</id>
      <properties>
        <sonar.projectKey>fabric8io_kubernetes-client</sonar.projectKey>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.organization>fabric8io</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.login>${env.SONAR_LOGIN_TOKEN}</sonar.login>
        <sonar.projectName>Fabric8 :: Kubernetes Client</sonar.projectName>
        <sonar.links.homepage>https://github.com/fabric8io/kubernetes-client</sonar.links.homepage>
        <sonar.links.ci>https://github.com/fabric8io/kubernetes-client/actions</sonar.links.ci>
        <sonar.links.scm>https://github.com/fabric8io/kubernetes-client</sonar.links.scm>
        <sonar.links.issue>https://github.com/fabric8io/kubernetes-client/issues</sonar.links.issue>
        <sonar.coverage.exclusions>**/kubernetes-examples/**/*,**/extensions/**/examples/**/*</sonar.coverage.exclusions>
        <karaf.itest.skip>true</karaf.itest.skip>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>java9-plus</id>
      <activation>
        <jdk>[9,)</jdk>
      </activation>
      <properties>
        <maven.compiler.release>8</maven.compiler.release>
      </properties>
    </profile>
    <profile>
      <id>javadoc-test</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <configuration>
              <includeDependencySources>${javadoc.include.deps}</includeDependencySources>
              <dependencySourceIncludes>
                <dependencySourceInclude>${javadoc.source.includes}</dependencySourceInclude>
              </dependencySourceIncludes>
              <excludePackageNames>${javadoc.package.excludes}</excludePackageNames>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration>
                  <additionalparam>${javadoc.opts}</additionalparam>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
