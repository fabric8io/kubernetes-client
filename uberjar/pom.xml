<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2015 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>kubernetes-client-project</artifactId>
    <groupId>io.fabric8</groupId>
    <version>4.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.fabric8</groupId>
  <artifactId>kubernetes-openshift-uberjar</artifactId>
  <name>Fabric8 :: Kubernetes and Openshift :: UberJar</name>
  <packaging>jar</packaging>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>uberjar</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <artifactSet>
                <includes>
                  <include>io.fabric8:kubernetes-model</include>
                  <include>io.fabric8:kubernetes-client</include>
                  <include>io.fabric8:kubernetes-server-mock</include>
                  <include>io.fabric8:openshift-client</include>
                  <include>io.fabric8:openshift-server-mock</include>
                </includes>
              </artifactSet>
            </configuration>
          </execution>
          <execution>
            <id>relocation</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>versioned</shadedClassifierName>
              <artifactSet>
                <includes>
                  <include>io.fabric8:kubernetes-model</include>
                  <include>io.fabric8:kubernetes-client</include>
                  <include>io.fabric8:kubernetes-server-mock</include>
                  <include>io.fabric8:openshift-client</include>
                  <include>io.fabric8:openshift-server-mock</include>
                </includes>
              </artifactSet>
              <relocations>
                <!--
                  Let's relocate all user facing packages under:
                    - io.fabric8.kubernetes.api.model.vMAJOR_MINOR
                    - io.fabric8.kubernetes.client/vMAJOR_MINOR
                -->
                <relocation>
                  <pattern>io.fabric8.kubernetes.api.model</pattern>
                  <shadedPattern>io.fabric8.kubernetes.api.model.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.fabric8.kubernetes.api.builder</pattern>
                  <shadedPattern>io.fabric8.kubernetes.api.builder.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.fabric8.openshift.api.model</pattern>
                  <shadedPattern>io.fabric8.openshift.api.model.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.fabric8.kubernetes.client</pattern>
                  <!-- workaround for the duplicate relocation -->
                  <shadedPattern>io.fabric8.kubernetes.clnt.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.fabric8.openshift.client</pattern>
                  <!-- workaround for the duplicate relocation -->
                  <shadedPattern>io.fabric8.openshift.clnt.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io.fabric8.kubernetes.internal</pattern>
                  <shadedPattern>io.fabric8.kubernetes.clnt.v${parsedVersion.majorVersion}_${parsedVersion.minorVersion}.internal</shadedPattern>
                </relocation>
              </relocations>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- For inclusion -->
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-model</artifactId>
      <version>${kubernetes.model.version}</version>
    </dependency>

    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-client</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-server-mock</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>openshift-client</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>openshift-server-mock</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Legal Transitives -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${validation.api.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>okhttp</artifactId>
      <version>${okhttp.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>logging-interceptor</artifactId>
      <version>${okhttp.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>zjsonpatch</artifactId>
      <version>${zjsonpatch.version}</version>
    </dependency>

    <dependency>
      <groupId>com.github.mifmif</groupId>
      <artifactId>generex</artifactId>
      <version>${generex.version}</version>
    </dependency>

  </dependencies>
</project>

