/*
 * Copyright (C) 2015 Red Hat, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'io.fabric8.java-generator' version "${kubernetesClientVersion}"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    mavenLocal()
}

sourceSets {
  main {
    java {
      srcDirs "$buildDir/generated/sources"
    }
  }
}

dependencies {
  annotationProcessor "io.sundr:builder-annotations:${sundrioVersion}"
  compileOnly         "io.sundr:builder-annotations:${sundrioVersion}"
  compileOnly         "org.projectlombok:lombok:${lombokVersion}"
  implementation      "io.fabric8:kubernetes-client:${kubernetesClientVersion}"
  implementation      "io.fabric8:generator-annotations:${kubernetesClientVersion}"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

javaGen {
    source = file('src/main/resources')
    existingJavaTypes(Collections.singletonMap("com.example.v1.existingjavatypespec.Affinity", "io.fabric8.kubernetes.api.model.Affinity"))
}
