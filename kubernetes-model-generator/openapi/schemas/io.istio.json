{
  "swagger": "2.0",
  "info": {
    "title": "Kubernetes",
    "version": "0.0.0"
  },
  "paths": null,
  "definitions": {
    "io.istio.api.analysis.v1alpha1.AnalysisMessageBase": {
      "description": "AnalysisMessageBase describes some common information that is needed for all messages. All information should be static with respect to the error code.",
      "type": "object",
      "properties": {
        "documentationUrl": {
          "description": "A url pointing to the Istio documentation for this specific error type. Should be of the form `^http(s)?://(preliminary\\.)?istio.io/docs/reference/config/analysis/` Required.",
          "type": "string"
        },
        "level": {
          "description": "Represents how severe a message is. Required.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageBase_Level"
        },
        "type": {
          "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageBase_Type"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AnalysisMessageBase",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.analysis.v1alpha1.AnalysisMessageBase_Level": {
      "description": "The values here are chosen so that more severe messages get sorted higher, as well as leaving space in between to add more later",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AnalysisMessageBase_Level",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "ERROR(3),INFO(12),UNKNOWN(0),WARNING(8)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.analysis.v1alpha1.AnalysisMessageBase_Type": {
      "description": "A unique identifier for the type of message. Name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between name and code. (i.e. do not re-use names or codes between message types.)",
      "type": "object",
      "properties": {
        "code": {
          "description": "A 7 character code matching `^IST[0-9]{4}$` intended to uniquely identify the message type. (e.g. \"IST0001\" is mapped to the \"InternalError\" message type.) 0000-0100 are reserved. Required.",
          "type": "string"
        },
        "name": {
          "description": "A human-readable name for the message type. e.g. \"InternalError\", \"PodMissingProxy\". This should be the same for all messages of the same type. Required.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AnalysisMessageBase_Type",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.analysis.v1alpha1.AnalysisMessageWeakSchema": {
      "description": "AnalysisMessageWeakSchema is the set of information that's needed to define a weakly-typed schema. The purpose of this proto is to provide a mechanism for validating istio/istio/galley/pkg/config/analysis/msg/messages.yaml to make sure that we don't allow committing underspecified types.",
      "type": "object",
      "properties": {
        "args": {
          "description": "A description of the arguments for a particular message type",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageWeakSchema_ArgType"
          }
        },
        "description": {
          "description": "A human readable description of what the error means. Required.",
          "type": "string"
        },
        "messageBase": {
          "description": "Required",
          "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageBase"
        },
        "template": {
          "description": "A go-style template string (https://golang.org/pkg/fmt/#hdr-Printing) defining how to combine the args for a  particular message into a log line. Required.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AnalysisMessageWeakSchema",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.analysis.v1alpha1.AnalysisMessageWeakSchema_ArgType": {
      "type": "object",
      "properties": {
        "goType": {
          "description": "Required. Should be a golang type, used in code generation. Ideally this will change to a less language-pinned type before this gets out of alpha, but for compatibility with current istio/istio code it's go_type for now.",
          "type": "string"
        },
        "name": {
          "description": "Required",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AnalysisMessageWeakSchema_ArgType",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.analysis.v1alpha1.GenericAnalysisMessage": {
      "description": "GenericAnalysisMessage is an instance of an AnalysisMessage defined by a schema, whose metaschema is AnalysisMessageWeakSchema. (Names are hard.) Code should be able to perform validation of arguments as needed by using the message type information to look at the AnalysisMessageWeakSchema and examine the list of args at runtime. Developers can also create stronger-typed versions of GenericAnalysisMessage for well-known and stable message types.",
      "type": "object",
      "properties": {
        "args": {
          "description": "Any message-type specific arguments that need to get codified. Optional.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.structpb.Struct"
        },
        "messageBase": {
          "description": "Required",
          "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageBase"
        },
        "resourcePaths": {
          "description": "A list of strings specifying the resource identifiers that were the cause of message generation. A \"path\" here is a (NAMESPACE\\/)?RESOURCETYPE/NAME tuple that uniquely identifies a particular resource. There doesn't seem to be a single concept for this, but this is intuitively taken from https://kubernetes.io/docs/reference/using-api/api-concepts/#standard-api-terminology At least one is required.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "GenericAnalysisMessage",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.analysis.v1alpha1.InternalErrorAnalysisMessage": {
      "description": "InternalErrorAnalysisMessage is a strongly-typed message representing some error in Istio code that prevented us from performing analysis at all.",
      "type": "object",
      "properties": {
        "detail": {
          "description": "Any detail regarding specifics of the error. Should be human-readable.",
          "type": "string"
        },
        "messageBase": {
          "description": "Required",
          "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageBase"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "InternalErrorAnalysisMessage",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.extensions.v1alpha1.EnvValueSource": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "EnvValueSource",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "HOST(1),INLINE(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.extensions.v1alpha1.EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "value": {
          "description": "Value for the environment variable. Only applicable if `valueFrom` is `HOST`. Defaults to \"\".",
          "type": "string"
        },
        "valueFrom": {
          "description": "Source for the environment variable's value.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.EnvValueSource"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "EnvVar",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.extensions.v1alpha1.FailStrategy": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "FailStrategy",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "FAIL_CLOSE(0),FAIL_OPEN(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.extensions.v1alpha1.PluginPhase": {
      "description": "The phase in the filter chain where the plugin will be injected.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "PluginPhase",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "AUTHN(1),AUTHZ(2),STATS(3),UNSPECIFIED_PHASE(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.extensions.v1alpha1.PluginType": {
      "description": "PluginType indicates the type of Wasm extension to be used. There are two types of extensions: `HTTP` and `NETWORK`.\n\nThe `HTTP` extension works at Layer 7 (for example, as an HTTP filter in Envoy). The detailed HTTP interface can be found here: - [C++](https://github.com/proxy-wasm/proxy-wasm-cpp-host/blob/b7e690703c7f26707438a2f1ebd7c197bc8f0296/include/proxy-wasm/context_interface.h#L199) - [Rust](https://github.com/proxy-wasm/proxy-wasm-rust-sdk/blob/6b47aec926bc29971c727471d6f4c972ec407c7f/src/traits.rs#L309)\n\nThe `NETWORK` extension works at Layer 4 (for example, as a network filter in Envoy). The detailed `NETWORK` interface can be found here: - [C++](https://github.com/proxy-wasm/proxy-wasm-cpp-host/blob/b7e690703c7f26707438a2f1ebd7c197bc8f0296/include/proxy-wasm/context_interface.h#L257) - [Rust](https://github.com/proxy-wasm/proxy-wasm-rust-sdk/blob/6b47aec926bc29971c727471d6f4c972ec407c7f/src/traits.rs#L257)\n\nThe `NETWORK` extension can be applied to HTTP traffic as well.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "PluginType",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "HTTP(1),NETWORK(2),UNSPECIFIED_PLUGIN_TYPE(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.extensions.v1alpha1.PullPolicy": {
      "description": "The pull behaviour to be applied when fetching a Wam module, mirroring K8s behaviour.\n\n\u003c!-- buf:lint:ignore ENUM_VALUE_UPPER_SNAKE_CASE --\u003e",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "PullPolicy",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "Always(2),IfNotPresent(1),UNSPECIFIED_POLICY(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.extensions.v1alpha1.VmConfig": {
      "description": "Configuration for a Wasm VM. more details can be found [here](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/wasm/v3/wasm.proto#extensions-wasm-v3-vmconfig).",
      "type": "object",
      "properties": {
        "env": {
          "description": "Specifies environment variables to be injected to this VM. Note that if a key does not exist, it will be ignored.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.EnvVar"
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "VmConfig",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.extensions.v1alpha1.WasmPlugin": {
      "description": "WasmPlugin provides a mechanism to extend the functionality provided by the Istio proxy through WebAssembly filters.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "failStrategy": {
          "description": "Specifies the failure behavior for the plugin due to fatal errors.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.FailStrategy"
        },
        "imagePullPolicy": {
          "description": "The pull behaviour to be applied when fetching Wasm module by either OCI image or `http/https`. Only relevant when referencing Wasm module without any digest, including the digest in OCI image URL or `sha256` field in `vm_config`. Defaults to `IfNotPresent`, except when an OCI image is referenced in the `url` and the `latest` tag is used, in which case `Always` is the default, mirroring Kubernetes behaviour.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.PullPolicy"
        },
        "imagePullSecret": {
          "description": "Credentials to use for OCI image pulling. Name of a Kubernetes Secret in the same namespace as the `WasmPlugin` that contains a Docker pull secret which is to be used to authenticate against the registry when pulling the image.",
          "type": "string"
        },
        "match": {
          "description": "Specifies the criteria to determine which traffic is passed to WasmPlugin. If a traffic satisfies any of TrafficSelectors, the traffic passes the WasmPlugin.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.WasmPlugin_TrafficSelector"
          }
        },
        "phase": {
          "description": "Determines where in the filter chain this `WasmPlugin` is to be injected.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.PluginPhase"
        },
        "pluginConfig": {
          "description": "The configuration that will be passed on to the plugin.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.structpb.Struct"
        },
        "pluginName": {
          "description": "The plugin name to be used in the Envoy configuration (used to be called `rootID`). Some .wasm modules might require this value to select the Wasm plugin to execute.",
          "type": "string"
        },
        "priority": {
          "description": "Determines ordering of `WasmPlugins` in the same `phase`. When multiple `WasmPlugins` are applied to the same workload in the same `phase`, they will be applied by priority, in descending order. If `priority` is not set, or two `WasmPlugins` exist with the same value, the ordering will be deterministically derived from name and namespace of the `WasmPlugins`. Defaults to `0`.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.Int32Value"
        },
        "selector": {
          "description": "Criteria used to select the specific set of pods/VMs on which this plugin configuration should be applied. If omitted, this configuration will be applied to all workload instances in the same namespace. If the `WasmPlugin` is present in the config root namespace, it will be applied to all applicable workloads in any namespace.\n\nAt most, only one of `selector` or `targetRefs` can be set for a given policy.",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.WorkloadSelector"
        },
        "sha256": {
          "description": "SHA256 checksum that will be used to verify Wasm module or OCI container. If the `url` field already references a SHA256 (using the `@sha256:` notation), it must match the value of this field. If an OCI image is referenced by tag and this field is set, its checksum will be verified against the contents of this field after pulling.",
          "type": "string"
        },
        "targetRef": {
          "description": "$hide_from_docs",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
        },
        "targetRefs": {
          "description": "Optional. The targetRefs specifies a list of resources the policy should be applied to. The targeted resources specified will determine which workloads the policy applies to.\n\nCurrently, the following resource attachment types are supported: * `kind: Gateway` with `group: gateway.networking.k8s.io` in the same namespace. * `kind: Service` with `group: \"\"` or `group: \"core\"` in the same namespace. This type is only supported for waypoints.\n\nIf not set, the policy is applied as defined by the selector. At most one of the selector and targetRefs can be set.\n\nNOTE: If you are using the `targetRefs` field in a multi-revision environment with Istio versions prior to 1.22, it is highly recommended that you pin the policy to a revision running 1.22+ via the `istio.io/rev` label. This is to prevent proxies connected to older control planes (that don't know about the `targetRefs` field) from misinterpreting the policy as namespace-wide during the upgrade process.\n\nNOTE: Waypoint proxies are required to use this field for policies to apply; `selector` policies will be ignored.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
          }
        },
        "type": {
          "description": "Specifies the type of Wasm Extension to be used.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.PluginType"
        },
        "url": {
          "description": "URL of a Wasm module or OCI container. If no scheme is present, defaults to `oci://`, referencing an OCI image. Other valid schemes are `file://` for referencing .wasm module files present locally within the proxy container, and `http[s]://` for `.wasm` module files hosted remotely.",
          "type": "string"
        },
        "verificationKey": {
          "description": "$hide_from_docs Public key that will be used to verify signatures of signed OCI images or Wasm modules.\n\nAt this moment, various ways for signing/verifying are emerging and being proposed. We can observe two major streams for signing OCI images: Cosign from Sigstore and Notary, which is used in Docker Content Trust. In case of Wasm module, multiple approaches are still in discussion.\n  - https://github.com/WebAssembly/design/issues/1413\n  - https://github.com/wasm-signatures/design (various signing tools are enumerated)\n\nIn addition, for each method for signing\u0026verifying, we may need to consider to provide additional data or configuration (e.g., key rolling, KMS, root certs, ...) as well.\n\nTo deal with this situation, we need to elaborate more generic way to describe how to sign and verify the image or wasm binary, and how to specify relevant data, including this `verification_key`.\n\nTherefore, this field will not be implemented until the detailed design is established. For the future use, just keep this field in proto and hide from documentation.",
          "type": "string"
        },
        "vmConfig": {
          "description": "Configuration for a Wasm VM. More details can be found [here](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/wasm/v3/wasm.proto#extensions-wasm-v3-vmconfig).",
          "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.VmConfig"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "WasmPlugin",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.extensions.v1alpha1.WasmPlugin_TrafficSelector": {
      "description": "TrafficSelector provides a mechanism to select a specific traffic flow for which this Wasm Plugin will be enabled. When all the sub conditions in the TrafficSelector are satisfied, the traffic will be selected.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Criteria for selecting traffic by their direction. Note that `CLIENT` and `SERVER` are analogous to OUTBOUND and INBOUND, respectively. For the gateway, the field should be `CLIENT` or `CLIENT_AND_SERVER`. If not specified, the default value is `CLIENT_AND_SERVER`.",
          "type": "integer",
          "format": "int32"
        },
        "ports": {
          "description": "Criteria for selecting traffic by their destination port. More specifically, for the outbound traffic, the destination port would be the port of the target service. On the other hand, for the inbound traffic, the destination port is the port bound by the server process in the same Pod.\n\nIf one of the given `ports` is matched, this condition is evaluated to true. If not specified, this condition is evaluated to true for any port.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.type.v1beta1.PortSelector"
          },
          "x-kubernetes-list-map-keys": [
            "number"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "WasmPlugin_TrafficSelector",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.meta.v1alpha1.IstioCondition": {
      "type": "object",
      "properties": {
        "lastProbeTime": {
          "description": "Last time we probed the condition.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.timestamppb.Timestamp"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.timestamppb.Timestamp"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition.",
          "type": "string"
        },
        "reason": {
          "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "status": {
          "description": "Status is the status of the condition. Can be True, False, Unknown.",
          "type": "string"
        },
        "type": {
          "description": "Type is the type of the condition.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "IstioCondition",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.meta.v1alpha1.IstioStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Current service state of the resource. More info: https://istio.io/docs/reference/config/config-status/",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "observedGeneration": {
          "description": "Resource Generation to which the Reconciled Condition refers. When this value is not equal to the object's metadata generation, reconciled condition  calculation for the current generation is still in progress.  See https://istio.io/latest/docs/reference/config/config-status/ for more info.",
          "type": "integer",
          "format": "int64"
        },
        "validationMessages": {
          "description": "Includes any errors or warnings detected by Istio's analyzers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageBase"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "IstioStatus",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.CaptureMode": {
      "description": "`CaptureMode` describes how traffic to a listener is expected to be captured. Applicable only when the listener is bound to an IP.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "CaptureMode",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "DEFAULT(0),IPTABLES(1),NONE(2)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.ClientTLSSettings": {
      "description": "SSL/TLS related settings for upstream connections. See Envoy's [TLS context](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto.html#common-tls-configuration) for more details. These settings are common to both HTTP and TCP upstreams.\n\nFor example, the following rule configures a client to use mutual TLS for connections to upstream database cluster.\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: db-mtls\n\nspec:\n\n\thost: mydbserver.prod.svc.cluster.local\n\ttrafficPolicy:\n\t  tls:\n\t    mode: MUTUAL\n\t    clientCertificate: /etc/certs/myclientcert.pem\n\t    privateKey: /etc/certs/client_private_key.pem\n\t    caCertificates: /etc/certs/rootcacerts.pem\n\n```\n\nThe following rule configures a client to use TLS when talking to a foreign service whose domain matches *.foo.com.\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: tls-foo\n\nspec:\n\n\thost: \"*.foo.com\"\n\ttrafficPolicy:\n\t  tls:\n\t    mode: SIMPLE\n\n```\n\nThe following rule configures a client to use Istio mutual TLS when talking to rating services.\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: ratings-istio-mtls\n\nspec:\n\n\thost: ratings.prod.svc.cluster.local\n\ttrafficPolicy:\n\t  tls:\n\t    mode: ISTIO_MUTUAL\n\n```",
      "type": "object",
      "properties": {
        "caCertificates": {
          "description": "OPTIONAL: The path to the file containing certificate authority certificates to use in verifying a presented server certificate. If omitted, the proxy will verify the server's certificate using the OS CA certificates. Should be empty if mode is `ISTIO_MUTUAL`.",
          "type": "string"
        },
        "caCrl": {
          "description": "OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented server certificate. `CRL` is a list of certificates that have been revoked by the CA (Certificate Authority) before their scheduled expiration date. If specified, the proxy will verify if the presented certificate is part of the revoked list of certificates. If omitted, the proxy will not verify the certificate against the `crl`. Note that if `credentialName` is set, `CRL` cannot be specified using `caCrl`, rather it has to be specified inside the credential.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the client-side TLS certificate to use. Should be empty if mode is `ISTIO_MUTUAL`.",
          "type": "string"
        },
        "credentialName": {
          "description": "The name of the secret that holds the TLS certs for the client including the CA certificates. This secret must exist in the namespace of the proxy using the certificates. An Opaque secret should contain the following keys and values: `key: \u003cprivateKey\u003e`, `cert: \u003cclientCert\u003e`, `cacert: \u003cCACertificate\u003e`, `crl: \u003ccertificateRevocationList\u003e` Here CACertificate is used to verify the server certificate. For mutual TLS, `cacert: \u003cCACertificate\u003e` can be provided in the same secret or a separate secret named `\u003csecret\u003e-cacert`. A TLS secret for client certificates with an additional `ca.crt` key for CA certificates and `ca.crl` key for certificate revocation list(CRL) is also supported. Only one of client certificates and CA certificate or credentialName can be specified.\n\n**NOTE:** This field is applicable at sidecars only if `DestinationRule` has a `workloadSelector` specified. Otherwise the field will be applicable only at gateways, and sidecars will continue to use the certificate paths.",
          "type": "string"
        },
        "insecureSkipVerify": {
          "description": "`insecureSkipVerify` specifies whether the proxy should skip verifying the CA signature and SAN for the server certificate corresponding to the host. The default value of this field is false.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        },
        "mode": {
          "description": "Indicates whether connections to this port should be secured using TLS. The value of this field determines how TLS is enforced.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ClientTLSSettings_TLSmode"
        },
        "privateKey": {
          "description": "REQUIRED if mode is `MUTUAL`. The path to the file holding the client's private key. Should be empty if mode is `ISTIO_MUTUAL`.",
          "type": "string"
        },
        "sni": {
          "description": "SNI string to present to the server during TLS handshake. If unspecified, SNI will be automatically set based on downstream HTTP host/authority header for SIMPLE and MUTUAL TLS modes.",
          "type": "string"
        },
        "subjectAltNames": {
          "description": "A list of alternate names to verify the subject identity in the certificate. If specified, the proxy will verify that the server certificate's subject alt name matches one of the specified values. If specified, this list overrides the value of `subjectAltNames` from the `ServiceEntry`. If unspecified, automatic validation of upstream presented certificate for new upstream connections will be done based on the downstream HTTP host/authority header.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ClientTLSSettings",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ClientTLSSettings_TLSmode": {
      "description": "TLS connection mode",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ClientTLSSettings_TLSmode",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "DISABLE(0),ISTIO_MUTUAL(3),MUTUAL(2),SIMPLE(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.ConnectionPoolSettings": {
      "description": "Connection pool settings for an upstream host. The settings apply to each individual host in the upstream service.  See Envoy's [circuit breaker](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking) for more details. Connection pool settings can be applied at the TCP level as well as at HTTP level.\n\nFor example, the following rule sets a limit of 100 connections to redis service called myredissrv with a connect timeout of 30ms\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: bookinfo-redis\n\nspec:\n\n\thost: myredissrv.prod.svc.cluster.local\n\ttrafficPolicy:\n\t  connectionPool:\n\t    tcp:\n\t      maxConnections: 100\n\t      connectTimeout: 30ms\n\t      tcpKeepalive:\n\t        time: 7200s\n\t        interval: 75s\n\n```",
      "type": "object",
      "properties": {
        "http": {
          "description": "HTTP connection pool settings.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings_HTTPSettings"
        },
        "tcp": {
          "description": "Settings common to both HTTP and TCP upstream connections.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings_TCPSettings"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ConnectionPoolSettings",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ConnectionPoolSettings_HTTPSettings": {
      "description": "Settings applicable to HTTP1.1/HTTP2/GRPC connections.",
      "type": "object",
      "properties": {
        "h2UpgradePolicy": {
          "description": "Specify if http1.1 connection should be upgraded to http2 for the associated destination.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings_HTTPSettings_H2UpgradePolicy"
        },
        "http1MaxPendingRequests": {
          "description": "Maximum number of requests that will be queued while waiting for a ready connection pool connection. Default 2^32-1. Refer to https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/circuit_breaking under which conditions a new connection is created for HTTP2. Please note that this is applicable to both HTTP/1.1 and HTTP2.",
          "type": "integer",
          "format": "int32"
        },
        "http2MaxRequests": {
          "description": "Maximum number of active requests to a destination. Default 2^32-1. Please note that this is applicable to both HTTP/1.1 and HTTP2.",
          "type": "integer",
          "format": "int32"
        },
        "idleTimeout": {
          "description": "The idle timeout for upstream connection pool connections. The idle timeout is defined as the period in which there are no active requests. If not set, the default is 1 hour. When the idle timeout is reached, the connection will be closed. If the connection is an HTTP/2 connection a drain sequence will occur prior to closing the connection. Note that request based timeouts mean that HTTP/2 PINGs will not keep the connection alive. Applies to both HTTP1.1 and HTTP2 connections.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "maxConcurrentStreams": {
          "description": "The maximum number of concurrent streams allowed for a peer on one HTTP/2 connection. Defaults to 2^31-1.",
          "type": "integer",
          "format": "int32"
        },
        "maxRequestsPerConnection": {
          "description": "Maximum number of requests per connection to a backend. Setting this parameter to 1 disables keep alive. Default 0, meaning \"unlimited\", up to 2^29.",
          "type": "integer",
          "format": "int32"
        },
        "maxRetries": {
          "description": "Maximum number of retries that can be outstanding to all hosts in a cluster at a given time. Defaults to 2^32-1.",
          "type": "integer",
          "format": "int32"
        },
        "useClientProtocol": {
          "description": "If set to true, client protocol will be preserved while initiating connection to backend. Note that when this is set to true, `h2UpgradePolicy` will be ineffective i.e. the client connections will not be upgraded to http2.",
          "type": "boolean"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ConnectionPoolSettings_HTTPSettings",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ConnectionPoolSettings_HTTPSettings_H2UpgradePolicy": {
      "description": "Policy for upgrading http1.1 connections to http2.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ConnectionPoolSettings_HTTPSettings_H2UpgradePolicy",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "DEFAULT(0),DO_NOT_UPGRADE(1),UPGRADE(2)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.ConnectionPoolSettings_TCPSettings": {
      "description": "Settings common to both HTTP and TCP upstream connections.",
      "type": "object",
      "properties": {
        "connectTimeout": {
          "description": "TCP connection timeout. format: 1h/1m/1s/1ms. MUST be \u003e=1ms. Default is 10s.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "idleTimeout": {
          "description": "The idle timeout for TCP connections. The idle timeout is defined as the period in which there are no bytes sent or received on either the upstream or downstream connection. If not set, the default idle timeout is 1 hour. If set to 0s, the timeout will be disabled. Idle timeout is not configured per each cluster individually when weighted destinations are used, because idleTimeout is a property of a listener, not a cluster. In that case, idleTimeout specified in a destination rule for the first weighted route is configured in the listener, which means also for all weighted routes.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "maxConnectionDuration": {
          "description": "The maximum duration of a connection. The duration is defined as the period since a connection was established. If not set, there is no max duration. When `maxConnectionDuration` is reached the connection will be closed. Duration must be at least 1ms.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "maxConnections": {
          "description": "Maximum number of HTTP1 /TCP connections to a destination host. Default 2^32-1.",
          "type": "integer",
          "format": "int32"
        },
        "tcpKeepalive": {
          "description": "If set then set SO_KEEPALIVE on the socket to enable TCP Keepalives.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings_TCPSettings_TcpKeepalive"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ConnectionPoolSettings_TCPSettings",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ConnectionPoolSettings_TCPSettings_TcpKeepalive": {
      "description": "TCP keepalive.",
      "type": "object",
      "properties": {
        "interval": {
          "description": "The time duration between keep-alive probes. Default is to use the OS level configuration (unless overridden, Linux defaults to 75s.)",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "probes": {
          "description": "Maximum number of keepalive probes to send without response before deciding the connection is dead. Default is to use the OS level configuration (unless overridden, Linux defaults to 9.)",
          "type": "integer",
          "format": "int64"
        },
        "time": {
          "description": "The time duration a connection needs to be idle before keep-alive probes start being sent. Default is to use the OS level configuration (unless overridden, Linux defaults to 7200s (ie 2 hours.)",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ConnectionPoolSettings_TCPSettings_TcpKeepalive",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.CorsPolicy": {
      "description": "Describes the Cross-Origin Resource Sharing (CORS) policy, for a given service. Refer to [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS) for further details about cross origin resource sharing. For example, the following rule restricts cross origin requests to those originating from example.com domain using HTTP POST/GET, and sets the `Access-Control-Allow-Credentials` header to false. In addition, it only exposes `X-Foo-bar` header and sets an expiry period of 1 day.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- route:\n\t  - destination:\n\t      host: ratings.prod.svc.cluster.local\n\t      subset: v1\n\t  corsPolicy:\n\t    allowOrigins:\n\t    - exact: https://example.com\n\t    allowMethods:\n\t    - POST\n\t    - GET\n\t    allowCredentials: false\n\t    allowHeaders:\n\t    - X-Foo-Bar\n\t    maxAge: \"24h\"\n\n```",
      "type": "object",
      "properties": {
        "allowCredentials": {
          "description": "Indicates whether the caller is allowed to send the actual request (not the preflight) using credentials. Translates to `Access-Control-Allow-Credentials` header.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        },
        "allowHeaders": {
          "description": "List of HTTP headers that can be used when requesting the resource. Serialized to Access-Control-Allow-Headers header.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "allowMethods": {
          "description": "List of HTTP methods allowed to access the resource. The content will be serialized into the Access-Control-Allow-Methods header.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "allowOrigin": {
          "description": "The list of origins that are allowed to perform CORS requests. The content will be serialized into the Access-Control-Allow-Origin header. Wildcard * will allow all origins. $hide_from_docs\n\nDeprecated: Marked as deprecated in networking/v1alpha3/virtual_service.proto.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "allowOrigins": {
          "description": "String patterns that match allowed origins. An origin is allowed if any of the string matchers match. If a match is found, then the outgoing Access-Control-Allow-Origin would be set to the origin as provided by the client.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
          }
        },
        "exposeHeaders": {
          "description": "A list of HTTP headers that the browsers are allowed to access. Serialized into Access-Control-Expose-Headers header.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "maxAge": {
          "description": "Specifies how long the results of a preflight request can be cached. Translates to the `Access-Control-Max-Age` header.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "unmatchedPreflights": {
          "description": "Indicates whether preflight requests not matching the configured allowed origin shouldn't be forwarded to the upstream. Default is forward to upstream.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.CorsPolicy_UnmatchedPreflights"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "CorsPolicy",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.CorsPolicy_UnmatchedPreflights": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "CorsPolicy_UnmatchedPreflights",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "FORWARD(1),IGNORE(2),UNSPECIFIED(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.Delegate": {
      "description": "Describes the delegate VirtualService. The following routing rules forward the traffic to `/productpage` by a delegate VirtualService named `productpage`, forward the traffic to `/reviews` by a delegate VirtualService named `reviews`.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: bookinfo\n\nspec:\n\n\thosts:\n\t- \"bookinfo.com\"\n\tgateways:\n\t- mygateway\n\thttp:\n\t- match:\n\t  - uri:\n\t      prefix: \"/productpage\"\n\t  delegate:\n\t     name: productpage\n\t     namespace: nsA\n\t- match:\n\t  - uri:\n\t      prefix: \"/reviews\"\n\t  delegate:\n\t      name: reviews\n\t      namespace: nsB\n\n```\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: productpage\n\tnamespace: nsA\n\nspec:\n\n\thttp:\n\t- match:\n\t   - uri:\n\t      prefix: \"/productpage/v1/\"\n\t  route:\n\t  - destination:\n\t      host: productpage-v1.nsA.svc.cluster.local\n\t- route:\n\t  - destination:\n\t      host: productpage.nsA.svc.cluster.local\n\n```\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: reviews\n\tnamespace: nsB\n\nspec:\n\n\thttp:\n\t- route:\n\t  - destination:\n\t      host: reviews.nsB.svc.cluster.local\n\n```",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name specifies the name of the delegate VirtualService.",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace specifies the namespace where the delegate VirtualService resides. By default, it is same to the root's.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Delegate",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Destination": {
      "description": "Destination indicates the network addressable service to which the request/connection will be sent after processing a routing rule. The destination.host should unambiguously refer to a service in the service registry. Istio's service registry is composed of all the services found in the platform's service registry (e.g., Kubernetes services, Consul services), as well as services declared through the [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry) resource.\n\n*Note for Kubernetes users*: When short names are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"), Istio will interpret the short name based on the namespace of the rule, not the service. A rule in the \"default\" namespace containing a host \"reviews\" will be interpreted as \"reviews.default.svc.cluster.local\", irrespective of the actual namespace associated with the reviews service. _To avoid potential misconfigurations, it is recommended to always use fully qualified domain names over short names._\n\nThe following Kubernetes example routes all traffic by default to pods of the reviews service with label \"version: v1\" (i.e., subset v1), and some to subset v2, in a Kubernetes environment.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: reviews-route\n\tnamespace: foo\n\nspec:\n\n\thosts:\n\t- reviews # interpreted as reviews.foo.svc.cluster.local\n\thttp:\n\t- match:\n\t  - uri:\n\t      prefix: \"/wpcatalog\"\n\t  - uri:\n\t      prefix: \"/consumercatalog\"\n\t  rewrite:\n\t    uri: \"/newcatalog\"\n\t  route:\n\t  - destination:\n\t      host: reviews # interpreted as reviews.foo.svc.cluster.local\n\t      subset: v2\n\t- route:\n\t  - destination:\n\t      host: reviews # interpreted as reviews.foo.svc.cluster.local\n\t      subset: v1\n\n```\n\n# And the associated DestinationRule\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: reviews-destination\n\tnamespace: foo\n\nspec:\n\n\thost: reviews # interpreted as reviews.foo.svc.cluster.local\n\tsubsets:\n\t- name: v1\n\t  labels:\n\t    version: v1\n\t- name: v2\n\t  labels:\n\t    version: v2\n\n```\n\nThe following VirtualService sets a timeout of 5s for all calls to productpage.prod.svc.cluster.local service in Kubernetes. Notice that there are no subsets defined in this rule. Istio will fetch all instances of productpage.prod.svc.cluster.local service from the service registry and populate the sidecar's load balancing pool. Also, notice that this rule is set in the istio-system namespace but uses the fully qualified domain name of the productpage service, productpage.prod.svc.cluster.local. Therefore the rule's namespace does not have an impact in resolving the name of the productpage service.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: my-productpage-rule\n\tnamespace: istio-system\n\nspec:\n\n\thosts:\n\t- productpage.prod.svc.cluster.local # ignores rule namespace\n\thttp:\n\t- timeout: 5s\n\t  route:\n\t  - destination:\n\t      host: productpage.prod.svc.cluster.local\n\n```\n\nTo control routing for traffic bound to services outside the mesh, external services must first be added to Istio's internal service registry using the ServiceEntry resource. VirtualServices can then be defined to control traffic bound to these external services. For example, the following rules define a Service for wikipedia.org and set a timeout of 5s for HTTP requests.\n\n```yaml apiVersion: networking.istio.io/v1 kind: ServiceEntry metadata:\n\n\tname: external-svc-wikipedia\n\nspec:\n\n\thosts:\n\t- wikipedia.org\n\tlocation: MESH_EXTERNAL\n\tports:\n\t- number: 80\n\t  name: example-http\n\t  protocol: HTTP\n\tresolution: DNS",
      "type": "object",
      "properties": {
        "host": {
          "description": "The name of a service from the service registry. Service names are looked up from the platform's service registry (e.g., Kubernetes services, Consul services, etc.) and from the hosts declared by [ServiceEntry](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Traffic forwarded to destinations that are not found in either of the two, will be dropped.\n\n*Note for Kubernetes users*: When short names are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"), Istio will interpret the short name based on the namespace of the rule, not the service. A rule in the \"default\" namespace containing a host \"reviews\" will be interpreted as \"reviews.default.svc.cluster.local\", irrespective of the actual namespace associated with the reviews service. To avoid potential misconfiguration, it is recommended to always use fully qualified domain names over short names.",
          "type": "string"
        },
        "port": {
          "description": "Specifies the port on the host that is being addressed. If a service exposes only a single port it is not required to explicitly select the port.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.PortSelector"
        },
        "subset": {
          "description": "The name of a subset within the service. Applicable only to services within the mesh. The subset must be defined in a corresponding DestinationRule.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Destination",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.DestinationRule": {
      "description": "DestinationRule defines policies that apply to traffic intended for a service after routing has occurred.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "exportTo": {
          "description": "A list of namespaces to which this destination rule is exported. The resolution of a destination rule to apply to a service occurs in the context of a hierarchy of namespaces. Exporting a destination rule allows it to be included in the resolution hierarchy for services in other namespaces. This feature provides a mechanism for service owners and mesh administrators to control the visibility of destination rules across namespace boundaries.\n\nIf no namespaces are specified then the destination rule is exported to all namespaces by default.\n\nThe value \".\" is reserved and defines an export to the same namespace that the destination rule is declared in. Similarly, the value \"*\" is reserved and defines an export to all namespaces.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "host": {
          "description": "The name of a service from the service registry. Service names are looked up from the platform's service registry (e.g., Kubernetes services, Consul services, etc.) and from the hosts declared by [ServiceEntries](https://istio.io/docs/reference/config/networking/service-entry/#ServiceEntry). Rules defined for services that do not exist in the service registry will be ignored.\n\n*Note for Kubernetes users*: When short names are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"), Istio will interpret the short name based on the namespace of the rule, not the service. A rule in the \"default\" namespace containing a host \"reviews\" will be interpreted as \"reviews.default.svc.cluster.local\", irrespective of the actual namespace associated with the reviews service. To avoid potential misconfigurations, it is recommended to always use fully qualified domain names over short names.\n\nNote that the host field applies to both HTTP and TCP services.",
          "type": "string"
        },
        "subsets": {
          "description": "One or more named sets that represent individual versions of a service. Traffic policies can be overridden at subset level.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Subset"
          }
        },
        "trafficPolicy": {
          "description": "Traffic policies to apply (load balancing policy, connection pool sizes, outlier detection).",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TrafficPolicy"
        },
        "workloadSelector": {
          "description": "Criteria used to select the specific set of pods/VMs on which this `DestinationRule` configuration should be applied. If specified, the `DestinationRule` configuration will be applied only to the workload instances matching the workload selector label in the same namespace. Workload selectors do not apply across namespace boundaries. If omitted, the `DestinationRule` falls back to its default behavior. For example, if specific sidecars need to have egress TLS settings for services outside of the mesh, instead of every sidecar in the mesh needing to have the configuration (which is the default behaviour), a workload selector can be specified.",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.WorkloadSelector"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "DestinationRule",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter": {
      "description": "EnvoyFilter provides a mechanism to customize the Envoy configuration generated by istiod.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "configPatches": {
          "description": "One or more patches with match conditions.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_EnvoyConfigObjectPatch"
          }
        },
        "priority": {
          "description": "Priority defines the order in which patch sets are applied within a context. When one patch depends on another patch, the order of patch application is significant. The API provides two primary ways to order patches. Patch sets in the root namespace are applied before the patch sets in the workload namespace. Patches within a patch set are processed in the order that they appear in the `configPatches` list.\n\nThe default value for priority is 0 and the range is [ min-int32, max-int32 ]. A patch set with a negative priority is processed before the default. A patch set with a positive priority is processed after the default.\n\nIt is recommended to start with priority values that are multiples of 10 to leave room for further insertion.\n\nPatch sets are sorted in the following ascending key order: priority, creation time, fully qualified resource name.",
          "type": "integer",
          "format": "int32"
        },
        "targetRefs": {
          "description": "Optional. The targetRefs specifies a list of resources the policy should be applied to. The targeted resources specified will determine which workloads the policy applies to.\n\nCurrently, the following resource attachment types are supported: * `kind: Gateway` with `group: gateway.networking.k8s.io` in the same namespace. * `kind: Service` with `\"\"` in the same namespace. This type is only supported for waypoints.\n\nIf not set, the policy is applied as defined by the selector. At most one of the selector and targetRefs can be set.\n\nNOTE: If you are using the `targetRefs` field in a multi-revision environment with Istio versions prior to 1.22, it is highly recommended that you pin the policy to a revision running 1.22+ via the `istio.io/rev` label. This is to prevent proxies connected to older control planes (that don't know about the `targetRefs` field) from misinterpreting the policy as namespace-wide during the upgrade process.\n\nNOTE: Waypoint proxies are required to use this field for policies to apply; `selector` policies will be ignored.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
          }
        },
        "workloadSelector": {
          "description": "Criteria used to select the specific set of pods/VMs on which this patch configuration should be applied. If omitted, the set of patches in this configuration will be applied to all workload instances in the same namespace. If the `EnvoyFilter` is present in the config root namespace, it will be applied to all applicable workloads in any namespace.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadSelector"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_ApplyTo": {
      "description": "`ApplyTo` specifies where in the Envoy configuration, the given patch should be applied.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_ApplyTo",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "BOOTSTRAP(10),CLUSTER(8),EXTENSION_CONFIG(9),FILTER_CHAIN(2),HTTP_FILTER(4),HTTP_ROUTE(7),INVALID(0),LISTENER(1),LISTENER_FILTER(11),NETWORK_FILTER(3),ROUTE_CONFIGURATION(5),VIRTUAL_HOST(6)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_ClusterMatch": {
      "description": "Conditions specified in `ClusterMatch` must be met for the patch to be applied to a cluster.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The exact name of the cluster to match. To match a specific cluster by name, such as the internally generated `Passthrough` cluster, leave all fields in clusterMatch empty, except the name.",
          "type": "string"
        },
        "portNumber": {
          "description": "The service port for which this cluster was generated.  If omitted, applies to clusters for any port. **Note:** for inbound cluster, it is the service target port.",
          "type": "integer",
          "format": "int64"
        },
        "service": {
          "description": "The fully qualified service name for this cluster. If omitted, applies to clusters for any service. For services defined through service entries, the service name is same as the hosts defined in the service entry. **Note:** for inbound cluster, this is ignored.",
          "type": "string"
        },
        "subset": {
          "description": "The subset associated with the service. If omitted, applies to clusters for any subset of a service.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_ClusterMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_EnvoyConfigObjectMatch": {
      "description": "One or more match conditions to be met before a patch is applied to the generated configuration for a given proxy.",
      "type": "object",
      "required": [
        "ObjectTypes"
      ],
      "properties": {
        "ObjectTypes": {
          "description": "Types that are assignable to ObjectTypes:\n\n\t*EnvoyFilter_EnvoyConfigObjectMatch_Listener\n\t*EnvoyFilter_EnvoyConfigObjectMatch_RouteConfiguration\n\t*EnvoyFilter_EnvoyConfigObjectMatch_Cluster",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsEnvoyFilter_EnvoyConfigObjectMatch_ObjectTypes"
        },
        "context": {
          "description": "The specific config generation context to match on. istiod generates envoy configuration in the context of a gateway, inbound traffic to sidecar and outbound traffic from sidecar.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_PatchContext"
        },
        "proxy": {
          "description": "Match on properties associated with a proxy.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_ProxyMatch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_EnvoyConfigObjectMatch",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "ObjectTypes"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_EnvoyConfigObjectMatch_Cluster": {
      "type": "object",
      "required": [
        "cluster"
      ],
      "properties": {
        "cluster": {
          "description": "Match on envoy cluster attributes.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_ClusterMatch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_EnvoyConfigObjectMatch_Cluster",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsEnvoyFilter_EnvoyConfigObjectMatch_ObjectTypes"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_EnvoyConfigObjectMatch_Listener": {
      "type": "object",
      "required": [
        "listener"
      ],
      "properties": {
        "listener": {
          "description": "Match on envoy listener attributes.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_EnvoyConfigObjectMatch_Listener",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsEnvoyFilter_EnvoyConfigObjectMatch_ObjectTypes"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_EnvoyConfigObjectMatch_RouteConfiguration": {
      "type": "object",
      "required": [
        "routeConfiguration"
      ],
      "properties": {
        "routeConfiguration": {
          "description": "Match on envoy HTTP route configuration attributes.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_EnvoyConfigObjectMatch_RouteConfiguration",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsEnvoyFilter_EnvoyConfigObjectMatch_ObjectTypes"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_EnvoyConfigObjectPatch": {
      "description": "Changes to be made to various envoy config objects.",
      "type": "object",
      "properties": {
        "applyTo": {
          "description": "Specifies where in the Envoy configuration, the patch should be applied.  The match is expected to select the appropriate object based on applyTo.  For example, an applyTo with `HTTP_FILTER` is expected to have a match condition on the listeners, with a network filter selection on `envoy.filters.network.http_connection_manager` and a sub filter selection on the HTTP filter relative to which the insertion should be performed. Similarly, an applyTo on `CLUSTER` should have a match (if provided) on the cluster and not on a listener.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_ApplyTo"
        },
        "match": {
          "description": "Match on listener/route configuration/cluster.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_EnvoyConfigObjectMatch"
        },
        "patch": {
          "description": "The patch to apply along with the operation.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_Patch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_EnvoyConfigObjectPatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch": {
      "description": "Conditions specified in a listener match must be met for the patch to be applied to a specific listener across all filter chains, or a specific filter chain inside the listener.",
      "type": "object",
      "properties": {
        "filterChain": {
          "description": "Match a specific filter chain in a listener. If specified, the patch will be applied to the filter chain (and a specific filter if specified) and not to other filter chains in the listener.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch_FilterChainMatch"
        },
        "listenerFilter": {
          "description": "Match a specific listener filter. If specified, the patch will be applied to the listener filter.",
          "type": "string"
        },
        "name": {
          "description": "Match a specific listener by its name. The listeners generated by istiod are typically named as IP:Port.",
          "type": "string"
        },
        "portName": {
          "description": "Instead of using specific port numbers, a set of ports matching a given service's port name can be selected. Matching is case insensitive. Not implemented. $hide_from_docs",
          "type": "string"
        },
        "portNumber": {
          "description": "The service port/gateway port to which traffic is being sent/received. If not specified, matches all listeners. Even though inbound listeners are generated for the instance/pod ports, only service ports should be used to match listeners.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_ListenerMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch_FilterChainMatch": {
      "description": "For listeners with multiple filter chains (e.g., inbound listeners on sidecars with permissive mTLS, gateway listeners with multiple SNI matches), the filter chain match can be used to select a specific filter chain to patch.",
      "type": "object",
      "properties": {
        "applicationProtocols": {
          "description": "Applies only to sidecars. If non-empty, a comma separated set of application protocols to consider when determining a filter chain match.  This value will be compared against the application protocols of a new connection, when it's detected by one of the listener filters such as the `http_inspector`.\n\nAccepted values include: h2, http/1.1, http/1.0",
          "type": "string"
        },
        "destinationPort": {
          "description": "The destination_port value used by a filter chain's match condition. This condition will evaluate to false if the filter chain has no destination_port match.",
          "type": "integer",
          "format": "int64"
        },
        "filter": {
          "description": "The name of a specific filter to apply the patch to. Set this to `envoy.filters.network.http_connection_manager` to add a filter or apply a patch to the HTTP connection manager.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch_FilterMatch"
        },
        "name": {
          "description": "The name assigned to the filter chain.",
          "type": "string"
        },
        "sni": {
          "description": "The SNI value used by a filter chain's match condition.  This condition will evaluate to false if the filter chain has no sni match.",
          "type": "string"
        },
        "transportProtocol": {
          "description": "Applies only to `SIDECAR_INBOUND` context. If non-empty, a transport protocol to consider when determining a filter chain match.  This value will be compared against the transport protocol of a new connection, when it's detected by the `tls_inspector` listener filter.\n\nAccepted values include:\n\n* `raw_buffer` - default, used when no transport protocol is detected. * `tls` - set when TLS protocol is detected by the TLS inspector.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_ListenerMatch_FilterChainMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch_FilterMatch": {
      "description": "Conditions to match a specific filter within a filter chain.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The filter name to match on. For standard Envoy filters, [canonical filter](https://www.envoyproxy.io/docs/envoy/latest/version_history/v1.14.0#deprecated) names should be used.",
          "type": "string"
        },
        "subFilter": {
          "description": "The next level filter within this filter to match upon. Typically used for HTTP Connection Manager filters and Thrift filters.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch_SubFilterMatch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_ListenerMatch_FilterMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_ListenerMatch_SubFilterMatch": {
      "description": "Conditions to match a specific filter within another filter. This field is typically useful to match a HTTP filter inside the `envoy.filters.network.http_connection_manager` network filter. This could also be applicable for thrift filters.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The filter name to match on.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_ListenerMatch_SubFilterMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_Patch": {
      "description": "Patch specifies how the selected object should be modified.",
      "type": "object",
      "properties": {
        "filterClass": {
          "description": "Determines the filter insertion order.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_Patch_FilterClass"
        },
        "operation": {
          "description": "Determines how the patch should be applied.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_Patch_Operation"
        },
        "value": {
          "description": "The JSON config of the object being patched. This will be merged using proto merge semantics with the existing proto in the path.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.structpb.Struct"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_Patch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_PatchContext": {
      "description": "PatchContext selects a class of configurations based on the traffic flow direction and workload type.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_PatchContext",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "ANY(0),GATEWAY(3),SIDECAR_INBOUND(1),SIDECAR_OUTBOUND(2)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_Patch_FilterClass": {
      "description": "FilterClass determines the filter insertion point in the filter chain relative to the filters implicitly inserted by the control plane. It is used in conjunction with the `ADD` operation. This is the preferred insertion mechanism for adding filters over the `INSERT_*` operations since those operations rely on potentially unstable filter names. Filter ordering is important if your filter depends on or affects the functioning of a another filter in the filter chain. Within a filter class, filters are inserted in the order of processing.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_Patch_FilterClass",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "AUTHN(1),AUTHZ(2),STATS(3),UNSPECIFIED(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_Patch_Operation": {
      "description": "Operation denotes how the patch should be applied to the selected configuration.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_Patch_Operation",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "ADD(2),INSERT_AFTER(5),INSERT_BEFORE(4),INSERT_FIRST(6),INVALID(0),MERGE(1),REMOVE(3),REPLACE(7)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_ProxyMatch": {
      "description": "One or more properties of the proxy to match on.",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Match on the node metadata supplied by a proxy when connecting to istiod. Note that while Envoy's node metadata is of type Struct, only string key-value pairs are processed by istiod. All keys specified in the metadata must match with exact values. The match will fail if any of the specified keys are absent or the values fail to match.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "proxyVersion": {
          "description": "A regular expression in golang regex format (RE2) that can be used to select proxies using a specific version of istio proxy. The Istio version for a given proxy is obtained from the node metadata field `ISTIO_VERSION` supplied by the proxy when connecting to istiod. This value is embedded as an environment variable (`ISTIO_META_ISTIO_VERSION`) in the Istio proxy docker image. Custom proxy implementations should provide this metadata variable to take advantage of the Istio version check option.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_ProxyMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch": {
      "description": "Conditions specified in RouteConfigurationMatch must be met for the patch to be applied to a route configuration object or a specific virtual host within the route configuration.",
      "type": "object",
      "properties": {
        "gateway": {
          "description": "The Istio gateway config's namespace/name for which this route configuration was generated. Applies only if the context is GATEWAY. Should be in the namespace/name format. Use this field in conjunction with the `portNumber` and `portName` to accurately select the Envoy route configuration for a specific HTTPS server within a gateway config object.",
          "type": "string"
        },
        "name": {
          "description": "Route configuration name to match on. Can be used to match a specific route configuration by name, such as the internally generated `http_proxy` route configuration for all sidecars.",
          "type": "string"
        },
        "portName": {
          "description": "Applicable only for GATEWAY context. The gateway server port name for which this route configuration was generated.",
          "type": "string"
        },
        "portNumber": {
          "description": "The service port number or gateway server port number for which this route configuration was generated. If omitted, applies to route configurations for all ports.",
          "type": "integer",
          "format": "int64"
        },
        "vhost": {
          "description": "Match a specific virtual host in a route configuration and apply the patch to the virtual host.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch_VirtualHostMatch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_RouteConfigurationMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch_RouteMatch": {
      "description": "Match a specific route inside a virtual host in a route configuration.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Match a route with specific action type.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch_RouteMatch_Action"
        },
        "name": {
          "description": "The Route objects generated by default are named as default.  Route objects generated using a virtual service will carry the name used in the virtual service's HTTP routes.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_RouteConfigurationMatch_RouteMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch_RouteMatch_Action": {
      "description": "Action refers to the route action taken by Envoy when a http route matches.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_RouteConfigurationMatch_RouteMatch_Action",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "ANY(0),DIRECT_RESPONSE(3),REDIRECT(2),ROUTE(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch_VirtualHostMatch": {
      "description": "Match a specific virtual host inside a route configuration.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The VirtualHosts objects generated by Istio are named as host:port, where the host typically corresponds to the VirtualService's host field or the hostname of a service in the registry.",
          "type": "string"
        },
        "route": {
          "description": "Match a specific route within the virtual host.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter_RouteConfigurationMatch_RouteMatch"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter_RouteConfigurationMatch_VirtualHostMatch",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ExecHealthCheckConfig": {
      "type": "object",
      "properties": {
        "command": {
          "description": "Command to run. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ExecHealthCheckConfig",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Gateway": {
      "description": "Gateway describes a load balancer operating at the edge of the mesh receiving incoming or outgoing HTTP/TCP connections.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "selector": {
          "description": "One or more labels that indicate a specific set of pods/VMs on which this gateway configuration should be applied. By default workloads are searched across all namespaces based on label selectors. This implies that a gateway resource in the namespace \"foo\" can select pods in the namespace \"bar\" based on labels. This behavior can be controlled via the `PILOT_SCOPE_GATEWAY_TO_NAMESPACE` environment variable in istiod. If this variable is set to true, the scope of label search is restricted to the configuration namespace in which the the resource is present. In other words, the Gateway resource must reside in the same namespace as the gateway workload instance. If selector is nil, the Gateway will be applied to all workloads.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "servers": {
          "description": "A list of server specifications.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Server"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Gateway",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPBody": {
      "type": "object",
      "required": [
        "Specifier"
      ],
      "properties": {
        "Specifier": {
          "description": "Types that are assignable to Specifier:\n\n\t*HTTPBody_String_\n\t*HTTPBody_Bytes",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsHTTPBody_Specifier"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPBody",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "Specifier"
    },
    "io.istio.api.networking.v1alpha3.HTTPBody_Bytes": {
      "description": "response body as base64 encoded bytes.",
      "type": "object",
      "required": [
        "bytes"
      ],
      "properties": {
        "bytes": {
          "description": "response body as base64 encoded bytes.",
          "type": "string",
          "format": "byte"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPBody_Bytes",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPBody_Specifier"
    },
    "io.istio.api.networking.v1alpha3.HTTPBody_String_": {
      "description": "response body as a string",
      "type": "object",
      "required": [
        "string"
      ],
      "properties": {
        "string": {
          "description": "response body as a string",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPBody_String_",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPBody_Specifier"
    },
    "io.istio.api.networking.v1alpha3.HTTPDirectResponse": {
      "description": "HTTPDirectResponse can be used to send a fixed response to clients. For example, the following rule returns a fixed 503 status with a body to requests for /v1/getProductRatings API.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- match:\n\t  - uri:\n\t      exact: /v1/getProductRatings\n\t  directResponse:\n\t    status: 503\n\t    body:\n\t      string: \"unknown error\"\n\t...\n\n```\n\nIt is also possible to specify a binary response body. This is mostly useful for non text-based protocols such as gRPC.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- match:\n\t  - uri:\n\t      exact: /v1/getProductRatings\n\t  directResponse:\n\t    status: 503\n\t    body:\n\t      bytes: \"dW5rbm93biBlcnJvcg==\" # \"unknown error\" in base64\n\t...\n\n```\n\nIt is good practice to add headers in the HTTPRoute as well as the direct_response, for example to specify the returned Content-Type.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- match:\n\t  - uri:\n\t      exact: /v1/getProductRatings\n\t  directResponse:\n\t    status: 503\n\t    body:\n\t      string: \"{\\\"error\\\": \\\"unknown error\\\"}\"\n\t  headers:\n\t    response:\n\t      set:\n\t        content-type: \"text/plain\"\n\t...\n\n```",
      "type": "object",
      "properties": {
        "body": {
          "description": "Specifies the content of the response body. If this setting is omitted, no body is included in the generated response.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPBody"
        },
        "status": {
          "description": "Specifies the HTTP response status to be returned.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPDirectResponse",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection": {
      "description": "HTTPFaultInjection can be used to specify one or more faults to inject while forwarding HTTP requests to the destination specified in a route. Fault specification is part of a VirtualService rule. Faults include aborting the Http request from downstream service, and/or delaying proxying of requests. A fault rule MUST HAVE delay or abort or both.\n\n*Note:* Delay and abort faults are independent of one another, even if both are specified simultaneously.",
      "type": "object",
      "properties": {
        "abort": {
          "description": "Abort Http request attempts and return error codes back to downstream service, giving the impression that the upstream service is faulty.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPFaultInjection_Abort"
        },
        "delay": {
          "description": "Delay requests before forwarding, emulating various failures such as network issues, overloaded upstream service, etc.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPFaultInjection_Delay"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection_Abort": {
      "description": "Abort specification is used to prematurely abort a request with a pre-specified error code. The following example will return an HTTP 400 error code for 1 out of every 1000 requests to the \"ratings\" service \"v1\".\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- route:\n\t  - destination:\n\t      host: ratings.prod.svc.cluster.local\n\t      subset: v1\n\t  fault:\n\t    abort:\n\t      percentage:\n\t        value: 0.1\n\t      httpStatus: 400\n\n```\n\nThe _httpStatus_ field is used to indicate the HTTP status code to return to the caller. The optional _percentage_ field can be used to only abort a certain percentage of requests. If not specified, no request will be aborted.",
      "type": "object",
      "required": [
        "ErrorType"
      ],
      "properties": {
        "ErrorType": {
          "description": "Types that are assignable to ErrorType:\n\n\t*HTTPFaultInjection_Abort_HttpStatus\n\t*HTTPFaultInjection_Abort_GrpcStatus\n\t*HTTPFaultInjection_Abort_Http2Error",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsHTTPFaultInjection_Abort_ErrorType"
        },
        "percentage": {
          "description": "Percentage of requests to be aborted with the error code provided. If not specified, no request will be aborted.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Percent"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection_Abort",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "ErrorType"
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection_Abort_GrpcStatus": {
      "description": "GRPC status code to use to abort the request. The supported codes are documented in https://github.com/grpc/grpc/blob/master/doc/statuscodes.md Note: If you want to return the status \"Unavailable\", then you should specify the code as `UNAVAILABLE`(all caps), but not `14`.",
      "type": "object",
      "required": [
        "grpcStatus"
      ],
      "properties": {
        "grpcStatus": {
          "description": "GRPC status code to use to abort the request. The supported codes are documented in https://github.com/grpc/grpc/blob/master/doc/statuscodes.md Note: If you want to return the status \"Unavailable\", then you should specify the code as `UNAVAILABLE`(all caps), but not `14`.",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection_Abort_GrpcStatus",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPFaultInjection_Abort_ErrorType"
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection_Abort_Http2Error": {
      "description": "$hide_from_docs",
      "type": "object",
      "required": [
        "http2Error"
      ],
      "properties": {
        "http2Error": {
          "description": "$hide_from_docs",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection_Abort_Http2Error",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPFaultInjection_Abort_ErrorType"
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection_Abort_HttpStatus": {
      "description": "HTTP status code to use to abort the Http request.",
      "type": "object",
      "required": [
        "httpStatus"
      ],
      "properties": {
        "httpStatus": {
          "description": "HTTP status code to use to abort the Http request.",
          "type": "integer",
          "format": "int32",
          "default": 0
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection_Abort_HttpStatus",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPFaultInjection_Abort_ErrorType"
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection_Delay": {
      "description": "Delay specification is used to inject latency into the request forwarding path. The following example will introduce a 5 second delay in 1 out of every 1000 requests to the \"v1\" version of the \"reviews\" service from all pods with label env: prod\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: reviews-route\n\nspec:\n\n\thosts:\n\t- reviews.prod.svc.cluster.local\n\thttp:\n\t- match:\n\t  - sourceLabels:\n\t      env: prod\n\t  route:\n\t  - destination:\n\t      host: reviews.prod.svc.cluster.local\n\t      subset: v1\n\t  fault:\n\t    delay:\n\t      percentage:\n\t        value: 0.1\n\t      fixedDelay: 5s\n\n```\n\nThe _fixedDelay_ field is used to indicate the amount of delay in seconds. The optional _percentage_ field can be used to only delay a certain percentage of requests. If left unspecified, no request will be delayed.",
      "type": "object",
      "required": [
        "HttpDelayType"
      ],
      "properties": {
        "HttpDelayType": {
          "description": "Types that are assignable to HttpDelayType:\n\n\t*HTTPFaultInjection_Delay_FixedDelay\n\t*HTTPFaultInjection_Delay_ExponentialDelay",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsHTTPFaultInjection_Delay_HttpDelayType"
        },
        "percent": {
          "description": "Percentage of requests on which the delay will be injected (0-100). Use of integer `percent` value is deprecated. Use the double `percentage` field instead.\n\nDeprecated: Marked as deprecated in networking/v1alpha3/virtual_service.proto.",
          "type": "integer",
          "format": "int32"
        },
        "percentage": {
          "description": "Percentage of requests on which the delay will be injected. If left unspecified, no request will be delayed.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Percent"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection_Delay",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "HttpDelayType"
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection_Delay_ExponentialDelay": {
      "description": "$hide_from_docs",
      "type": "object",
      "required": [
        "exponentialDelay"
      ],
      "properties": {
        "exponentialDelay": {
          "description": "$hide_from_docs",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection_Delay_ExponentialDelay",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPFaultInjection_Delay_HttpDelayType"
    },
    "io.istio.api.networking.v1alpha3.HTTPFaultInjection_Delay_FixedDelay": {
      "description": "Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms. MUST be \u003e=1ms.",
      "type": "object",
      "required": [
        "fixedDelay"
      ],
      "properties": {
        "fixedDelay": {
          "description": "Add a fixed delay before forwarding the request. Format: 1h/1m/1s/1ms. MUST be \u003e=1ms.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPFaultInjection_Delay_FixedDelay",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPFaultInjection_Delay_HttpDelayType"
    },
    "io.istio.api.networking.v1alpha3.HTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPHeader",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPHealthCheckConfig": {
      "type": "object",
      "properties": {
        "host": {
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Headers the proxy will pass on to make the request. Allows repeated headers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPHeader"
          }
        },
        "path": {
          "description": "Path to access on the HTTP server.",
          "type": "string"
        },
        "port": {
          "description": "Port on which the endpoint lives.",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "HTTP or HTTPS, defaults to HTTP",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPHealthCheckConfig",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPMatchRequest": {
      "description": "HttpMatchRequest specifies a set of criteria to be met in order for the rule to be applied to the HTTP request. For example, the following restricts the rule to match only requests where the URL path starts with /ratings/v2/ and the request contains a custom `end-user` header with value `jason`.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- match:\n\t  - headers:\n\t      end-user:\n\t        exact: jason\n\t    uri:\n\t      prefix: \"/ratings/v2/\"\n\t    ignoreUriCase: true\n\t  route:\n\t  - destination:\n\t      host: ratings.prod.svc.cluster.local\n\n```\n\nHTTPMatchRequest CANNOT be empty. **Note:** 1. If a root VirtualService have matched any property (path, header etc.) by regex, delegate VirtualServices should not have any other matches on the same property. 2. If a delegate VirtualService have matched any property (path, header etc.) by regex, root VirtualServices should not have any other matches on the same property.",
      "type": "object",
      "properties": {
        "authority": {
          "description": "HTTP Authority values are case-sensitive and formatted as follows:\n\n- `exact: \"value\"` for exact string match\n\n- `prefix: \"value\"` for prefix-based match\n\n- `regex: \"value\"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
        },
        "gateways": {
          "description": "Names of gateways where the rule should be applied. Gateway names in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway match is independent of sourceLabels.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "headers": {
          "description": "The header keys must be lowercase and use hyphen as the separator, e.g. _x-request-id_.\n\nHeader values are case-sensitive and formatted as follows:\n\n- `exact: \"value\"` for exact string match\n\n- `prefix: \"value\"` for prefix-based match\n\n- `regex: \"value\"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).\n\nIf the value is empty and only the name of header is specified, presence of the header is checked. To provide an empty value, use `{}`, for example:\n\n```\n  - match:\n  - headers:\n    myheader: {}\n\n``` **Note:** The keys `uri`, `scheme`, `method`, and `authority` will be ignored.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
          }
        },
        "ignoreUriCase": {
          "description": "Flag to specify whether the URI matching should be case-insensitive.\n\n**Note:** The case will be ignored only in the case of `exact` and `prefix` URI matches.",
          "type": "boolean"
        },
        "method": {
          "description": "HTTP Method values are case-sensitive and formatted as follows:\n\n- `exact: \"value\"` for exact string match\n\n- `prefix: \"value\"` for prefix-based match\n\n- `regex: \"value\"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
        },
        "name": {
          "description": "The name assigned to a match. The match's name will be concatenated with the parent route's name and will be logged in the access logs for requests matching this route.",
          "type": "string"
        },
        "port": {
          "description": "Specifies the ports on the host that is being addressed. Many services only expose a single port or label ports with the protocols they support, in these cases it is not required to explicitly select the port.",
          "type": "integer",
          "format": "int64"
        },
        "queryParams": {
          "description": "Query parameters for matching.\n\nEx:\n\n  - For a query parameter like \"?key=true\", the map key would be \"key\" and\n    the string match could be defined as `exact: \"true\"`.\n\n  - For a query parameter like \"?key\", the map key would be \"key\" and the\n    string match could be defined as `exact: \"\"`.\n\n  - For a query parameter like \"?key=abc\" or \"?key=abx\", the map key would be \"key\" and the\n    string match could be defined as `prefix: \"ab\"`.\n\n  - For a query parameter like \"?key=123\", the map key would be \"key\" and the\n    string match could be defined as `regex: \"\\d+$\"`. Note that this\n    configuration will only match values like \"123\" but not \"a123\" or \"123a\".",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
          }
        },
        "scheme": {
          "description": "URI Scheme values are case-sensitive and formatted as follows:\n\n- `exact: \"value\"` for exact string match\n\n- `prefix: \"value\"` for prefix-based match\n\n- `regex: \"value\"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
        },
        "sourceLabels": {
          "description": "One or more labels that constrain the applicability of a rule to source (client) workloads with the given labels. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "sourceNamespace": {
          "description": "Source namespace constraining the applicability of a rule to workloads in that namespace. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.",
          "type": "string"
        },
        "statPrefix": {
          "description": "The human readable prefix to use when emitting statistics for this route. The statistics are generated with prefix route.\u003cstat_prefix\u003e. This should be set for highly critical routes that one wishes to get \"per-route\" statistics on. This prefix is only for proxy-level statistics (envoy_*) and not service-level (istio_*) statistics. Refer to https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route_components.proto#envoy-v3-api-field-config-route-v3-route-stat-prefix for statistics that are generated when this is configured.",
          "type": "string"
        },
        "uri": {
          "description": "URI to match values are case-sensitive and formatted as follows:\n\n- `exact: \"value\"` for exact string match\n\n- `prefix: \"value\"` for prefix-based match\n\n- `regex: \"value\"` for [RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).\n\n**Note:** Case-insensitive matching could be enabled via the `ignoreUriCase` flag.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
        },
        "withoutHeaders": {
          "description": "withoutHeader has the same syntax with the header, but has opposite meaning. If a header is matched with a matching rule among withoutHeader, the traffic becomes not matched one.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.StringMatch"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPMatchRequest",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPMirrorPolicy": {
      "description": "HTTPMirrorPolicy can be used to specify the destinations to mirror HTTP traffic in addition to the original destination. Mirrored traffic is on a best effort basis where the sidecar/gateway will not wait for the mirrored destinations to respond before returning the response from the original destination. Statistics will be generated for the mirrored destination.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Destination specifies the target of the mirror operation.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Destination"
        },
        "percentage": {
          "description": "Percentage of the traffic to be mirrored by the `destination` field. If this field is absent, all the traffic (100%) will be mirrored. Max value is 100.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Percent"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPMirrorPolicy",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPRedirect": {
      "description": "HTTPRedirect can be used to send a 301 redirect response to the caller, where the Authority/Host and the URI in the response can be swapped with the specified values. For example, the following rule redirects requests for /v1/getProductRatings API on the ratings service to /v1/bookRatings provided by the bookratings service.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- match:\n\t  - uri:\n\t      exact: /v1/getProductRatings\n\t  redirect:\n\t    uri: /v1/bookRatings\n\t    authority: newratings.default.svc.cluster.local\n\t...\n\n```",
      "type": "object",
      "required": [
        "RedirectPort"
      ],
      "properties": {
        "RedirectPort": {
          "description": "Types that are assignable to RedirectPort:\n\n\t*HTTPRedirect_Port\n\t*HTTPRedirect_DerivePort",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsHTTPRedirect_RedirectPort"
        },
        "authority": {
          "description": "On a redirect, overwrite the Authority/Host portion of the URL with this value.",
          "type": "string"
        },
        "redirectCode": {
          "description": "On a redirect, Specifies the HTTP status code to use in the redirect response. The default response code is MOVED_PERMANENTLY (301).",
          "type": "integer",
          "format": "int64"
        },
        "scheme": {
          "description": "On a redirect, overwrite the scheme portion of the URL with this value. For example, `http` or `https`. If unset, the original scheme will be used. If `derivePort` is set to `FROM_PROTOCOL_DEFAULT`, this will impact the port used as well",
          "type": "string"
        },
        "uri": {
          "description": "On a redirect, overwrite the Path portion of the URL with this value. Note that the entire path will be replaced, irrespective of the request URI being matched as an exact path or prefix.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRedirect",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "RedirectPort"
    },
    "io.istio.api.networking.v1alpha3.HTTPRedirect_DerivePort": {
      "description": "On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS. * FROM_REQUEST_PORT: automatically use the port of the request.",
      "type": "object",
      "required": [
        "derivePort"
      ],
      "properties": {
        "derivePort": {
          "description": "On a redirect, dynamically set the port: * FROM_PROTOCOL_DEFAULT: automatically set to 80 for HTTP and 443 for HTTPS. * FROM_REQUEST_PORT: automatically use the port of the request.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPRedirect_RedirectPortSelection"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRedirect_DerivePort",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPRedirect_RedirectPort"
    },
    "io.istio.api.networking.v1alpha3.HTTPRedirect_Port": {
      "description": "On a redirect, overwrite the port portion of the URL with this value.",
      "type": "object",
      "required": [
        "port"
      ],
      "properties": {
        "port": {
          "description": "On a redirect, overwrite the port portion of the URL with this value.",
          "type": "integer",
          "format": "int64",
          "default": 0
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRedirect_Port",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsHTTPRedirect_RedirectPort"
    },
    "io.istio.api.networking.v1alpha3.HTTPRedirect_RedirectPortSelection": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRedirect_RedirectPortSelection",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "FROM_PROTOCOL_DEFAULT(0),FROM_REQUEST_PORT(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.HTTPRetry": {
      "description": "Describes the retry policy to use when a HTTP request fails. For example, the following rule sets the maximum number of retries to 3 when calling ratings:v1 service, with a 2s timeout per retry attempt. A retry will be attempted if there is a connect-failure, refused_stream or when the upstream server responds with Service Unavailable(503).\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- route:\n\t  - destination:\n\t      host: ratings.prod.svc.cluster.local\n\t      subset: v1\n\t  retries:\n\t    attempts: 3\n\t    perTryTimeout: 2s\n\t    retryOn: gateway-error,connect-failure,refused-stream\n\n```",
      "type": "object",
      "properties": {
        "attempts": {
          "description": "Number of retries to be allowed for a given request. The interval between retries will be determined automatically (25ms+). When request `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute) or `per_try_timeout` is configured, the actual number of retries attempted also depends on the specified request `timeout` and `per_try_timeout` values. MUST be \u003e= 0. If `0`, retries will be disabled. The maximum possible number of requests made will be 1 + `attempts`.",
          "type": "integer",
          "format": "int32"
        },
        "perTryTimeout": {
          "description": "Timeout per attempt for a given request, including the initial call and any retries. Format: 1h/1m/1s/1ms. MUST be \u003e=1ms. Default is same value as request `timeout` of the [HTTP route](https://istio.io/docs/reference/config/networking/virtual-service/#HTTPRoute), which means no timeout.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "retryOn": {
          "description": "Specifies the conditions under which retry takes place. One or more policies can be specified using a ‘,’ delimited list. See the [retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-on) and [gRPC retry policies](https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-retry-grpc-on) for more details.\n\nIn addition to the policies specified above, a list of HTTP status codes can be passed, such as `retryOn: \"503,reset\"`. Note these status codes refer to the actual responses received from the destination. For example, if a connection is reset, Istio will translate this to 503 for it's response. However, the destination did not return a 503 error, so this would not match `\"503\"` (it would, however, match `\"reset\"`).\n\nIf not specified, this defaults to `connect-failure,refused-stream,unavailable,cancelled,503`.",
          "type": "string"
        },
        "retryRemoteLocalities": {
          "description": "Flag to specify whether the retries should retry to other localities. See the [retry plugin configuration](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/http/http_connection_management#retry-plugin-configuration) for more details.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRetry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPRewrite": {
      "description": "HTTPRewrite can be used to rewrite specific parts of a HTTP request before forwarding the request to the destination. Rewrite primitive can be used only with HTTPRouteDestination. The following example demonstrates how to rewrite the URL prefix for api call (/ratings) to ratings service before making the actual API call.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: ratings-route\n\nspec:\n\n\thosts:\n\t- ratings.prod.svc.cluster.local\n\thttp:\n\t- match:\n\t  - uri:\n\t      prefix: /ratings\n\t  rewrite:\n\t    uri: /v1/bookRatings\n\t  route:\n\t  - destination:\n\t      host: ratings.prod.svc.cluster.local\n\t      subset: v1\n\n```",
      "type": "object",
      "properties": {
        "authority": {
          "description": "rewrite the Authority/Host header with this value.",
          "type": "string"
        },
        "uri": {
          "description": "rewrite the path (or the prefix) portion of the URI with this value. If the original URI was matched based on prefix, the value provided in this field will replace the corresponding matched prefix.",
          "type": "string"
        },
        "uriRegexRewrite": {
          "description": "rewrite the path portion of the URI with the specified regex.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.RegexRewrite"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRewrite",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPRoute": {
      "description": "Describes match conditions and actions for routing HTTP/1.1, HTTP2, and gRPC traffic. See VirtualService for usage examples.",
      "type": "object",
      "properties": {
        "corsPolicy": {
          "description": "Cross-Origin Resource Sharing policy (CORS). Refer to [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) for further details about cross origin resource sharing.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.CorsPolicy"
        },
        "delegate": {
          "description": "Delegate is used to specify the particular VirtualService which can be used to define delegate HTTPRoute.\n\nIt can be set only when `Route` and `Redirect` are empty, and the route rules of the delegate VirtualService will be merged with that in the current one.\n\n**NOTE**:\n\n 1. Only one level delegation is supported.\n 2. The delegate's HTTPMatchRequest must be a strict subset of the root's,\n    otherwise there is a conflict and the HTTPRoute will not take effect.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Delegate"
        },
        "directResponse": {
          "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic. Direct Response is used to specify a fixed response that should be sent to clients.\n\nIt can be set only when `Route` and `Redirect` are empty.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPDirectResponse"
        },
        "fault": {
          "description": "Fault injection policy to apply on HTTP traffic at the client side. Note that timeouts or retries will not be enabled when faults are enabled on the client side.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPFaultInjection"
        },
        "headers": {
          "description": "Header manipulation rules",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Headers"
        },
        "match": {
          "description": "Match conditions to be satisfied for the rule to be activated. All conditions inside a single match block have AND semantics, while the list of match blocks have OR semantics. The rule is matched if any one of the match blocks succeed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPMatchRequest"
          }
        },
        "mirror": {
          "description": "Mirror HTTP traffic to a another destination in addition to forwarding the requests to the intended destination. Mirrored traffic is on a best effort basis where the sidecar/gateway will not wait for the mirrored cluster to respond before returning the response from the original destination.  Statistics will be generated for the mirrored destination.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Destination"
        },
        "mirrorPercent": {
          "description": "Percentage of the traffic to be mirrored by the `mirror` field. Use of integer `mirror_percent` value is deprecated. Use the double `mirror_percentage` field instead $hide_from_docs\n\nDeprecated: Marked as deprecated in networking/v1alpha3/virtual_service.proto.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.UInt32Value"
        },
        "mirrorPercentage": {
          "description": "Percentage of the traffic to be mirrored by the `mirror` field. If this field is absent, all the traffic (100%) will be mirrored. Max value is 100.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Percent"
        },
        "mirrors": {
          "description": "Specifies the destinations to mirror HTTP traffic in addition to the original destination. Mirrored traffic is on a best effort basis where the sidecar/gateway will not wait for the mirrored destinations to respond before returning the response from the original destination. Statistics will be generated for the mirrored destination.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPMirrorPolicy"
          }
        },
        "name": {
          "description": "The name assigned to the route for debugging purposes. The route's name will be concatenated with the match's name and will be logged in the access logs for requests matching this route/match.",
          "type": "string"
        },
        "redirect": {
          "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic. If traffic passthrough option is specified in the rule, route/redirect will be ignored. The redirect primitive can be used to send a HTTP 301 redirect to a different URI or Authority.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPRedirect"
        },
        "retries": {
          "description": "Retry policy for HTTP requests.\n\nNote: the default cluster-wide retry policy, if not specified, is:\n\n```yaml attempts: 2 retryOn: \"connect-failure,refused-stream,unavailable,cancelled,503\" ```\n\nThis can be customized in [`Mesh Config` `defaultHttpRetryPolicy`](https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig).",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPRetry"
        },
        "rewrite": {
          "description": "Rewrite HTTP URIs and Authority headers. Rewrite cannot be used with Redirect primitive. Rewrite will be performed before forwarding.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPRewrite"
        },
        "route": {
          "description": "A HTTP rule can either return a direct_response, redirect or forward (default) traffic. The forwarding target can be one of several versions of a service (see glossary in beginning of document). Weights associated with the service version determine the proportion of traffic it receives.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPRouteDestination"
          }
        },
        "timeout": {
          "description": "Timeout for HTTP requests, default is disabled.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRoute",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.HTTPRouteDestination": {
      "description": "Each routing rule is associated with one or more service versions (see glossary in beginning of document). Weights associated with the version determine the proportion of traffic it receives. For example, the following rule will route 25% of traffic for the \"reviews\" service to instances with the \"v2\" tag and the remaining traffic (i.e., 75%) to \"v1\".\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: reviews-route\n\nspec:\n\n\thosts:\n\t- reviews.prod.svc.cluster.local\n\thttp:\n\t- route:\n\t  - destination:\n\t      host: reviews.prod.svc.cluster.local\n\t      subset: v2\n\t    weight: 25\n\t  - destination:\n\t      host: reviews.prod.svc.cluster.local\n\t      subset: v1\n\t    weight: 75\n\n```\n\n# And the associated DestinationRule\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: reviews-destination\n\nspec:\n\n\thost: reviews.prod.svc.cluster.local\n\tsubsets:\n\t- name: v1\n\t  labels:\n\t    version: v1\n\t- name: v2\n\t  labels:\n\t    version: v2\n\n```\n\nTraffic can also be split across two entirely different services without having to define new subsets. For example, the following rule forwards 25% of traffic to reviews.com to dev.reviews.com\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: reviews-route-two-domains\n\nspec:\n\n\thosts:\n\t- reviews.com\n\thttp:\n\t- route:\n\t  - destination:\n\t      host: dev.reviews.com\n\t    weight: 25\n\t  - destination:\n\t      host: reviews.com\n\t    weight: 75\n\n```",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Destination"
        },
        "headers": {
          "description": "Header manipulation rules",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Headers"
        },
        "weight": {
          "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination. A destination will receive `weight/(sum of all weights)` requests. If there is only one destination in a rule, it will receive all traffic. Otherwise, if weight is `0`, the destination will not receive any traffic.",
          "type": "integer",
          "format": "int32"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "HTTPRouteDestination",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Headers": {
      "description": "Message headers can be manipulated when Envoy forwards requests to, or responses from, a destination service. Header manipulation rules can be specified for a specific route destination or for all destinations. The following VirtualService adds a `test` header with the value `true` to requests that are routed to any `reviews` service destination. It also removes the `foo` response header, but only from responses coming from the `v1` subset (version) of the `reviews` service.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: reviews-route\n\nspec:\n\n\thosts:\n\t- reviews.prod.svc.cluster.local\n\thttp:\n\t- headers:\n\t    request:\n\t      set:\n\t        test: \"true\"\n\t  route:\n\t  - destination:\n\t      host: reviews.prod.svc.cluster.local\n\t      subset: v2\n\t    weight: 25\n\t  - destination:\n\t      host: reviews.prod.svc.cluster.local\n\t      subset: v1\n\t    headers:\n\t      response:\n\t        remove:\n\t        - foo\n\t    weight: 75\n\n```",
      "type": "object",
      "properties": {
        "request": {
          "description": "Header manipulation rules to apply before forwarding a request to the destination service",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Headers_HeaderOperations"
        },
        "response": {
          "description": "Header manipulation rules to apply before returning a response to the caller",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Headers_HeaderOperations"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Headers",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Headers_HeaderOperations": {
      "description": "HeaderOperations Describes the header manipulations to apply",
      "type": "object",
      "properties": {
        "add": {
          "description": "Append the given values to the headers specified by keys (will create a comma-separated list of values)",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "remove": {
          "description": "Remove the specified headers",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "set": {
          "description": "Overwrite the headers specified by key with the given values",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Headers_HeaderOperations",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.IsEnvoyFilter_EnvoyConfigObjectMatch_ObjectTypes": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsEnvoyFilter_EnvoyConfigObjectMatch_ObjectTypes",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "EnvoyFilter_EnvoyConfigObjectMatch_Cluster,EnvoyFilter_EnvoyConfigObjectMatch_Listener,EnvoyFilter_EnvoyConfigObjectMatch_RouteConfiguration",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsHTTPBody_Specifier": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsHTTPBody_Specifier",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "HTTPBody_Bytes,HTTPBody_String_",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsHTTPFaultInjection_Abort_ErrorType": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsHTTPFaultInjection_Abort_ErrorType",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "HTTPFaultInjection_Abort_GrpcStatus,HTTPFaultInjection_Abort_Http2Error,HTTPFaultInjection_Abort_HttpStatus",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsHTTPFaultInjection_Delay_HttpDelayType": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsHTTPFaultInjection_Delay_HttpDelayType",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "HTTPFaultInjection_Delay_ExponentialDelay,HTTPFaultInjection_Delay_FixedDelay",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsHTTPRedirect_RedirectPort": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsHTTPRedirect_RedirectPort",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "HTTPRedirect_DerivePort,HTTPRedirect_Port",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsLoadBalancerSettings_ConsistentHashLB_HashAlgorithm": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsLoadBalancerSettings_ConsistentHashLB_HashAlgorithm",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "LoadBalancerSettings_ConsistentHashLB_Maglev,LoadBalancerSettings_ConsistentHashLB_RingHash_",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsLoadBalancerSettings_ConsistentHashLB_HashKey": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsLoadBalancerSettings_ConsistentHashLB_HashKey",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "LoadBalancerSettings_ConsistentHashLB_HttpCookie,LoadBalancerSettings_ConsistentHashLB_HttpHeaderName,LoadBalancerSettings_ConsistentHashLB_HttpQueryParameterName,LoadBalancerSettings_ConsistentHashLB_UseSourceIp",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsLoadBalancerSettings_LbPolicy": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsLoadBalancerSettings_LbPolicy",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "LoadBalancerSettings_ConsistentHash,LoadBalancerSettings_Simple",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsReadinessProbe_HealthCheckMethod": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsReadinessProbe_HealthCheckMethod",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "ReadinessProbe_Exec,ReadinessProbe_HttpGet,ReadinessProbe_TcpSocket",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IsStringMatch_MatchType": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IsStringMatch_MatchType",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "StringMatch_Exact,StringMatch_Prefix,StringMatch_Regex",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.networking.v1alpha3.IstioEgressListener": {
      "description": "`IstioEgressListener` specifies the properties of an outbound traffic listener on the sidecar proxy attached to a workload instance.",
      "type": "object",
      "properties": {
        "bind": {
          "description": "The IP(IPv4 or IPv6) or the Unix domain socket to which the listener should be bound to. Port MUST be specified if bind is not empty. Format: IPv4 or IPv6 address formats or `unix:///path/to/uds` or `unix://@foobar` (Linux abstract namespace). If omitted, Istio will automatically configure the defaults based on imported services, the workload instances to which this configuration is applied to and the captureMode. If captureMode is `NONE`, bind will default to 127.0.0.1.",
          "type": "string"
        },
        "captureMode": {
          "description": "When the bind address is an IP, the captureMode option dictates how traffic to the listener is expected to be captured (or not). captureMode must be DEFAULT or `NONE` for Unix domain socket binds.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.CaptureMode"
        },
        "hosts": {
          "description": "One or more service hosts exposed by the listener in `namespace/dnsName` format. Services in the specified namespace matching `dnsName` will be exposed. The corresponding service can be a service in the service registry (e.g., a Kubernetes or cloud foundry service) or a service specified using a `ServiceEntry` or `VirtualService` configuration. Any associated `DestinationRule` in the same namespace will also be used.\n\nThe `dnsName` should be specified using FQDN format, optionally including a wildcard character in the left-most component (e.g., `prod/*.example.com`). Set the `dnsName` to `*` to select all services from the specified namespace (e.g., `prod/*`).\n\nThe `namespace` can be set to `*`, `.`, or `~`, representing any, the current, or no namespace, respectively. For example, `*/foo.example.com` selects the service from any available namespace while `./foo.example.com` only selects the service from the namespace of the sidecar. If a host is set to `*/*`, Istio will configure the sidecar to be able to reach every service in the mesh that is exported to the sidecar's namespace. The value `~/*` can be used to completely trim the configuration for sidecars that simply receive traffic and respond, but make no outbound connections of their own.\n\nNOTE: Only services and configuration artifacts exported to the sidecar's namespace (e.g., `exportTo` value of `*`) can be referenced. Private configurations (e.g., `exportTo` set to `.`) will not be available. Refer to the `exportTo` setting in `VirtualService`, `DestinationRule`, and `ServiceEntry` configurations for details.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "port": {
          "description": "The port associated with the listener. If using Unix domain socket, use 0 as the port number, with a valid protocol. The port if specified, will be used as the default destination port associated with the imported hosts. If the port is omitted, Istio will infer the listener ports based on the imported hosts. Note that when multiple egress listeners are specified, where one or more listeners have specific ports while others have no port, the hosts exposed on a listener port will be based on the listener with the most specific port.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.SidecarPort"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IstioEgressListener",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.IstioIngressListener": {
      "description": "`IstioIngressListener` specifies the properties of an inbound traffic listener on the sidecar proxy attached to a workload instance.",
      "type": "object",
      "properties": {
        "bind": {
          "description": "The IP(IPv4 or IPv6) to which the listener should be bound. Unix domain socket addresses are not allowed in the bind field for ingress listeners. If omitted, Istio will automatically configure the defaults based on imported services and the workload instances to which this configuration is applied to.",
          "type": "string"
        },
        "captureMode": {
          "description": "The captureMode option dictates how traffic to the listener is expected to be captured (or not).",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.CaptureMode"
        },
        "connectionPool": {
          "description": "Settings controlling the volume of connections Envoy will accept from the network. This setting overrides the top-level default `inboundConnectionPool` to configure specific settings for this port. This configuration mirrors the `DestinationRule`'s [`PortTrafficPolicy.connectionPool`](https://istio.io/latest/docs/reference/config/networking/destination-rule/#TrafficPolicy-PortTrafficPolicy) field. This port level connection pool has the highest precedence in configuration, overriding both the `Sidecar`'s top level `InboundConnectionPool` as well as any connection pooling settings from the `DestinationRule`.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings"
        },
        "defaultEndpoint": {
          "description": "The IP endpoint or Unix domain socket to which traffic should be forwarded to. This configuration can be used to redirect traffic arriving at the bind `IP:Port` on the sidecar to a `localhost:port` or Unix domain socket where the application workload instance is listening for connections. Arbitrary IPs are not supported. Format should be one of `127.0.0.1:PORT`, `[::1]:PORT` (forward to localhost), `0.0.0.0:PORT`, `[::]:PORT` (forward to the instance IP), or `unix:///path/to/socket` (forward to Unix domain socket).",
          "type": "string"
        },
        "port": {
          "description": "The port associated with the listener.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.SidecarPort"
        },
        "tls": {
          "description": "Set of TLS related options that will enable TLS termination on the sidecar for requests originating from outside the mesh. Currently supports only SIMPLE and MUTUAL TLS modes.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServerTLSSettings"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "IstioIngressListener",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.L4MatchAttributes": {
      "description": "L4 connection match attributes. Note that L4 connection matching support is incomplete.",
      "type": "object",
      "properties": {
        "destinationSubnets": {
          "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.  E.g., a.b.c.d/xx form or just a.b.c.d.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "gateways": {
          "description": "Names of gateways where the rule should be applied. Gateway names in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway match is independent of sourceLabels.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "port": {
          "description": "Specifies the port on the host that is being addressed. Many services only expose a single port or label ports with the protocols they support, in these cases it is not required to explicitly select the port.",
          "type": "integer",
          "format": "int64"
        },
        "sourceLabels": {
          "description": "One or more labels that constrain the applicability of a rule to workloads with the given labels. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it should include the reserved gateway `mesh` in order for this field to be applicable.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "sourceNamespace": {
          "description": "Source namespace constraining the applicability of a rule to workloads in that namespace. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.",
          "type": "string"
        },
        "sourceSubnet": {
          "description": "IPv4 or IPv6 ip address of source with optional subnet. E.g., a.b.c.d/xx form or just a.b.c.d $hide_from_docs",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "L4MatchAttributes",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings": {
      "description": "Load balancing policies to apply for a specific destination. See Envoy's load balancing [documentation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancing) for more details.\n\nFor example, the following rule uses a round robin load balancing policy for all traffic going to the ratings service.\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: bookinfo-ratings\n\nspec:\n\n\thost: ratings.prod.svc.cluster.local\n\ttrafficPolicy:\n\t  loadBalancer:\n\t    simple: ROUND_ROBIN\n\n```\n\nThe following example sets up sticky sessions for the ratings service hashing-based load balancer for the same ratings service using the the User cookie as the hash key.\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: bookinfo-ratings\n\nspec:\n\n\thost: ratings.prod.svc.cluster.local\n\ttrafficPolicy:\n\t  loadBalancer:\n\t    consistentHash:\n\t      httpCookie:\n\t        name: user\n\t        ttl: 0s\n\n```",
      "type": "object",
      "required": [
        "LbPolicy"
      ],
      "properties": {
        "LbPolicy": {
          "description": "Upstream load balancing policy.\n\nTypes that are assignable to LbPolicy:\n\n\t*LoadBalancerSettings_Simple\n\t*LoadBalancerSettings_ConsistentHash",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsLoadBalancerSettings_LbPolicy"
        },
        "localityLbSetting": {
          "description": "Locality load balancer settings, this will override mesh-wide settings in entirety, meaning no merging would be performed between this object and the object one in MeshConfig",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LocalityLoadBalancerSetting"
        },
        "warmup": {
          "description": "Represents the warmup configuration of Service. If set, the newly created endpoint of service remains in warmup mode starting from its creation time for the duration of this window and Istio progressively increases amount of traffic for that endpoint instead of sending proportional amount of traffic. This should be enabled for services that require warm up time to serve full production load with reasonable latency. Please note that this is most effective when few new endpoints come up like scale event in Kubernetes. When all the endpoints are relatively new like new deployment, this is not very effective as all endpoints end up getting same amount of requests. Currently this is only supported for ROUND_ROBIN and LEAST_REQUEST load balancers.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WarmupConfiguration"
        },
        "warmupDurationSecs": {
          "description": "Deprecated: use `warmup` instead.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "LbPolicy"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHash": {
      "type": "object",
      "required": [
        "consistentHash"
      ],
      "properties": {
        "consistentHash": {
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHash",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_LbPolicy"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB": {
      "description": "Consistent Hash-based load balancing can be used to provide soft session affinity based on HTTP headers, cookies or other properties. The affinity to a particular destination host may be lost when one or more hosts are added/removed from the destination service.\n\nNote: consistent hashing is less reliable at maintaining affinity than common \"sticky sessions\" implementations, which often encode a specific destination in a cookie, ensuring affinity is maintained as long as the backend remains. With consistent hash, the guarantees are weaker; any host addition or removal can break affinity for `1/backends` requests.\n\nWarning: consistent hashing depends on each proxy having a consistent view of endpoints. This is not the case when locality load balancing is enabled. Locality load balancing and consistent hash will only work together when all proxies are in the same locality, or a high level load balancer handles locality affinity.",
      "type": "object",
      "required": [
        "HashKey",
        "HashAlgorithm"
      ],
      "properties": {
        "HashAlgorithm": {
          "description": "The hash algorithm to use. Please refer to https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancers#ring-hash and https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/load_balancers#maglev for considerations on choosing an algorithm. Defaults to RingHash if not specified.\n\nTypes that are assignable to HashAlgorithm:\n\n\t*LoadBalancerSettings_ConsistentHashLB_RingHash_\n\t*LoadBalancerSettings_ConsistentHashLB_Maglev",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsLoadBalancerSettings_ConsistentHashLB_HashAlgorithm"
        },
        "HashKey": {
          "description": "The hash key to use.\n\nTypes that are assignable to HashKey:\n\n\t*LoadBalancerSettings_ConsistentHashLB_HttpHeaderName\n\t*LoadBalancerSettings_ConsistentHashLB_HttpCookie\n\t*LoadBalancerSettings_ConsistentHashLB_UseSourceIp\n\t*LoadBalancerSettings_ConsistentHashLB_HttpQueryParameterName",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsLoadBalancerSettings_ConsistentHashLB_HashKey"
        },
        "minimumRingSize": {
          "description": "Deprecated. Use RingHash instead.\n\nDeprecated: Marked as deprecated in networking/v1alpha3/destination_rule.proto.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "HashAlgorithm,HashKey"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_HTTPCookie": {
      "description": "Describes a HTTP cookie that will be used as the hash key for the Consistent Hash load balancer.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the cookie.",
          "type": "string"
        },
        "path": {
          "description": "Path to set for the cookie.",
          "type": "string"
        },
        "ttl": {
          "description": "Lifetime of the cookie. If specified, a cookie with the TTL will be generated if the cookie is not present. If the TTL is present and zero, the generated cookie will be a session cookie.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_HTTPCookie",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_HttpCookie": {
      "description": "Hash based on HTTP cookie.",
      "type": "object",
      "required": [
        "httpCookie"
      ],
      "properties": {
        "httpCookie": {
          "description": "Hash based on HTTP cookie.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_HTTPCookie"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_HttpCookie",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_ConsistentHashLB_HashKey"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_HttpHeaderName": {
      "description": "Hash based on a specific HTTP header.",
      "type": "object",
      "required": [
        "httpHeaderName"
      ],
      "properties": {
        "httpHeaderName": {
          "description": "Hash based on a specific HTTP header.",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_HttpHeaderName",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_ConsistentHashLB_HashKey"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_HttpQueryParameterName": {
      "description": "Hash based on a specific HTTP query parameter.",
      "type": "object",
      "required": [
        "httpQueryParameterName"
      ],
      "properties": {
        "httpQueryParameterName": {
          "description": "Hash based on a specific HTTP query parameter.",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_HttpQueryParameterName",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_ConsistentHashLB_HashKey"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_MagLev": {
      "type": "object",
      "properties": {
        "tableSize": {
          "description": "The table size for Maglev hashing. This helps in controlling the disruption when the backend hosts change. Increasing the table size reduces the amount of disruption. The table size must be prime number less than 5000011. If it is not specified, the default is 65537.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_MagLev",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_Maglev": {
      "description": "The Maglev load balancer implements consistent hashing to backend hosts.",
      "type": "object",
      "required": [
        "maglev"
      ],
      "properties": {
        "maglev": {
          "description": "The Maglev load balancer implements consistent hashing to backend hosts.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_MagLev"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_Maglev",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_ConsistentHashLB_HashAlgorithm"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_RingHash": {
      "type": "object",
      "properties": {
        "minimumRingSize": {
          "description": "The minimum number of virtual nodes to use for the hash ring. Defaults to 1024. Larger ring sizes result in more granular load distributions. If the number of hosts in the load balancing pool is larger than the ring size, each host will be assigned a single virtual node.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_RingHash",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_RingHash_": {
      "description": "The ring/modulo hash load balancer implements consistent hashing to backend hosts.",
      "type": "object",
      "required": [
        "ringHash"
      ],
      "properties": {
        "ringHash": {
          "description": "The ring/modulo hash load balancer implements consistent hashing to backend hosts.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_RingHash"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_RingHash_",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_ConsistentHashLB_HashAlgorithm"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_ConsistentHashLB_UseSourceIp": {
      "description": "Hash based on the source IP address. This is applicable for both TCP and HTTP connections.",
      "type": "object",
      "required": [
        "useSourceIp"
      ],
      "properties": {
        "useSourceIp": {
          "description": "Hash based on the source IP address. This is applicable for both TCP and HTTP connections.",
          "type": "boolean",
          "default": false
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_ConsistentHashLB_UseSourceIp",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_ConsistentHashLB_HashKey"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_Simple": {
      "type": "object",
      "required": [
        "simple"
      ],
      "properties": {
        "simple": {
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LoadBalancerSettings_SimpleLB"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_Simple",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsLoadBalancerSettings_LbPolicy"
    },
    "io.istio.api.networking.v1alpha3.LoadBalancerSettings_SimpleLB": {
      "description": "Standard load balancing algorithms that require no tuning.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LoadBalancerSettings_SimpleLB",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "LEAST_CONN(1),LEAST_REQUEST(5),PASSTHROUGH(3),RANDOM(2),ROUND_ROBIN(4),UNSPECIFIED(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.LocalityLoadBalancerSetting": {
      "description": "Locality-weighted load balancing allows administrators to control the distribution of traffic to endpoints based on the localities of where the traffic originates and where it will terminate. These localities are specified using arbitrary labels that designate a hierarchy of localities in {region}/{zone}/{sub-zone} form. For additional detail refer to [Locality Weight](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight) The following example shows how to setup locality weights mesh-wide.\n\nGiven a mesh with workloads and their service deployed to \"us-west/zone1/\\*\" and \"us-west/zone2/\\*\". This example specifies that when traffic accessing a service originates from workloads in \"us-west/zone1/\\*\", 80% of the traffic will be sent to endpoints in \"us-west/zone1/\\*\", i.e the same zone, and the remaining 20% will go to endpoints in \"us-west/zone2/\\*\". This setup is intended to favor routing traffic to endpoints in the same locality. A similar setting is specified for traffic originating in \"us-west/zone2/\\*\".\n\n```yaml\n\n\tdistribute:\n\t  - from: us-west/zone1/*\n\t    to:\n\t      \"us-west/zone1/*\": 80\n\t      \"us-west/zone2/*\": 20\n\t  - from: us-west/zone2/*\n\t    to:\n\t      \"us-west/zone1/*\": 20\n\t      \"us-west/zone2/*\": 80\n\n```\n\nIf the goal of the operator is not to distribute load across zones and regions but rather to restrict the regionality of failover to meet other operational requirements an operator can set a 'failover' policy instead of a 'distribute' policy.\n\nThe following example sets up a locality failover policy for regions. Assume a service resides in zones within us-east, us-west \u0026 eu-west this example specifies that when endpoints within us-east become unhealthy traffic should failover to endpoints in any zone or sub-zone within eu-west and similarly us-west should failover to us-east.\n\n```yaml\n\n\tfailover:\n\t  - from: us-east\n\t    to: eu-west\n\t  - from: us-west\n\t    to: us-east\n\n```",
      "type": "object",
      "properties": {
        "distribute": {
          "description": "Optional: only one of distribute, failover or failoverPriority can be set. Explicitly specify loadbalancing weight across different zones and geographical locations. Refer to [Locality weighted load balancing](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/load_balancing/locality_weight) If empty, the locality weight is set according to the endpoints number within it.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LocalityLoadBalancerSetting_Distribute"
          }
        },
        "enabled": {
          "description": "Enable locality load balancing. This is DestinationRule-level and will override mesh-wide settings in entirety. e.g. true means that turn on locality load balancing for this DestinationRule no matter what mesh-wide settings is.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        },
        "failover": {
          "description": "Optional: only one of distribute, failover or failoverPriority can be set. Explicitly specify the region traffic will land on when endpoints in local region becomes unhealthy. Should be used together with OutlierDetection to detect unhealthy endpoints. Note: if no OutlierDetection specified, this will not take effect.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LocalityLoadBalancerSetting_Failover"
          }
        },
        "failoverPriority": {
          "description": "failoverPriority is an ordered list of labels used to sort endpoints to do priority based load balancing. This is to support traffic failover across different groups of endpoints. Two kinds of labels can be specified:\n\n  - Specify only label keys `[key1, key2, key3]`, istio would compare the label values of client with endpoints.\n    Suppose there are total N label keys `[key1, key2, key3, ...keyN]` specified:\n\n    1. Endpoints matching all N labels with the client proxy have priority P(0) i.e. the highest priority.\n    2. Endpoints matching the first N-1 labels with the client proxy have priority P(1) i.e. second highest priority.\n    3. By extension of this logic, endpoints matching only the first label with the client proxy has priority P(N-1) i.e. second lowest priority.\n    4. All the other endpoints have priority P(N) i.e. lowest priority.\n\n  - Specify labels with key and value `[key1=value1, key2=value2, key3=value3]`, istio would compare the labels with endpoints.\n    Suppose there are total N labels `[key1=value1, key2=value2, key3=value3, ...keyN=valueN]` specified:\n\n    1. Endpoints matching all N labels have priority P(0) i.e. the highest priority.\n    2. Endpoints matching the first N-1 labels have priority P(1) i.e. second highest priority.\n    3. By extension of this logic, endpoints matching only the first label has priority P(N-1) i.e. second lowest priority.\n    4. All the other endpoints have priority P(N) i.e. lowest priority.\n\nNote: For a label to be considered for match, the previous labels must match, i.e. nth label would be considered matched only if first n-1 labels match.\n\nIt can be any label specified on both client and server workloads. The following labels which have special semantic meaning are also supported:\n\n  - `topology.istio.io/network` is used to match the network metadata of an endpoint, which can be specified by pod/namespace label `topology.istio.io/network`, sidecar env `ISTIO_META_NETWORK` or MeshNetworks.\n  - `topology.istio.io/cluster` is used to match the clusterID of an endpoint, which can be specified by pod label `topology.istio.io/cluster` or pod env `ISTIO_META_CLUSTER_ID`.\n  - `topology.kubernetes.io/region` is used to match the region metadata of an endpoint, which maps to Kubernetes node label `topology.kubernetes.io/region` or the deprecated label `failure-domain.beta.kubernetes.io/region`.\n  - `topology.kubernetes.io/zone` is used to match the zone metadata of an endpoint, which maps to Kubernetes node label `topology.kubernetes.io/zone` or the deprecated label `failure-domain.beta.kubernetes.io/zone`.\n  - `topology.istio.io/subzone` is used to match the subzone metadata of an endpoint, which maps to Istio node label `topology.istio.io/subzone`.\n  - `kubernetes.io/hostname` is used to match the current node of an endpoint, which maps to Kubernetes node label `kubernetes.io/hostname`.\n\nThe below topology config indicates the following priority levels:\n\n```yaml failoverPriority: - \"topology.istio.io/network\" - \"topology.kubernetes.io/region\" - \"topology.kubernetes.io/zone\" - \"topology.istio.io/subzone\" ```\n\n1. endpoints match same [network, region, zone, subzone] label with the client proxy have the highest priority. 2. endpoints have same [network, region, zone] label but different [subzone] label with the client proxy have the second highest priority. 3. endpoints have same [network, region] label but different [zone] label with the client proxy have the third highest priority. 4. endpoints have same [network] but different [region] labels with the client proxy have the fourth highest priority. 5. all the other endpoints have the same lowest priority.\n\nSuppose a service associated endpoints reside in multi clusters, the below example represents: 1. endpoints in `clusterA` and has `version=v1` label have P(0) priority. 2. endpoints not in `clusterA` but has `version=v1` label have P(1) priority. 2. all the other endpoints have P(2) priority.\n\n```yaml failoverPriority: - \"version=v1\" - \"topology.istio.io/cluster=clusterA\" ```\n\nOptional: only one of distribute, failover or failoverPriority can be set. And it should be used together with `OutlierDetection` to detect unhealthy endpoints, otherwise has no effect.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LocalityLoadBalancerSetting",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.LocalityLoadBalancerSetting_Distribute": {
      "description": "Describes how traffic originating in the 'from' zone or sub-zone is distributed over a set of 'to' zones. Syntax for specifying a zone is {region}/{zone}/{sub-zone} and terminal wildcards are allowed on any segment of the specification. Examples:\n\n`*` - matches all localities\n\n`us-west/*` - all zones and sub-zones within the us-west region\n\n`us-west/zone-1/*` - all sub-zones within us-west/zone-1",
      "type": "object",
      "properties": {
        "from": {
          "description": "Originating locality, '/' separated, e.g. 'region/zone/sub_zone'.",
          "type": "string"
        },
        "to": {
          "description": "Map of upstream localities to traffic distribution weights. The sum of all weights should be 100. Any locality not present will receive no traffic.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LocalityLoadBalancerSetting_Distribute",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.LocalityLoadBalancerSetting_Failover": {
      "description": "Specify the traffic failover policy across regions. Since zone and sub-zone failover is supported by default this only needs to be specified for regions when the operator needs to constrain traffic failover so that the default behavior of failing over to any endpoint globally does not apply. This is useful when failing over traffic across regions would not improve service health or may need to be restricted for other reasons like regulatory controls.",
      "type": "object",
      "properties": {
        "from": {
          "description": "Originating region.",
          "type": "string"
        },
        "to": {
          "description": "Destination region the traffic will fail over to when endpoints in the 'from' region becomes unhealthy.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "LocalityLoadBalancerSetting_Failover",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.OutboundTrafficPolicy": {
      "description": "`OutboundTrafficPolicy` sets the default behavior of the sidecar for handling unknown outbound traffic from the application.",
      "type": "object",
      "properties": {
        "egressProxy": {
          "description": "Specifies the details of the egress proxy to which unknown traffic should be forwarded to from the sidecar. Valid only if the mode is set to ALLOW_ANY. If not specified when the mode is ALLOW_ANY, the sidecar will send the unknown traffic directly to the IP requested by the application.\n\n** NOTE 1**: The specified egress host must be imported in the egress section for the traffic forwarding to work.\n\n** NOTE 2**: An Envoy based egress gateway is unlikely to be able to handle plain text TCP connections forwarded from the sidecar. Envoy's dynamic forward proxy can handle only HTTP and TLS connections. $hide_from_docs",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Destination"
        },
        "mode": {
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.OutboundTrafficPolicy_Mode"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "OutboundTrafficPolicy",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.OutboundTrafficPolicy_Mode": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "OutboundTrafficPolicy_Mode",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "ALLOW_ANY(1),REGISTRY_ONLY(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.OutlierDetection": {
      "description": "A Circuit breaker implementation that tracks the status of each individual host in the upstream service.  Applicable to both HTTP and TCP services.  For HTTP services, hosts that continually return 5xx errors for API calls are ejected from the pool for a pre-defined period of time. For TCP services, connection timeouts or connection failures to a given host counts as an error when measuring the consecutive errors metric. See Envoy's [outlier detection](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/upstream/outlier) for more details.\n\nThe following rule sets a connection pool size of 100 HTTP1 connections with no more than 10 req/connection to the \"reviews\" service. In addition, it sets a limit of 1000 concurrent HTTP2 requests and configures upstream hosts to be scanned every 5 mins so that any host that fails 7 consecutive times with a 502, 503, or 504 error code will be ejected for 15 minutes.\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: reviews-cb-policy\n\nspec:\n\n\thost: reviews.prod.svc.cluster.local\n\ttrafficPolicy:\n\t  connectionPool:\n\t    tcp:\n\t      maxConnections: 100\n\t    http:\n\t      http2MaxRequests: 1000\n\t      maxRequestsPerConnection: 10\n\t  outlierDetection:\n\t    consecutive5xxErrors: 7\n\t    interval: 5m\n\t    baseEjectionTime: 15m\n\n```",
      "type": "object",
      "properties": {
        "baseEjectionTime": {
          "description": "Minimum ejection duration. A host will remain ejected for a period equal to the product of minimum ejection duration and the number of times the host has been ejected. This technique allows the system to automatically increase the ejection period for unhealthy upstream servers. format: 1h/1m/1s/1ms. MUST be \u003e=1ms. Default is 30s.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "consecutive5xxErrors": {
          "description": "Number of 5xx errors before a host is ejected from the connection pool. When the upstream host is accessed over an opaque TCP connection, connect timeouts, connection error/failure and request failure events qualify as a 5xx error. This feature defaults to 5 but can be disabled by setting the value to 0.\n\nNote that `consecutiveGatewayErrors` and `consecutive5xxErrors` can be used separately or together. Because the errors counted by `consecutiveGatewayErrors` are also included in `consecutive5xxErrors`, if the value of `consecutiveGatewayErrors` is greater than or equal to the value of `consecutive5xxErrors`, `consecutiveGatewayErrors` will have no effect.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.UInt32Value"
        },
        "consecutiveErrors": {
          "description": "Number of errors before a host is ejected from the connection pool. Defaults to 5. When the upstream host is accessed over HTTP, a 502, 503, or 504 return code qualifies as an error. When the upstream host is accessed over an opaque TCP connection, connect timeouts and connection error/failure events qualify as an error. $hide_from_docs\n\nDeprecated: Marked as deprecated in networking/v1alpha3/destination_rule.proto.",
          "type": "integer",
          "format": "int32"
        },
        "consecutiveGatewayErrors": {
          "description": "Number of gateway errors before a host is ejected from the connection pool. When the upstream host is accessed over HTTP, a 502, 503, or 504 return code qualifies as a gateway error. When the upstream host is accessed over an opaque TCP connection, connect timeouts and connection error/failure events qualify as a gateway error. This feature is disabled by default or when set to the value 0.\n\nNote that `consecutiveGatewayErrors` and `consecutive5xxErrors` can be used separately or together. Because the errors counted by `consecutiveGatewayErrors` are also included in `consecutive5xxErrors`, if the value of `consecutiveGatewayErrors` is greater than or equal to the value of `consecutive5xxErrors`, `consecutiveGatewayErrors` will have no effect.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.UInt32Value"
        },
        "consecutiveLocalOriginFailures": {
          "description": "The number of consecutive locally originated failures before ejection occurs. Defaults to 5. Parameter takes effect only when `splitExternalLocalOriginErrors` is set to true.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.UInt32Value"
        },
        "interval": {
          "description": "Time interval between ejection sweep analysis. format: 1h/1m/1s/1ms. MUST be \u003e=1ms. Default is 10s.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "maxEjectionPercent": {
          "description": "Maximum % of hosts in the load balancing pool for the upstream service that can be ejected. Defaults to 10%.",
          "type": "integer",
          "format": "int32"
        },
        "minHealthPercent": {
          "description": "Outlier detection will be enabled as long as the associated load balancing pool has at least `minHealthPercent` hosts in healthy mode. When the percentage of healthy hosts in the load balancing pool drops below this threshold, outlier detection will be disabled and the proxy will load balance across all hosts in the pool (healthy and unhealthy). The threshold can be disabled by setting it to 0%. The default is 0% as it's not typically applicable in k8s environments with few pods per service.",
          "type": "integer",
          "format": "int32"
        },
        "splitExternalLocalOriginErrors": {
          "description": "Determines whether to distinguish local origin failures from external errors. If set to true `consecutiveLocalOriginFailures` is taken into account for outlier detection calculations. This should be used when you want to derive the outlier detection status based on the errors seen locally such as failure to connect, timeout while connecting etc. rather than the status code returned by upstream service. This is especially useful when the upstream service explicitly returns a 5xx for some requests and you want to ignore those responses from upstream service while determining the outlier detection status of a host. Defaults to false.",
          "type": "boolean"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "OutlierDetection",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Percent": {
      "description": "Percent specifies a percentage in the range of [0.0, 100.0].",
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Percent",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Port": {
      "description": "Port describes the properties of a specific port of a service.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Label assigned to the port.",
          "type": "string"
        },
        "number": {
          "description": "A valid non-negative integer port number.",
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "description": "The protocol exposed on the port. MUST be one of HTTP|HTTPS|GRPC|GRPC-WEB|HTTP2|MONGO|TCP|TLS. TLS can be either used to terminate non-HTTP based connections on a specific port or to route traffic based on SNI header to the destination without terminating the TLS connection.",
          "type": "string"
        },
        "targetPort": {
          "description": "The port number on the endpoint where the traffic will be received. Applicable only when used with ServiceEntries. $hide_from_docs\n\nDeprecated: Marked as deprecated in networking/v1alpha3/gateway.proto.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Port",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.PortSelector": {
      "description": "PortSelector specifies the number of a port to be used for matching or selection for final routing.",
      "type": "object",
      "properties": {
        "number": {
          "description": "Valid port number",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "PortSelector",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ReadinessProbe": {
      "type": "object",
      "required": [
        "HealthCheckMethod"
      ],
      "properties": {
        "HealthCheckMethod": {
          "description": "Users can only provide one configuration for healthchecks (tcp, http, exec), and this is expressed as a oneof. All of the other configuration values hold true for any of the healthcheck methods.\n\nTypes that are assignable to HealthCheckMethod:\n\n\t*ReadinessProbe_HttpGet\n\t*ReadinessProbe_TcpSocket\n\t*ReadinessProbe_Exec",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsReadinessProbe_HealthCheckMethod"
        },
        "failureThreshold": {
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3 seconds.",
          "type": "integer",
          "format": "int32"
        },
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before readiness probes are initiated.",
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1 second.",
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1 second.",
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1 second.",
          "type": "integer",
          "format": "int32"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ReadinessProbe",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "HealthCheckMethod"
    },
    "io.istio.api.networking.v1alpha3.ReadinessProbe_Exec": {
      "description": "Health is determined by how the command that is executed exited.",
      "type": "object",
      "required": [
        "exec"
      ],
      "properties": {
        "exec": {
          "description": "Health is determined by how the command that is executed exited.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ExecHealthCheckConfig"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ReadinessProbe_Exec",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsReadinessProbe_HealthCheckMethod"
    },
    "io.istio.api.networking.v1alpha3.ReadinessProbe_HttpGet": {
      "description": "`httpGet` is performed to a given endpoint and the status/able to connect determines health.",
      "type": "object",
      "required": [
        "httpGet"
      ],
      "properties": {
        "httpGet": {
          "description": "`httpGet` is performed to a given endpoint and the status/able to connect determines health.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPHealthCheckConfig"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ReadinessProbe_HttpGet",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsReadinessProbe_HealthCheckMethod"
    },
    "io.istio.api.networking.v1alpha3.ReadinessProbe_TcpSocket": {
      "description": "Health is determined by if the proxy is able to connect.",
      "type": "object",
      "required": [
        "tcpSocket"
      ],
      "properties": {
        "tcpSocket": {
          "description": "Health is determined by if the proxy is able to connect.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TCPHealthCheckConfig"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ReadinessProbe_TcpSocket",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsReadinessProbe_HealthCheckMethod"
    },
    "io.istio.api.networking.v1alpha3.RegexRewrite": {
      "type": "object",
      "properties": {
        "match": {
          "description": "[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).",
          "type": "string"
        },
        "rewrite": {
          "description": "The string that should replace into matching portions of original URI. Capture groups in the pattern can be referenced in the new URI. Examples:\n\nExample 1: rewrite with capture groups Path pattern \"/service/update/v1/api\" with match \"^/service/([^/]+)(/.*)$\" and rewrite string of \"/customprefix/\\2/\\1\" would transform into \"/customprefix/v1/api/update\".\n\nExample 2: case insensitive rewrite Path pattern \"/aaa/XxX/bbb\" with match \"(?i)/xxx/\" and a rewrite string of /yyy/ would do a case-insensitive match and transform the path to \"/aaa/yyy/bbb\".",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "RegexRewrite",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.RouteDestination": {
      "description": "L4 routing rule weighted destination.",
      "type": "object",
      "properties": {
        "destination": {
          "description": "Destination uniquely identifies the instances of a service to which the request/connection should be forwarded to.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Destination"
        },
        "weight": {
          "description": "Weight specifies the relative proportion of traffic to be forwarded to the destination. A destination will receive `weight/(sum of all weights)` requests. If there is only one destination in a rule, it will receive all traffic. Otherwise, if weight is `0`, the destination will not receive any traffic.",
          "type": "integer",
          "format": "int32"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "RouteDestination",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Server": {
      "description": "`Server` describes the properties of the proxy on a given load balancer port. For example,\n\n```yaml apiVersion: networking.istio.io/v1 kind: Gateway metadata:\n\n\tname: my-ingress\n\nspec:\n\n\tselector:\n\t  app: my-ingressgateway\n\tservers:\n\t- port:\n\t    number: 80\n\t    name: http2\n\t    protocol: HTTP2\n\t  hosts:\n\t  - \"*\"\n\n```\n\n# Another example\n\n```yaml apiVersion: networking.istio.io/v1 kind: Gateway metadata:\n\n\tname: my-tcp-ingress\n\nspec:\n\n\tselector:\n\t  app: my-tcp-ingressgateway\n\tservers:\n\t- port:\n\t    number: 27018\n\t    name: mongo\n\t    protocol: MONGO\n\t  hosts:\n\t  - \"*\"\n\n```\n\n# The following is an example of TLS configuration for port 443\n\n```yaml apiVersion: networking.istio.io/v1 kind: Gateway metadata:\n\n\tname: my-tls-ingress\n\nspec:\n\n\tselector:\n\t  app: my-tls-ingressgateway\n\tservers:\n\t- port:\n\t    number: 443\n\t    name: https\n\t    protocol: HTTPS\n\t  hosts:\n\t  - \"*\"\n\t  tls:\n\t    mode: SIMPLE\n\t    credentialName: tls-cert\n\n```",
      "type": "object",
      "properties": {
        "bind": {
          "description": "The ip or the Unix domain socket to which the listener should be bound to. Format: `x.x.x.x` or `unix:///path/to/uds` or `unix://@foobar` (Linux abstract namespace). When using Unix domain sockets, the port number should be 0. This can be used to restrict the reachability of this server to be gateway internal only. This is typically used when a gateway needs to communicate to another mesh service e.g. publishing metrics. In such case, the server created with the specified bind will not be available to external gateway clients.",
          "type": "string"
        },
        "defaultEndpoint": {
          "description": "The loopback IP endpoint or Unix domain socket to which traffic should be forwarded to by default. Format should be `127.0.0.1:PORT` or `unix:///path/to/socket` or `unix://@foobar` (Linux abstract namespace). NOT IMPLEMENTED. $hide_from_docs",
          "type": "string"
        },
        "hosts": {
          "description": "One or more hosts exposed by this gateway. While typically applicable to HTTP services, it can also be used for TCP services using TLS with SNI. A host is specified as a `dnsName` with an optional `namespace/` prefix. The `dnsName` should be specified using FQDN format, optionally including a wildcard character in the left-most component (e.g., `prod/*.example.com`). Set the `dnsName` to `*` to select all `VirtualService` hosts from the specified namespace (e.g.,`prod/*`).\n\nThe `namespace` can be set to `*` or `.`, representing any or the current namespace, respectively. For example, `*/foo.example.com` selects the service from any available namespace while `./foo.example.com` only selects the service from the namespace of the sidecar. The default, if no `namespace/` is specified, is `*/`, that is, select services from any namespace. Any associated `DestinationRule` in the selected namespace will also be used.\n\nA `VirtualService` must be bound to the gateway and must have one or more hosts that match the hosts specified in a server. The match could be an exact match or a suffix match with the server's hosts. For example, if the server's hosts specifies `*.example.com`, a `VirtualService` with hosts `dev.example.com` or `prod.example.com` will match. However, a `VirtualService` with host `example.com` or `newexample.com` will not match.\n\nNOTE: Only virtual services exported to the gateway's namespace (e.g., `exportTo` value of `*`) can be referenced. Private configurations (e.g., `exportTo` set to `.`) will not be available. Refer to the `exportTo` setting in `VirtualService`, `DestinationRule`, and `ServiceEntry` configurations for details.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "name": {
          "description": "An optional name of the server, when set must be unique across all servers. This will be used for variety of purposes like prefixing stats generated with this name etc.",
          "type": "string"
        },
        "port": {
          "description": "The Port on which the proxy should listen for incoming connections.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Port"
        },
        "tls": {
          "description": "Set of TLS related options that govern the server's behavior. Use these options to control if all http requests should be redirected to https, and the TLS modes to use.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServerTLSSettings"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Server",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ServerTLSSettings": {
      "type": "object",
      "properties": {
        "caCertificates": {
          "description": "REQUIRED if mode is `MUTUAL` or `OPTIONAL_MUTUAL`. The path to a file containing certificate authority certificates to use in verifying a presented client side certificate.",
          "type": "string"
        },
        "caCrl": {
          "description": "OPTIONAL: The path to the file containing the certificate revocation list (CRL) to use in verifying a presented client side certificate. `CRL` is a list of certificates that have been revoked by the CA (Certificate Authority) before their scheduled expiration date. If specified, the proxy will verify if the presented certificate is part of the revoked list of certificates. If omitted, the proxy will not verify the certificate against the `crl`.",
          "type": "string"
        },
        "cipherSuites": {
          "description": "Optional: If specified, only support the specified cipher list. Otherwise default to the default cipher list supported by Envoy as specified [here](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/transport_sockets/tls/v3/common.proto). The supported list of ciphers are: * `ECDHE-ECDSA-AES128-GCM-SHA256` * `ECDHE-RSA-AES128-GCM-SHA256` * `ECDHE-ECDSA-AES256-GCM-SHA384` * `ECDHE-RSA-AES256-GCM-SHA384` * `ECDHE-ECDSA-CHACHA20-POLY1305` * `ECDHE-RSA-CHACHA20-POLY1305` * `ECDHE-ECDSA-AES128-SHA` * `ECDHE-RSA-AES128-SHA` * `ECDHE-ECDSA-AES256-SHA` * `ECDHE-RSA-AES256-SHA` * `AES128-GCM-SHA256` * `AES256-GCM-SHA384` * `AES128-SHA` * `AES256-SHA` * `DES-CBC3-SHA`",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "credentialName": {
          "description": "For gateways running on Kubernetes, the name of the secret that holds the TLS certs including the CA certificates. Applicable only on Kubernetes. An Opaque secret should contain the following keys and values: `tls.key: \u003cprivateKey\u003e` and `tls.crt: \u003cserverCert\u003e` or `key: \u003cprivateKey\u003e` and `cert: \u003cserverCert\u003e`. For mutual TLS, `cacert: \u003cCACertificate\u003e` and `crl: \u003cCertificateRevocationList\u003e` can be provided in the same secret or a separate secret named `\u003csecret\u003e-cacert`. A TLS secret for server certificates with an additional `tls.ocsp-staple` key for specifying OCSP staple information, `ca.crt` key for CA certificates and `ca.crl` for certificate revocation list is also supported. Only one of server certificates and CA certificate or credentialName can be specified.",
          "type": "string"
        },
        "httpsRedirect": {
          "description": "If set to true, the load balancer will send a 301 redirect for all http connections, asking the clients to use HTTPS.",
          "type": "boolean"
        },
        "maxProtocolVersion": {
          "description": "Optional: Maximum TLS protocol version.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServerTLSSettings_TLSProtocol"
        },
        "minProtocolVersion": {
          "description": "Optional: Minimum TLS protocol version. By default, it is `TLSV1_2`. TLS protocol versions below TLSV1_2 require setting compatible ciphers with the `cipherSuites` setting as they no longer include compatible ciphers.\n\nNote: Using TLS protocol versions below TLSV1_2 has serious security risks.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServerTLSSettings_TLSProtocol"
        },
        "mode": {
          "description": "Optional: Indicates whether connections to this port should be secured using TLS. The value of this field determines how TLS is enforced.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServerTLSSettings_TLSmode"
        },
        "privateKey": {
          "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file holding the server's private key.",
          "type": "string"
        },
        "serverCertificate": {
          "description": "REQUIRED if mode is `SIMPLE` or `MUTUAL`. The path to the file holding the server-side TLS certificate to use.",
          "type": "string"
        },
        "subjectAltNames": {
          "description": "A list of alternate names to verify the subject identity in the certificate presented by the client.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "verifyCertificateHash": {
          "description": "An optional list of hex-encoded SHA-256 hashes of the authorized client certificates. Both simple and colon separated formats are acceptable. Note: When both verify_certificate_hash and verify_certificate_spki are specified, a hash matching either value will result in the certificate being accepted.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "verifyCertificateSpki": {
          "description": "An optional list of base64-encoded SHA-256 hashes of the SPKIs of authorized client certificates. Note: When both verify_certificate_hash and verify_certificate_spki are specified, a hash matching either value will result in the certificate being accepted.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServerTLSSettings",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ServerTLSSettings_TLSProtocol": {
      "description": "TLS protocol versions.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServerTLSSettings_TLSProtocol",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "TLSV1_0(1),TLSV1_1(2),TLSV1_2(3),TLSV1_3(4),TLS_AUTO(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.ServerTLSSettings_TLSmode": {
      "description": "TLS modes enforced by the proxy",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServerTLSSettings_TLSmode",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "AUTO_PASSTHROUGH(3),ISTIO_MUTUAL(4),MUTUAL(2),OPTIONAL_MUTUAL(5),PASSTHROUGH(0),SIMPLE(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.ServiceEntry": {
      "description": "ServiceEntry enables adding additional entries into Istio's internal service registry.\n\n\u003c!-- crd generation tags mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)\" (NONE, STATIC, or DNS)\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags istiostatus-override: ServiceEntryStatus: istio.io/api/networking/v1alpha3 --\u003e",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "The virtual IP addresses associated with the service. Could be CIDR prefix. For HTTP traffic, generated route configurations will include http route domains for both the `addresses` and `hosts` field values and the destination will be identified based on the HTTP Host/Authority header. If one or more IP addresses are specified, the incoming traffic will be identified as belonging to this service if the destination IP matches the IP/CIDRs specified in the addresses field. If the Addresses field is empty, traffic will be identified solely based on the destination port. In such scenarios, the port on which the service is being accessed must not be shared by any other service in the mesh. In other words, the sidecar will behave as a simple TCP proxy, forwarding incoming traffic on a specified port to the specified destination endpoint IP/host. Unix domain socket addresses are not supported in this field.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "endpoints": {
          "description": "One or more endpoints associated with the service. Only one of `endpoints` or `workloadSelector` can be specified.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadEntry"
          }
        },
        "exportTo": {
          "description": "A list of namespaces to which this service is exported. Exporting a service allows it to be used by sidecars, gateways and virtual services defined in other namespaces. This feature provides a mechanism for service owners and mesh administrators to control the visibility of services across namespace boundaries.\n\nIf no namespaces are specified then the service is exported to all namespaces by default.\n\nThe value \".\" is reserved and defines an export to the same namespace that the service is declared in. Similarly the value \"*\" is reserved and defines an export to all namespaces.\n\nFor a Kubernetes Service, the equivalent effect can be achieved by setting the annotation \"networking.istio.io/exportTo\" to a comma-separated list of namespace names.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "hosts": {
          "description": "The hosts associated with the ServiceEntry. Could be a DNS name with wildcard prefix.\n\n1. The hosts field is used to select matching hosts in VirtualServices and DestinationRules. 2. For HTTP traffic the HTTP Host/Authority header will be matched against the hosts field. 3. For HTTPs or TLS traffic containing Server Name Indication (SNI), the SNI value will be matched against the hosts field.\n\n**NOTE 1:** When resolution is set to type DNS and no endpoints are specified, the host field will be used as the DNS name of the endpoint to route traffic to.\n\n**NOTE 2:** If the hostname matches with the name of a service from another service registry such as Kubernetes that also supplies its own set of endpoints, the ServiceEntry will be treated as a decorator of the existing Kubernetes service. Properties in the service entry will be added to the Kubernetes service if applicable. Currently, only the following additional properties will be considered by `istiod`:\n\n 1. subjectAltNames: In addition to verifying the SANs of the\n    service accounts associated with the pods of the service, the\n    SANs specified here will also be verified.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "location": {
          "description": "Specify whether the service should be considered external to the mesh or part of the mesh.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntry_Location"
        },
        "ports": {
          "description": "The ports associated with the external service. If the Endpoints are Unix domain socket addresses, there must be exactly one port.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServicePort"
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "resolution": {
          "description": "Service resolution mode for the hosts. Care must be taken when setting the resolution mode to NONE for a TCP port without accompanying IP addresses. In such cases, traffic to any IP on said port will be allowed (i.e. `0.0.0.0:\u003cport\u003e`).",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntry_Resolution"
        },
        "subjectAltNames": {
          "description": "If specified, the proxy will verify that the server certificate's subject alternate name matches one of the specified values.\n\nNOTE: When using the workloadEntry with workloadSelectors, the service account specified in the workloadEntry will also be used to derive the additional subject alternate names that should be verified.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "workloadSelector": {
          "description": "Applicable only for MESH_INTERNAL services. Only one of `endpoints` or `workloadSelector` can be specified. Selects one or more Kubernetes pods or VM workloads (specified using `WorkloadEntry`) based on their labels. The `WorkloadEntry` object representing the VMs should be defined in the same namespace as the ServiceEntry.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadSelector"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServiceEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ServiceEntryAddress": {
      "description": "A minor abstraction to allow for adding hostnames if relevant.",
      "type": "object",
      "properties": {
        "host": {
          "description": "The host name associated with this address",
          "type": "string"
        },
        "value": {
          "description": "The address (e.g. 192.168.0.2)",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServiceEntryAddress",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ServiceEntryStatus": {
      "type": "object",
      "properties": {
        "addresses": {
          "description": "List of addresses which were assigned to this ServiceEntry.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntryAddress"
          }
        },
        "conditions": {
          "description": "Current service state of ServiceEntry. More info: https://istio.io/docs/reference/config/config-status/",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioCondition"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        },
        "observedGeneration": {
          "description": "Resource Generation to which the Reconciled Condition refers. When this value is not equal to the object's metadata generation, reconciled condition  calculation for the current generation is still in progress.  See https://istio.io/latest/docs/reference/config/config-status/ for more info.",
          "type": "integer",
          "format": "int64"
        },
        "validationMessages": {
          "description": "Includes any errors or warnings detected by Istio's analyzers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.analysis.v1alpha1.AnalysisMessageBase"
          },
          "x-kubernetes-patch-merge-key": "type",
          "x-kubernetes-patch-strategy": "merge"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServiceEntryStatus",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.ServiceEntry_Location": {
      "description": "Location specifies whether the service is part of Istio mesh or outside the mesh.  Location determines the behavior of several features, such as service-to-service mTLS authentication, policy enforcement, etc. When communicating with services outside the mesh, Istio's mTLS authentication is disabled, and policy enforcement is performed on the client-side as opposed to server-side.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServiceEntry_Location",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "MESH_EXTERNAL(0),MESH_INTERNAL(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.ServiceEntry_Resolution": {
      "description": "Resolution determines how the proxy will resolve the IP addresses of the network endpoints associated with the service, so that it can route to one of them. The resolution mode specified here has no impact on how the application resolves the IP address associated with the service. The application may still have to use DNS to resolve the service to an IP so that the outbound traffic can be captured by the Proxy. Alternatively, for HTTP services, the application could directly communicate with the proxy (e.g., by setting HTTP_PROXY) to talk to these services.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServiceEntry_Resolution",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "DNS(2),DNS_ROUND_ROBIN(3),NONE(0),STATIC(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.ServicePort": {
      "description": "ServicePort describes the properties of a specific port of a service.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Label assigned to the port.",
          "type": "string"
        },
        "number": {
          "description": "A valid non-negative integer port number.",
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "description": "The protocol exposed on the port. MUST be one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS. TLS implies the connection will be routed based on the SNI header to the destination without terminating the TLS connection.",
          "type": "string"
        },
        "targetPort": {
          "description": "The port number on the endpoint where the traffic will be received. If unset, default to `number`.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "ServicePort",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.Sidecar": {
      "description": "`Sidecar` describes the configuration of the sidecar proxy that mediates inbound and outbound communication of the workload instance to which it is attached.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "egress": {
          "description": "Egress specifies the configuration of the sidecar for processing outbound traffic from the attached workload instance to other services in the mesh. If not specified, inherits the system detected defaults from the namespace-wide or the global default Sidecar.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IstioEgressListener"
          }
        },
        "inboundConnectionPool": {
          "description": "Settings controlling the volume of connections Envoy will accept from the network. This default will apply for all inbound listeners and can be overridden per-port in the `Ingress` field. This configuration mirrors the `DestinationRule`'s [`connectionPool`](https://istio.io/latest/docs/reference/config/networking/destination-rule/#ConnectionPoolSettings) field.\n\nBy default, Istio applies a service's `DestinationRule` to client sidecars for outbound traffic directed at the service -- the usual case folks think of when configuring a `DestinationRule` -- but also to the server's inbound sidecar. The `Sidecar`'s connection pool configures the server's inbound sidecar directly, so its settings can be different than clients'. This is valuable, for example, when you have many clients calling few servers: a `DestinationRule` can limit the concurrency of any single client, while the `Sidecar` allows you to configure much higher concurrency on the server side.\n\nConnection pool settings for a server's inbound sidecar are configured in the following precedence, highest to lowest: - per-port `ConnectionPool` from the `Sidecar` - top level `InboundConnectionPool` from the `Sidecar` - per-port `TrafficPolicy.ConnectionPool` from the `DestinationRule` - top level `TrafficPolicy.ConnectionPool` from the `DestinationRule` - default connection pool settings (essentially unlimited)\n\nIn every case, the connection pool settings are overridden, not merged.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings"
        },
        "ingress": {
          "description": "Ingress specifies the configuration of the sidecar for processing inbound traffic to the attached workload instance. If omitted, Istio will automatically configure the sidecar based on the information about the workload obtained from the orchestration platform (e.g., exposed ports, services, etc.). If specified, inbound ports are configured if and only if the workload instance is associated with a service.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IstioIngressListener"
          }
        },
        "outboundTrafficPolicy": {
          "description": "Set the default behavior of the sidecar for handling outbound traffic from the application.\n\nDefault mode is `ALLOW_ANY`, which means outbound traffic to unknown destinations will be allowed.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.OutboundTrafficPolicy"
        },
        "workloadSelector": {
          "description": "Criteria used to select the specific set of pods/VMs on which this `Sidecar` configuration should be applied. If omitted, the `Sidecar` configuration will be applied to all workload instances in the same namespace.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadSelector"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Sidecar",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.SidecarPort": {
      "description": "Port describes the properties of a specific port of a service.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Label assigned to the port.",
          "type": "string"
        },
        "number": {
          "description": "A valid non-negative integer port number.",
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "description": "The protocol exposed on the port. MUST be one of HTTP|HTTPS|GRPC|HTTP2|MONGO|TCP|TLS. TLS can be either used to terminate non-HTTP based connections on a specific port or to route traffic based on SNI header to the destination without terminating the TLS connection.",
          "type": "string"
        },
        "targetPort": {
          "description": "Has no effect, only for backwards compatibility received. Applicable only when used with ServiceEntries. $hide_from_docs\n\nDeprecated: Marked as deprecated in networking/v1alpha3/sidecar.proto.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "SidecarPort",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.StringMatch": {
      "description": "Describes how to match a given string in HTTP headers. `exact` and `prefix` matching is case-sensitive. `regex` matching supports case-insensitive matches.",
      "type": "object",
      "required": [
        "MatchType"
      ],
      "properties": {
        "MatchType": {
          "description": "Types that are assignable to MatchType:\n\n\t*StringMatch_Exact\n\t*StringMatch_Prefix\n\t*StringMatch_Regex",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.IsStringMatch_MatchType"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "StringMatch",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "MatchType"
    },
    "io.istio.api.networking.v1alpha3.StringMatch_Exact": {
      "description": "exact string match",
      "type": "object",
      "required": [
        "exact"
      ],
      "properties": {
        "exact": {
          "description": "exact string match",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "StringMatch_Exact",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsStringMatch_MatchType"
    },
    "io.istio.api.networking.v1alpha3.StringMatch_Prefix": {
      "description": "prefix-based match",
      "type": "object",
      "required": [
        "prefix"
      ],
      "properties": {
        "prefix": {
          "description": "prefix-based match",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "StringMatch_Prefix",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsStringMatch_MatchType"
    },
    "io.istio.api.networking.v1alpha3.StringMatch_Regex": {
      "description": "[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).\n\nExample: `(?i)^aaa$` can be used to case-insensitive match a string consisting of three a's.",
      "type": "object",
      "required": [
        "regex"
      ],
      "properties": {
        "regex": {
          "description": "[RE2 style regex-based match](https://github.com/google/re2/wiki/Syntax).\n\nExample: `(?i)^aaa$` can be used to case-insensitive match a string consisting of three a's.",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "StringMatch_Regex",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsStringMatch_MatchType"
    },
    "io.istio.api.networking.v1alpha3.Subset": {
      "description": "A subset of endpoints of a service. Subsets can be used for scenarios like A/B testing, or routing to a specific version of a service. Refer to [VirtualService](https://istio.io/docs/reference/config/networking/virtual-service/#VirtualService) documentation for examples of using subsets in these scenarios. In addition, traffic policies defined at the service-level can be overridden at a subset-level. The following rule uses a round robin load balancing policy for all traffic going to a subset named testversion that is composed of endpoints (e.g., pods) with labels (version:v3).\n\n```yaml apiVersion: networking.istio.io/v1 kind: DestinationRule metadata:\n\n\tname: bookinfo-ratings\n\nspec:\n\n\thost: ratings.prod.svc.cluster.local\n\ttrafficPolicy:\n\t  loadBalancer:\n\t    simple: LEAST_REQUEST\n\tsubsets:\n\t- name: testversion\n\t  labels:\n\t    version: v3\n\t  trafficPolicy:\n\t    loadBalancer:\n\t      simple: ROUND_ROBIN\n\n```\n\n**Note:** Policies specified for subsets will not take effect until a route rule explicitly sends traffic to this subset.\n\nOne or more labels are typically required to identify the subset destination, however, when the corresponding DestinationRule represents a host that supports multiple SNI hosts (e.g., an egress gateway), a subset without labels may be meaningful. In this case a traffic policy with [ClientTLSSettings](#ClientTLSSettings) can be used to identify a specific SNI host corresponding to the named subset.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Labels apply a filter over the endpoints of a service in the service registry. See route rules for examples of usage.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "name": {
          "description": "Name of the subset. The service name and the subset name can be used for traffic splitting in a route rule.",
          "type": "string"
        },
        "trafficPolicy": {
          "description": "Traffic policies that apply to this subset. Subsets inherit the traffic policies specified at the DestinationRule level. Settings specified at the subset level will override the corresponding settings specified at the DestinationRule level.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TrafficPolicy"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "Subset",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TCPHealthCheckConfig": {
      "type": "object",
      "properties": {
        "host": {
          "description": "Host to connect to, defaults to localhost",
          "type": "string"
        },
        "port": {
          "description": "Port of host",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TCPHealthCheckConfig",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TCPRoute": {
      "description": "Describes match conditions and actions for routing TCP traffic. The following routing rule forwards traffic arriving at port 27017 for mongo.prod.svc.cluster.local to another Mongo server on port 5555.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: bookinfo-mongo\n\nspec:\n\n\thosts:\n\t- mongo.prod.svc.cluster.local\n\ttcp:\n\t- match:\n\t  - port: 27017\n\t  route:\n\t  - destination:\n\t      host: mongo.backup.svc.cluster.local\n\t      port:\n\t        number: 5555\n\n```",
      "type": "object",
      "properties": {
        "match": {
          "description": "Match conditions to be satisfied for the rule to be activated. All conditions inside a single match block have AND semantics, while the list of match blocks have OR semantics. The rule is matched if any one of the match blocks succeed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.L4MatchAttributes"
          }
        },
        "route": {
          "description": "The destination to which the connection should be forwarded to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.RouteDestination"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TCPRoute",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TLSMatchAttributes": {
      "description": "TLS connection match attributes.",
      "type": "object",
      "properties": {
        "destinationSubnets": {
          "description": "IPv4 or IPv6 ip addresses of destination with optional subnet.  E.g., a.b.c.d/xx form or just a.b.c.d.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "gateways": {
          "description": "Names of gateways where the rule should be applied. Gateway names in the top-level `gateways` field of the VirtualService (if any) are overridden. The gateway match is independent of sourceLabels.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "port": {
          "description": "Specifies the port on the host that is being addressed. Many services only expose a single port or label ports with the protocols they support, in these cases it is not required to explicitly select the port.",
          "type": "integer",
          "format": "int64"
        },
        "sniHosts": {
          "description": "SNI (server name indicator) to match on. Wildcard prefixes can be used in the SNI value, e.g., *.com will match foo.example.com as well as example.com. An SNI value must be a subset (i.e., fall within the domain) of the corresponding virtual service's hosts.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "sourceLabels": {
          "description": "One or more labels that constrain the applicability of a rule to workloads with the given labels. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it should include the reserved gateway `mesh` in order for this field to be applicable.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "sourceNamespace": {
          "description": "Source namespace constraining the applicability of a rule to workloads in that namespace. If the VirtualService has a list of gateways specified in the top-level `gateways` field, it must include the reserved gateway `mesh` for this field to be applicable.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TLSMatchAttributes",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TLSRoute": {
      "description": "Describes match conditions and actions for routing unterminated TLS traffic (TLS/HTTPS) The following routing rule forwards unterminated TLS traffic arriving at port 443 of gateway called \"mygateway\" to internal services in the mesh based on the SNI value.\n\n```yaml apiVersion: networking.istio.io/v1 kind: VirtualService metadata:\n\n\tname: bookinfo-sni\n\nspec:\n\n\thosts:\n\t- \"*.bookinfo.com\"\n\tgateways:\n\t- mygateway\n\ttls:\n\t- match:\n\t  - port: 443\n\t    sniHosts:\n\t    - login.bookinfo.com\n\t  route:\n\t  - destination:\n\t      host: login.prod.svc.cluster.local\n\t- match:\n\t  - port: 443\n\t    sniHosts:\n\t    - reviews.bookinfo.com\n\t  route:\n\t  - destination:\n\t      host: reviews.prod.svc.cluster.local\n\n```",
      "type": "object",
      "properties": {
        "match": {
          "description": "Match conditions to be satisfied for the rule to be activated. All conditions inside a single match block have AND semantics, while the list of match blocks have OR semantics. The rule is matched if any one of the match blocks succeed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TLSMatchAttributes"
          }
        },
        "route": {
          "description": "The destination to which the connection should be forwarded to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.RouteDestination"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TLSRoute",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TrafficPolicy": {
      "description": "Traffic policies to apply for a specific destination, across all destination ports. See DestinationRule for examples.",
      "type": "object",
      "properties": {
        "connectionPool": {
          "description": "Settings controlling the volume of connections to an upstream service",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings"
        },
        "loadBalancer": {
          "description": "Settings controlling the load balancer algorithms.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LoadBalancerSettings"
        },
        "outlierDetection": {
          "description": "Settings controlling eviction of unhealthy hosts from the load balancing pool",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.OutlierDetection"
        },
        "portLevelSettings": {
          "description": "Traffic policies specific to individual ports. Note that port level settings will override the destination-level settings. Traffic settings specified at the destination-level will not be inherited when overridden by port-level settings, i.e. default values will be applied to fields omitted in port-level traffic policies.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TrafficPolicy_PortTrafficPolicy"
          }
        },
        "proxyProtocol": {
          "description": "The upstream PROXY protocol settings.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TrafficPolicy_ProxyProtocol"
        },
        "tls": {
          "description": "TLS related settings for connections to the upstream service.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ClientTLSSettings"
        },
        "tunnel": {
          "description": "Configuration of tunneling TCP over other transport or application layers for the host configured in the DestinationRule. Tunnel settings can be applied to TCP or TLS routes and can't be applied to HTTP routes.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TrafficPolicy_TunnelSettings"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TrafficPolicy",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TrafficPolicy_PortTrafficPolicy": {
      "description": "Traffic policies that apply to specific ports of the service",
      "type": "object",
      "properties": {
        "connectionPool": {
          "description": "Settings controlling the volume of connections to an upstream service",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ConnectionPoolSettings"
        },
        "loadBalancer": {
          "description": "Settings controlling the load balancer algorithms.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.LoadBalancerSettings"
        },
        "outlierDetection": {
          "description": "Settings controlling eviction of unhealthy hosts from the load balancing pool",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.OutlierDetection"
        },
        "port": {
          "description": "Specifies the number of a port on the destination service on which this policy is being applied.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.PortSelector"
        },
        "tls": {
          "description": "TLS related settings for connections to the upstream service.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ClientTLSSettings"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TrafficPolicy_PortTrafficPolicy",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TrafficPolicy_ProxyProtocol": {
      "type": "object",
      "properties": {
        "version": {
          "description": "The PROXY protocol version to use. See https://www.haproxy.org/download/2.1/doc/proxy-protocol.txt for details. By default it is `V1`.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TrafficPolicy_ProxyProtocol_VERSION"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TrafficPolicy_ProxyProtocol",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.TrafficPolicy_ProxyProtocol_VERSION": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TrafficPolicy_ProxyProtocol_VERSION",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "V1(0),V2(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.networking.v1alpha3.TrafficPolicy_TunnelSettings": {
      "type": "object",
      "properties": {
        "protocol": {
          "description": "Specifies which protocol to use for tunneling the downstream connection. Supported protocols are:\n  - CONNECT - uses HTTP CONNECT;\n  - POST - uses HTTP POST.\n\nCONNECT is used by default if not specified.\n\nHTTP version for upstream requests is determined by the service protocol defined for the proxy.",
          "type": "string"
        },
        "targetHost": {
          "description": "Specifies a host to which the downstream connection is tunneled. Target host must be an FQDN or IP address.",
          "type": "string"
        },
        "targetPort": {
          "description": "Specifies a port to which the downstream connection is tunneled.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "TrafficPolicy_TunnelSettings",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.VirtualService": {
      "description": "Configuration affecting traffic routing.\n\n\u003c!-- crd generation tags that should apply these routes\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "exportTo": {
          "description": "A list of namespaces to which this virtual service is exported. Exporting a virtual service allows it to be used by sidecars and gateways defined in other namespaces. This feature provides a mechanism for service owners and mesh administrators to control the visibility of virtual services across namespace boundaries.\n\nIf no namespaces are specified then the virtual service is exported to all namespaces by default.\n\nThe value \".\" is reserved and defines an export to the same namespace that the virtual service is declared in. Similarly the value \"*\" is reserved and defines an export to all namespaces.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "gateways": {
          "description": "The names of gateways and sidecars that should apply these routes. Gateways in other namespaces may be referred to by `\u003cgateway namespace\u003e/\u003cgateway name\u003e`; specifying a gateway with no namespace qualifier is the same as specifying the VirtualService's namespace. A single VirtualService is used for sidecars inside the mesh as well as for one or more gateways. The selection condition imposed by this field can be overridden using the source field in the match conditions of protocol-specific routes. The reserved word `mesh` is used to imply all the sidecars in the mesh. When this field is omitted, the default gateway (`mesh`) will be used, which would apply the rule to all sidecars in the mesh. If a list of gateway names is provided, the rules will apply only to the gateways. To apply the rules to both gateways and sidecars, specify `mesh` as one of the gateway names.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "hosts": {
          "description": "The destination hosts to which traffic is being sent. Could be a DNS name with wildcard prefix or an IP address.  Depending on the platform, short-names can also be used instead of a FQDN (i.e. has no dots in the name). In such a scenario, the FQDN of the host would be derived based on the underlying platform.\n\nA single VirtualService can be used to describe all the traffic properties of the corresponding hosts, including those for multiple HTTP and TCP ports. Alternatively, the traffic properties of a host can be defined using more than one VirtualService, with certain caveats. Refer to the [Operations Guide](https://istio.io/docs/ops/best-practices/traffic-management/#split-virtual-services) for details.\n\n*Note for Kubernetes users*: When short names are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"), Istio will interpret the short name based on the namespace of the rule, not the service. A rule in the \"default\" namespace containing a host \"reviews\" will be interpreted as \"reviews.default.svc.cluster.local\", irrespective of the actual namespace associated with the reviews service. _To avoid potential misconfigurations, it is recommended to always use fully qualified domain names over short names._\n\nThe hosts field applies to both HTTP and TCP services. Service inside the mesh, i.e., those found in the service registry, must always be referred to using their alphanumeric names. IP addresses are allowed only for services defined via the Gateway.\n\n*Note*: It must be empty for a delegate VirtualService.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "http": {
          "description": "An ordered list of route rules for HTTP traffic. HTTP routes will be applied to platform service ports using HTTP/HTTP2/GRPC protocols, gateway ports with protocol HTTP/HTTP2/GRPC/TLS-terminated-HTTPS and service entry ports using HTTP/HTTP2/GRPC protocols.  The first rule matching an incoming request is used.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.HTTPRoute"
          }
        },
        "tcp": {
          "description": "An ordered list of route rules for opaque TCP traffic. TCP routes will be applied to any port that is not a HTTP or TLS port. The first rule matching an incoming request is used.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TCPRoute"
          }
        },
        "tls": {
          "description": "An ordered list of route rule for non-terminated TLS \u0026 HTTPS traffic. Routing is typically performed using the SNI value presented by the ClientHello message. TLS routes will be applied to platform service ports named 'https-*', 'tls-*', unterminated gateway ports using HTTPS/TLS protocols (i.e. with \"passthrough\" TLS mode) and service entry ports using HTTPS/TLS protocols.  The first rule matching an incoming request is used.  NOTE: Traffic 'https-*' or 'tls-*' ports without associated virtual service will be treated as opaque TCP traffic.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.networking.v1alpha3.TLSRoute"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "VirtualService",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.WarmupConfiguration": {
      "type": "object",
      "properties": {
        "aggression": {
          "description": "This parameter controls the speed of traffic increase over the warmup duration. Defaults to 1.0, so that endpoints would get linearly increasing amount of traffic. When increasing the value for this parameter, the speed of traffic ramp-up increases non-linearly.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.DoubleValue"
        },
        "duration": {
          "description": "Duration of warmup mode",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        },
        "minimumPercent": {
          "description": "Configures the minimum percentage of origin weight If unspecified, defaults to 10",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.DoubleValue"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "WarmupConfiguration",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.WorkloadEntry": {
      "description": "WorkloadEntry enables specifying the properties of a single non-Kubernetes workload such a VM or a bare metal services that can be referred to by service entries.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "address": {
          "description": "Address associated with the network endpoint without the port.  Domain names can be used if and only if the resolution is set to DNS, and must be fully-qualified without wildcards. Use the form unix:///absolute/path/to/socket for Unix domain socket endpoints. If address is empty, network must be specified.",
          "type": "string"
        },
        "labels": {
          "description": "One or more labels associated with the endpoint.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "locality": {
          "description": "The locality associated with the endpoint. A locality corresponds to a failure domain (e.g., country/region/zone). Arbitrary failure domain hierarchies can be represented by separating each encapsulating failure domain by /. For example, the locality of an an endpoint in US, in US-East-1 region, within availability zone az-1, in data center rack r11 can be represented as us/us-east-1/az-1/r11. Istio will configure the sidecar to route to endpoints within the same locality as the sidecar. If none of the endpoints in the locality are available, endpoints parent locality (but within the same network ID) will be chosen. For example, if there are two endpoints in same network (networkID \"n1\"), say e1 with locality us/us-east-1/az-1/r11 and e2 with locality us/us-east-1/az-2/r12, a sidecar from us/us-east-1/az-1/r11 locality will prefer e1 from the same locality over e2 from a different locality. Endpoint e2 could be the IP associated with a gateway (that bridges networks n1 and n2), or the IP associated with a standard service endpoint.",
          "type": "string"
        },
        "network": {
          "description": "Network enables Istio to group endpoints resident in the same L3 domain/network. All endpoints in the same network are assumed to be directly reachable from one another. When endpoints in different networks cannot reach each other directly, an Istio Gateway can be used to establish connectivity (usually using the `AUTO_PASSTHROUGH` mode in a Gateway Server). This is an advanced configuration used typically for spanning an Istio mesh over multiple clusters. Required if address is not provided.",
          "type": "string"
        },
        "ports": {
          "description": "Set of ports associated with the endpoint. If the port map is specified, it must be a map of servicePortName to this endpoint's port, such that traffic to the service port will be forwarded to the endpoint port that maps to the service's portName. If omitted, and the targetPort is specified as part of the service's port specification, traffic to the service port will be forwarded to one of the endpoints on the specified `targetPort`. If both the targetPort and endpoint's port map are not specified, traffic to a service port will be forwarded to one of the endpoints on the same port.\n\n**NOTE 1:** Do not use for `unix://` addresses.\n\n**NOTE 2:** endpoint port map takes precedence over targetPort.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64",
            "default": 0
          }
        },
        "serviceAccount": {
          "description": "The service account associated with the workload if a sidecar is present in the workload. The service account must be present in the same namespace as the configuration ( WorkloadEntry or a ServiceEntry)",
          "type": "string"
        },
        "weight": {
          "description": "The load balancing weight associated with the endpoint. Endpoints with higher weights will receive proportionally higher traffic.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "WorkloadEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.WorkloadGroup": {
      "description": "`WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates. A `WorkloadGroup` can have more than one `WorkloadEntry`. `WorkloadGroup` has no relationship to resources which control service registry like `ServiceEntry` and as such doesn't configure host name for these workloads.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "metadata": {
          "description": "Metadata that will be used for all corresponding `WorkloadEntries`. User labels for a workload group should be set here in `metadata` rather than in `template`.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadGroup_ObjectMeta"
        },
        "probe": {
          "description": "`ReadinessProbe` describes the configuration the user must provide for healthchecking on their workload. This configuration mirrors K8S in both syntax and logic for the most part.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ReadinessProbe"
        },
        "template": {
          "description": "Template to be used for the generation of `WorkloadEntry` resources that belong to this `WorkloadGroup`. Please note that `address` and `labels` fields should not be set in the template, and an empty `serviceAccount` should default to `default`. The workload identities (mTLS certificates) will be bootstrapped using the specified service account's token. Workload entries in this group will be in the same namespace as the workload group, and inherit the labels and annotations from the above `metadata` field.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadEntry"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "WorkloadGroup",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.WorkloadGroup_ObjectMeta": {
      "description": "`ObjectMeta` describes metadata that will be attached to a `WorkloadEntry`. It is a subset of the supported Kubernetes metadata.",
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations to attach",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "labels": {
          "description": "Labels to attach",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "WorkloadGroup_ObjectMeta",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1alpha3.WorkloadSelector": {
      "description": "`WorkloadSelector` specifies the criteria used to determine if the `Gateway`, `Sidecar`, `EnvoyFilter`, `ServiceEntry`, or `DestinationRule` configuration can be applied to a proxy. The matching criteria includes the metadata associated with a proxy, workload instance info such as labels attached to the pod/VM, or any other info that the proxy provides to Istio during the initial handshake. If multiple conditions are specified, all conditions need to match in order for the workload instance to be selected. Currently, only label based selection mechanism is supported.",
      "type": "object",
      "properties": {
        "labels": {
          "description": "One or more labels that indicate a specific set of pods/VMs on which the configuration should be applied. The scope of label search is restricted to the configuration namespace in which the the resource is present.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha3",
        "Kind": "WorkloadSelector",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1beta1.ProxyConfig": {
      "description": "`ProxyConfig` exposes proxy level configuration options.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "concurrency": {
          "description": "The number of worker threads to run. If unset, this will be automatically determined based on CPU limits. If set to 0, all cores on the machine will be used.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.Int32Value"
        },
        "environmentVariables": {
          "description": "Additional environment variables for the proxy. Names starting with `ISTIO_META_` will be included in the generated bootstrap configuration and sent to the XDS server.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        },
        "image": {
          "description": "Specifies the details of the proxy image.",
          "$ref": "#/definitions/io.istio.api.networking.v1beta1.ProxyImage"
        },
        "selector": {
          "description": "Optional. Selectors specify the set of pods/VMs on which this `ProxyConfig` resource should be applied. If not set, the `ProxyConfig` resource will be applied to all workloads in the namespace where this resource is defined.",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.WorkloadSelector"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "ProxyConfig",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.networking.v1beta1.ProxyImage": {
      "description": "The following values are used to construct proxy image url. format: `${hub}/${image_name}/${tag}-${image_type}`, example: `docker.io/istio/proxyv2:1.11.1` or `docker.io/istio/proxyv2:1.11.1-distroless`. This information was previously part of the Values API.",
      "type": "object",
      "properties": {
        "imageType": {
          "description": "The image type of the image. Istio publishes default, debug, and distroless images. Other values are allowed if those image types (example: centos) are published to the specified hub. supported values: default, debug, distroless.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "ProxyImage",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1alpha1.IstioCertificateRequest": {
      "description": "Certificate request message. The authentication should be based on: 1. Bearer tokens carried in the side channel; 2. Client-side certificate via Mutual TLS handshake. Note: the service implementation is REQUIRED to verify the authenticated caller is authorize to all SANs in the CSR. The server side may overwrite any requested certificate field based on its policies.",
      "type": "object",
      "properties": {
        "csr": {
          "description": "PEM-encoded certificate request. The public key in the CSR is used to generate the certificate, and other fields in the generated certificate may be overwritten by the CA.",
          "type": "string"
        },
        "metadata": {
          "description": "$hide_from_docs Optional: Opaque metadata provided by the XDS node to Istio. Supported metadata: WorkloadName, WorkloadIP, ClusterID",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.structpb.Struct"
        },
        "validityDuration": {
          "description": "Optional: requested certificate validity period, in seconds.",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "IstioCertificateRequest",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1alpha1.IstioCertificateResponse": {
      "description": "Certificate response message.",
      "type": "object",
      "properties": {
        "certChain": {
          "description": "PEM-encoded certificate chain. The leaf cert is the first element, and the root cert is the last element.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "IstioCertificateResponse",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1alpha1.UnimplementedIstioCertificateServiceServer": {
      "description": "UnimplementedIstioCertificateServiceServer must be embedded to have forward compatible implementations.\n\nNOTE: this should be embedded by value instead of pointer to avoid a nil pointer dereference when methods are called.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "UnimplementedIstioCertificateServiceServer",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.AuthorizationPolicy": {
      "description": "AuthorizationPolicy enables access control on workloads.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "ActionDetail"
      ],
      "properties": {
        "ActionDetail": {
          "description": "Types that are assignable to ActionDetail:\n\n\t*AuthorizationPolicy_Provider",
          "default": {},
          "$ref": "#/definitions/io.istio.api.security.v1beta1.IsAuthorizationPolicy_ActionDetail"
        },
        "action": {
          "description": "Optional. The action to take if the request is matched with the rules. Default is ALLOW if not specified.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.security.v1beta1.AuthorizationPolicy_Action"
        },
        "rules": {
          "description": "Optional. A list of rules to match the request. A match occurs when at least one rule matches the request.\n\nIf not set, the match will never occur. This is equivalent to setting a default of deny for the target workloads if the action is ALLOW.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.Rule"
          }
        },
        "selector": {
          "description": "Optional. The selector decides where to apply the authorization policy. The selector will match with workloads in the same namespace as the authorization policy. If the authorization policy is in the root namespace, the selector will additionally match with workloads in all namespaces.\n\nIf the selector and the targetRef are not set, the selector will match all workloads.\n\nAt most one of `selector` or `targetRefs` can be set for a given policy.",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.WorkloadSelector"
        },
        "targetRef": {
          "description": "$hide_from_docs",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
        },
        "targetRefs": {
          "description": "Optional. The targetRefs specifies a list of resources the policy should be applied to. The targeted resources specified will determine which workloads the policy applies to.\n\nCurrently, the following resource attachment types are supported: * `kind: Gateway` with `group: gateway.networking.k8s.io` in the same namespace. * `kind: Service` with `group: \"\"` or `group: \"core\"` in the same namespace. This type is only supported for waypoints.\n\nIf not set, the policy is applied as defined by the selector. At most one of the selector and targetRefs can be set.\n\nNOTE: If you are using the `targetRefs` field in a multi-revision environment with Istio versions prior to 1.22, it is highly recommended that you pin the policy to a revision running 1.22+ via the `istio.io/rev` label. This is to prevent proxies connected to older control planes (that don't know about the `targetRefs` field) from misinterpreting the policy as namespace-wide during the upgrade process.\n\nNOTE: Waypoint proxies are required to use this field for policies to apply; `selector` policies will be ignored.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "AuthorizationPolicy",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "ActionDetail"
    },
    "io.istio.api.security.v1beta1.AuthorizationPolicy_Action": {
      "description": "Action specifies the operation to take.",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "AuthorizationPolicy_Action",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "ALLOW(0),AUDIT(2),CUSTOM(3),DENY(1)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.security.v1beta1.AuthorizationPolicy_ExtensionProvider": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Specifies the name of the extension provider. The list of available providers is defined in the MeshConfig. Note, currently at most 1 extension provider is allowed per workload. Different workloads can use different extension provider.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "AuthorizationPolicy_ExtensionProvider",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.AuthorizationPolicy_Provider": {
      "type": "object",
      "required": [
        "provider"
      ],
      "properties": {
        "provider": {
          "description": "Specifies detailed configuration of the CUSTOM action. Must be used only with CUSTOM action.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.AuthorizationPolicy_ExtensionProvider"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "AuthorizationPolicy_Provider",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsAuthorizationPolicy_ActionDetail"
    },
    "io.istio.api.security.v1beta1.ClaimToHeader": {
      "description": "This message specifies the detail for copying claim to header.",
      "type": "object",
      "properties": {
        "claim": {
          "description": "The name of the claim to be copied from. Only claim of type string/int/bool is supported. The header will not be there if the claim does not exist or the type of the claim is not supported.",
          "type": "string"
        },
        "header": {
          "description": "The name of the header to be created. The header will be overridden if it already exists in the request.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "ClaimToHeader",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.Condition": {
      "description": "Condition specifies additional required attributes.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The name of an Istio attribute. See the [full list of supported attributes](https://istio.io/docs/reference/config/security/conditions/).",
          "type": "string"
        },
        "notValues": {
          "description": "Optional. A list of negative match of values for the attribute. Note: at least one of `values` or `notValues` must be set.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "values": {
          "description": "Optional. A list of allowed values for the attribute. Note: at least one of `values` or `notValues` must be set.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "Condition",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.IsAuthorizationPolicy_ActionDetail": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "IsAuthorizationPolicy_ActionDetail",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "AuthorizationPolicy_Provider",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.security.v1beta1.JWTHeader": {
      "description": "This message specifies a header location to extract JWT token.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The HTTP header name.",
          "type": "string"
        },
        "prefix": {
          "description": "The prefix that should be stripped before decoding the token. For example, for `Authorization: Bearer \u003ctoken\u003e`, prefix=`Bearer` with a space at the end. If the header doesn't have this exact prefix, it is considered invalid.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "JWTHeader",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.JWTRule": {
      "description": "JSON Web Token (JWT) token format for authentication as defined by [RFC 7519](https://tools.ietf.org/html/rfc7519). See [OAuth 2.0](https://tools.ietf.org/html/rfc6749) and [OIDC 1.0](http://openid.net/connect) for how this is used in the whole authentication flow.\n\nExamples:\n\nSpec for a JWT that is issued by `https://example.com`, with the audience claims must be either `bookstore_android.apps.example.com` or `bookstore_web.apps.example.com`. The token should be presented at the `Authorization` header (default). The JSON Web Key Set (JWKS) will be discovered following OpenID Connect protocol.\n\n```yaml issuer: https://example.com audiences:\n  - bookstore_android.apps.example.com\n    bookstore_web.apps.example.com\n\n```\n\nThis example specifies a token in a non-default location (`x-goog-iap-jwt-assertion` header). It also defines the URI to fetch JWKS explicitly.\n\n```yaml issuer: https://example.com jwksUri: https://example.com/.secret/jwks.json fromHeaders: - \"x-goog-iap-jwt-assertion\" ```",
      "type": "object",
      "properties": {
        "audiences": {
          "description": "The list of JWT [audiences](https://tools.ietf.org/html/rfc7519#section-4.1.3) that are allowed to access. A JWT containing any of these audiences will be accepted.\n\nThe service name will be accepted if audiences is empty.\n\nExample:\n\n```yaml audiences:\n  - bookstore_android.apps.example.com\n    bookstore_web.apps.example.com\n\n```",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "forwardOriginalToken": {
          "description": "If set to true, the original token will be kept for the upstream request. Default is false.",
          "type": "boolean"
        },
        "fromCookies": {
          "description": "List of cookie names from which JWT is expected.\t// For example, if config is:\n\n``` yaml\n\n\tfrom_cookies:\n\t- auth-token\n\n``` Then JWT will be extracted from “auth-token“ cookie in the request.\n\nNote: Requests with multiple tokens (at different locations) are not supported, the output principal of such requests is undefined.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "fromHeaders": {
          "description": "List of header locations from which JWT is expected. For example, below is the location spec if JWT is expected to be found in `x-jwt-assertion` header, and have `Bearer` prefix:\n\n```yaml\n\n\tfromHeaders:\n\t- name: x-jwt-assertion\n\t  prefix: \"Bearer \"\n\n```\n\nNote: Requests with multiple tokens (at different locations) are not supported, the output principal of such requests is undefined.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.JWTHeader"
          }
        },
        "fromParams": {
          "description": "List of query parameters from which JWT is expected. For example, if JWT is provided via query parameter `my_token` (e.g `/path?my_token=\u003cJWT\u003e`), the config is:\n\n```yaml\n\n\tfromParams:\n\t- \"my_token\"\n\n```\n\nNote: Requests with multiple tokens (at different locations) are not supported, the output principal of such requests is undefined.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "issuer": {
          "description": "Identifies the issuer that issued the JWT. See [issuer](https://tools.ietf.org/html/rfc7519#section-4.1.1) A JWT with different `iss` claim will be rejected.\n\nExample: `https://foobar.auth0.com` Example: `1234567-compute@developer.gserviceaccount.com`",
          "type": "string"
        },
        "jwks": {
          "description": "JSON Web Key Set of public keys to validate signature of the JWT. See https://auth0.com/docs/jwks.\n\nNote: Only one of `jwksUri` and `jwks` should be used.",
          "type": "string"
        },
        "jwksUri": {
          "description": "URL of the provider's public key set to validate signature of the JWT. See [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).\n\nOptional if the key set document can either (a) be retrieved from [OpenID Discovery](https://openid.net/specs/openid-connect-discovery-1_0.html) of the issuer or (b) inferred from the email domain of the issuer (e.g. a Google service account).\n\nExample: `https://www.googleapis.com/oauth2/v1/certs`\n\nNote: Only one of `jwksUri` and `jwks` should be used.",
          "type": "string"
        },
        "outputClaimToHeaders": {
          "description": "This field specifies a list of operations to copy the claim to HTTP headers on a successfully verified token. This differs from the `output_payload_to_header` by allowing outputting individual claims instead of the whole payload. The header specified in each operation in the list must be unique. Nested claims of type string/int/bool is supported as well. ```\n\n\toutputClaimToHeaders:\n\t- header: x-my-company-jwt-group\n\t  claim: my-group\n\t- header: x-test-environment-flag\n\t  claim: test-flag\n\t- header: x-jwt-claim-group\n\t  claim: nested.key.group\n\n``` [Experimental] This feature is a experimental feature.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.ClaimToHeader"
          }
        },
        "outputPayloadToHeader": {
          "description": "This field specifies the header name to output a successfully verified JWT payload to the backend. The forwarded data is `base64_encoded(jwt_payload_in_JSON)`. If it is not specified, the payload will not be emitted.",
          "type": "string"
        },
        "timeout": {
          "description": "The maximum amount of time that the resolver, determined by the PILOT_JWT_ENABLE_REMOTE_JWKS environment variable, will spend waiting for the JWKS to be fetched. Default is 5s.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "JWTRule",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.Operation": {
      "description": "Operation specifies the operations of a request. Fields in the operation are ANDed together.\n\nFor example, the following operation matches if the host has suffix `.example.com` and the method is `GET` or `HEAD` and the path doesn't have prefix `/admin`.\n\n```yaml hosts: [\"*.example.com\"] methods: [\"GET\", \"HEAD\"] notPaths: [\"/admin*\"] ```",
      "type": "object",
      "properties": {
        "hosts": {
          "description": "Optional. A list of hosts as specified in the HTTP request. The match is case-insensitive. See the [security best practices](https://istio.io/latest/docs/ops/best-practices/security/#writing-host-match-policies) for recommended usage of this field.\n\nIf not set, any host is allowed. Must be used only with HTTP.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "methods": {
          "description": "Optional. A list of methods as specified in the HTTP request. For gRPC service, this will always be `POST`.\n\nIf not set, any method is allowed. Must be used only with HTTP.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notHosts": {
          "description": "Optional. A list of negative match of hosts as specified in the HTTP request. The match is case-insensitive.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notMethods": {
          "description": "Optional. A list of negative match of methods as specified in the HTTP request.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notPaths": {
          "description": "Optional. A list of negative match of paths.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notPorts": {
          "description": "Optional. A list of negative match of ports as specified in the connection.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "paths": {
          "description": "Optional. A list of paths as specified in the HTTP request. See the [Authorization Policy Normalization](https://istio.io/latest/docs/reference/config/security/normalization/) for details of the path normalization. For gRPC service, this will be the fully-qualified name in the form of `/package.service/method`.\n\nIf a path in the list contains the `{*}` or `{**}` path template operator, it will be interpreted as an [Envoy Uri Template](https://www.envoyproxy.io/docs/envoy/latest/api-v3/extensions/path/match/uri_template/v3/uri_template_match.proto). To be a valid path template, the path must not contain `*`, `{`, or `}` outside of a supported operator. No other characters are allowed in the path segment with the path template operator. - `{*}` matches a single glob that cannot extend beyond a path segment. - `{**}` matches zero or more globs. If a path contains `{**}`, it must be the last operator.\n\nExamples: - `/foo/{*}` matches `/foo/bar` but not `/foo/bar/baz` - `/foo/{**}/` matches `/foo/bar/`, `/foo/bar/baz.txt`, and `/foo//` but not `/foo/bar` - `/foo/{*}/bar/{**}` matches `/foo/buzz/bar/` and `/foo/buzz/bar/baz` - `/*/baz/{*}` is not a valid path template since it includes `*` outside of a supported operator - `/**/baz/{*}` is not a valid path template since it includes `**` outside of a supported operator - `/{**}/foo/{*}` is not a valid path template since `{**}` is not the last operator - `/foo/{*}.txt` is invalid since there are characters other than `{*}` in the path segment\n\nIf not set, any path is allowed. Must be used only with HTTP.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "ports": {
          "description": "Optional. A list of ports as specified in the connection.\n\nIf not set, any port is allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "Operation",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.PeerAuthentication": {
      "description": "\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "mtls": {
          "description": "Mutual TLS settings for workload. If not defined, inherit from parent.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.PeerAuthentication_MutualTLS"
        },
        "portLevelMtls": {
          "description": "Port specific mutual TLS settings. These only apply when a workload selector is specified. The port refers to the port of the workload, not the port of the Kubernetes service.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.PeerAuthentication_MutualTLS"
          }
        },
        "selector": {
          "description": "The selector determines the workloads to apply the PeerAuthentication on. The selector will match with workloads in the same namespace as the policy. If the policy is in the root namespace, the selector will additionally match with workloads in all namespace.\n\nIf not set, the policy will be applied to all workloads in the same namespace as the policy. If it is in the root namespace, it would be applied to all workloads in the mesh.",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.WorkloadSelector"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "PeerAuthentication",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.PeerAuthentication_MutualTLS": {
      "description": "Mutual TLS settings.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Defines the mTLS mode used for peer authentication.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.security.v1beta1.PeerAuthentication_MutualTLS_Mode"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "PeerAuthentication_MutualTLS",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.PeerAuthentication_MutualTLS_Mode": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "PeerAuthentication_MutualTLS_Mode",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "DISABLE(1),PERMISSIVE(2),STRICT(3),UNSET(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.security.v1beta1.RequestAuthentication": {
      "description": "\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "jwtRules": {
          "description": "Define the list of JWTs that can be validated at the selected workloads' proxy. A valid token will be used to extract the authenticated identity. Each rule will be activated only when a token is presented at the location recognized by the rule. The token will be validated based on the JWT rule config. If validation fails, the request will be rejected. Note: Requests with multiple tokens (at different locations) are not supported, the output principal of such requests is undefined.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.JWTRule"
          }
        },
        "selector": {
          "description": "Optional. The selector decides where to apply the request authentication policy. The selector will match with workloads in the same namespace as the request authentication policy. If the request authentication policy is in the root namespace, the selector will additionally match with workloads in all namespaces.\n\nIf not set, the selector will match all workloads.\n\nAt most one of `selector` or `targetRefs` can be set for a given policy.",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.WorkloadSelector"
        },
        "targetRef": {
          "description": "$hide_from_docs",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
        },
        "targetRefs": {
          "description": "Optional. The targetRefs specifies a list of resources the policy should be applied to. The targeted resources specified will determine which workloads the policy applies to.\n\nCurrently, the following resource attachment types are supported: * `kind: Gateway` with `group: gateway.networking.k8s.io` in the same namespace. * `kind: Service` with `group: \"\"` or `group: \"core\"` in the same namespace. This type is only supported for waypoints.\n\nIf not set, the policy is applied as defined by the selector. At most one of the selector and targetRefs can be set.\n\nNOTE: If you are using the `targetRefs` field in a multi-revision environment with Istio versions prior to 1.22, it is highly recommended that you pin the policy to a revision running 1.22+ via the `istio.io/rev` label. This is to prevent proxies connected to older control planes (that don't know about the `targetRefs` field) from misinterpreting the policy as namespace-wide during the upgrade process.\n\nNOTE: Waypoint proxies are required to use this field for policies to apply; `selector` policies will be ignored.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "RequestAuthentication",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.Rule": {
      "description": "Rule matches requests from a list of sources that perform a list of operations subject to a list of conditions. A match occurs when at least one source, one operation and all conditions matches the request. An empty rule is always matched.\n\nAny string field in the rule supports Exact, Prefix, Suffix and Presence match:\n\n- Exact match: `abc` will match on value `abc`. - Prefix match: `abc*` will match on value `abc` and `abcd`. - Suffix match: `*abc` will match on value `abc` and `xabc`. - Presence match: `*` will match when value is not empty.",
      "type": "object",
      "properties": {
        "from": {
          "description": "Optional. `from` specifies the source of a request.\n\nIf not set, any source is allowed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.Rule_From"
          }
        },
        "to": {
          "description": "Optional. `to` specifies the operation of a request.\n\nIf not set, any operation is allowed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.Rule_To"
          }
        },
        "when": {
          "description": "Optional. `when` specifies a list of additional conditions of a request.\n\nIf not set, any condition is allowed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.security.v1beta1.Condition"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "Rule",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.Rule_From": {
      "description": "From includes a list of sources.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Source specifies the source of a request.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.Source"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "Rule_From",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.Rule_To": {
      "description": "To includes a list of operations.",
      "type": "object",
      "properties": {
        "operation": {
          "description": "Operation specifies the operation of a request.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.Operation"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "Rule_To",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.security.v1beta1.Source": {
      "description": "Source specifies the source identities of a request. Fields in the source are ANDed together.\n\nFor example, the following source matches if the principal is `admin` or `dev` and the namespace is `prod` or `test` and the ip is not `203.0.113.4`.\n\n```yaml principals: [\"admin\", \"dev\"] namespaces: [\"prod\", \"test\"] notIpBlocks: [\"203.0.113.4\"] ```",
      "type": "object",
      "properties": {
        "ipBlocks": {
          "description": "Optional. A list of IP blocks, populated from the source address of the IP packet. Single IP (e.g. `203.0.113.4`) and CIDR (e.g. `203.0.113.0/24`) are supported. This is the same as the `source.ip` attribute.\n\nIf not set, any IP is allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "namespaces": {
          "description": "Optional. A list of namespaces derived from the peer certificate. This field requires mTLS enabled and is the same as the `source.namespace` attribute.\n\nIf not set, any namespace is allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notIpBlocks": {
          "description": "Optional. A list of negative match of IP blocks.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notNamespaces": {
          "description": "Optional. A list of negative match of namespaces.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notPrincipals": {
          "description": "Optional. A list of negative match of peer identities.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notRemoteIpBlocks": {
          "description": "Optional. A list of negative match of remote IP blocks.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "notRequestPrincipals": {
          "description": "Optional. A list of negative match of request identities.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "principals": {
          "description": "Optional. A list of peer identities derived from the peer certificate. The peer identity is in the format of `\"\u003cTRUST_DOMAIN\u003e/ns/\u003cNAMESPACE\u003e/sa/\u003cSERVICE_ACCOUNT\u003e\"`, for example, `\"cluster.local/ns/default/sa/productpage\"`. This field requires mTLS enabled and is the same as the `source.principal` attribute.\n\nIf not set, any principal is allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "remoteIpBlocks": {
          "description": "Optional. A list of IP blocks, populated from `X-Forwarded-For` header or proxy protocol. To make use of this field, you must configure the `numTrustedProxies` field of the `gatewayTopology` under the `meshConfig` when you install Istio or using an annotation on the ingress gateway.  See the documentation here: [Configuring Gateway Network Topology](https://istio.io/latest/docs/ops/configuration/traffic-management/network-topologies/). Single IP (e.g. `203.0.113.4`) and CIDR (e.g. `203.0.113.0/24`) are supported. This is the same as the `remote.ip` attribute.\n\nIf not set, any IP is allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        },
        "requestPrincipals": {
          "description": "Optional. A list of request identities derived from the JWT. The request identity is in the format of `\"\u003cISS\u003e/\u003cSUB\u003e\"`, for example, `\"example.com/sub-1\"`. This field requires request authentication enabled and is the same as the `request.auth.principal` attribute.\n\nIf not set, any request principal is allowed.",
          "type": "array",
          "items": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "Source",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.AccessLogging": {
      "description": "Access logging defines the workload-level overrides for access log generation. It can be used to select provider or enable/disable access log generation for a workload.",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Controls logging. If set to true, no access logs will be generated for impacted workloads (for the specified providers). NOTE: currently default behavior will be controlled by the provider(s) selected above. Customization controls will be added to this API in future releases.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        },
        "filter": {
          "description": "Optional. If specified, this filter will be used to select specific requests/connections for logging.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.AccessLogging_Filter"
        },
        "match": {
          "description": "Allows tailoring of logging behavior to specific conditions.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.AccessLogging_LogSelector"
        },
        "providers": {
          "description": "Optional. Name of providers to which this configuration should apply. If a provider is not specified, the [default logging provider](https://istio.io/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig-DefaultProviders) will be used.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.ProviderRef"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AccessLogging",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.AccessLogging_Filter": {
      "description": "Allows specification of an access log filter.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "CEL expression for selecting when requests/connections should be logged.\n\nExamples:\n\n- `response.code \u003e= 400` - `connection.mtls \u0026\u0026 request.url_path.contains('v1beta3')` - `!has(request.useragent) || !(request.useragent.startsWith(\"Amazon-Route53-Health-Check-Service\"))`",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AccessLogging_Filter",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.AccessLogging_LogSelector": {
      "description": "LogSelector provides a coarse-grained ability to configure logging behavior based on certain traffic metadata (such as traffic direction). LogSelector applies to traffic metadata which is not represented in the attribute set currently supported by [filters](https://istio.io/latest/docs/reference/config/telemetry/#AccessLogging-Filter). It allows control planes to limit the configuration sent to individual workloads. Finer-grained logging behavior can be further configured via `filter`.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "This determines whether or not to apply the access logging configuration based on the direction of traffic relative to the proxied workload.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.WorkloadMode"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "AccessLogging_LogSelector",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.IsMetricSelector_MetricMatch": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "IsMetricSelector_MetricMatch",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "MetricSelector_CustomMetric,MetricSelector_Metric",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.telemetry.v1alpha1.IsTracing_CustomTag_Type": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "IsTracing_CustomTag_Type",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implementation": "Tracing_CustomTag_Environment,Tracing_CustomTag_Header,Tracing_CustomTag_Literal",
      "x-kubernetes-fabric8-type": "interface"
    },
    "io.istio.api.telemetry.v1alpha1.MetricSelector": {
      "description": "Provides a mechanism for matching metrics for the application of override behaviors.",
      "type": "object",
      "required": [
        "MetricMatch"
      ],
      "properties": {
        "MetricMatch": {
          "description": "Controls which metric(s) are selected by the selector.\n\nTypes that are assignable to MetricMatch:\n\n\t*MetricSelector_Metric\n\t*MetricSelector_CustomMetric",
          "default": {},
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.IsMetricSelector_MetricMatch"
        },
        "mode": {
          "description": "Controls which mode of metrics generation is selected: `CLIENT`, `SERVER`, or `CLIENT_AND_SERVER`.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.WorkloadMode"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "MetricSelector",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "MetricMatch"
    },
    "io.istio.api.telemetry.v1alpha1.MetricSelector_CustomMetric": {
      "type": "object",
      "required": [
        "customMetric"
      ],
      "properties": {
        "customMetric": {
          "description": "Allows free-form specification of a metric. No validation of custom metrics is provided.",
          "type": "string",
          "default": ""
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "MetricSelector_CustomMetric",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsMetricSelector_MetricMatch"
    },
    "io.istio.api.telemetry.v1alpha1.MetricSelector_IstioMetric": {
      "description": "Curated list of known metric types that is supported by Istio metric providers. See also: https://istio.io/latest/docs/reference/config/metrics/#metrics",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "MetricSelector_IstioMetric",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "ALL_METRICS(0),GRPC_REQUEST_MESSAGES(9),GRPC_RESPONSE_MESSAGES(10),REQUEST_COUNT(1),REQUEST_DURATION(2),REQUEST_SIZE(3),RESPONSE_SIZE(4),TCP_CLOSED_CONNECTIONS(6),TCP_OPENED_CONNECTIONS(5),TCP_RECEIVED_BYTES(8),TCP_SENT_BYTES(7)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.telemetry.v1alpha1.MetricSelector_Metric": {
      "type": "object",
      "required": [
        "metric"
      ],
      "properties": {
        "metric": {
          "description": "One of the well-known [Istio Standard Metrics](https://istio.io/latest/docs/reference/config/metrics/).",
          "default": {},
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.MetricSelector_IstioMetric"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "MetricSelector_Metric",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsMetricSelector_MetricMatch"
    },
    "io.istio.api.telemetry.v1alpha1.Metrics": {
      "description": "Metrics defines the workload-level overrides for metrics generation behavior within a mesh. It can be used to enable/disable metrics generation, as well as to customize the dimensions of the generated metrics.",
      "type": "object",
      "properties": {
        "overrides": {
          "description": "Optional. Ordered list of overrides to metrics generation behavior.\n\nSpecified overrides will be applied in order. They will be applied on top of inherited overrides from other resources in the hierarchy in the following order: 1. Mesh-scoped overrides 2. Namespace-scoped overrides 3. Workload-scoped overrides\n\nBecause overrides are applied in order, users are advised to order their overrides from least specific to most specific matches. That is, it is a best practice to list any universal overrides first, with tailored overrides following them.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.MetricsOverrides"
          }
        },
        "providers": {
          "description": "Optional. Name of providers to which this configuration should apply. If a provider is not specified, the [default metrics provider](https://istio.io/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig-DefaultProviders) will be used.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.ProviderRef"
          }
        },
        "reportingInterval": {
          "description": "Optional. Reporting interval allows configuration of the time between calls out to for metrics reporting. This currently only supports TCP metrics but we may use this for long duration HTTP streams in the future. The default duration is `5s`.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.durationpb.Duration"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Metrics",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.MetricsOverrides": {
      "description": "MetricsOverrides defines custom metric generation behavior for an individual metric or the set of all standard metrics.",
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Optional. Must explicitly set this to `true` to turn off metrics reporting for the listed metrics. If disabled has been set to `true` in a parent configuration, it must explicitly be set to `false` to turn metrics reporting on in the workloads selected by the Telemetry resource.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        },
        "match": {
          "description": "Match allows providing the scope of the override. It can be used to select individual metrics, as well as the workload modes (server, client, or both) in which the metrics will be generated.\n\nIf match is not specified, the overrides will apply to *all* metrics for *both* modes of operation (client and server).",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.MetricSelector"
        },
        "tagOverrides": {
          "description": "Optional. Collection of tag names and tag expressions to override in the selected metric(s). The key in the map is the name of the tag. The value in the map is the operation to perform on the the tag. WARNING: some providers may not support adding/removing tags. See also: https://istio.io/latest/docs/reference/config/metrics/#labels",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.MetricsOverrides_TagOverride"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "MetricsOverrides",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.MetricsOverrides_TagOverride": {
      "description": "TagOverride specifies an operation to perform on a metric dimension (also known as a `label`). Tags may be added, removed, or have their default values overridden.",
      "type": "object",
      "properties": {
        "operation": {
          "description": "Operation controls whether or not to update/add a tag, or to remove it.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.MetricsOverrides_TagOverride_Operation"
        },
        "value": {
          "description": "Value is only considered if the operation is `UPSERT`. Values are [CEL expressions](https://opensource.google/projects/cel) over attributes. Examples include: `string(destination.port)` and `request.host`. Istio exposes all standard [Envoy attributes](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes). Additionally, Istio exposes node metadata as attributes. More information is provided in the [customization docs](https://istio.io/latest/docs/tasks/observability/metrics/customize-metrics/#use-expressions-for-values).",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "MetricsOverrides_TagOverride",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.MetricsOverrides_TagOverride_Operation": {
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "MetricsOverrides_TagOverride_Operation",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "REMOVE(1),UPSERT(0)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.telemetry.v1alpha1.ProviderRef": {
      "description": "Used to bind Telemetry configuration to specific providers for targeted customization.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. Name of Telemetry provider in [MeshConfig](https://istio.io/latest/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig-ExtensionProvider).",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "ProviderRef",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.Telemetry": {
      "description": "\u003c!-- crd generation tags is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "properties": {
        "accessLogging": {
          "description": "Optional. Access logging configures the access logging behavior for all selected workloads.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.AccessLogging"
          }
        },
        "metrics": {
          "description": "Optional. Metrics configures the metrics behavior for all selected workloads.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Metrics"
          }
        },
        "selector": {
          "description": "Optional. The selector decides where to apply the policy. If not set, the policy will be applied to all workloads in the same namespace as the policy.\n\nAt most one of `selector` or `targetRefs` can be set for a given policy.",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.WorkloadSelector"
        },
        "targetRef": {
          "description": "$hide_from_docs",
          "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
        },
        "targetRefs": {
          "description": "Optional. The targetRefs specifies a list of resources the policy should be applied to. The targeted resources specified will determine which workloads the policy applies to.\n\nCurrently, the following resource attachment types are supported: * `kind: Gateway` with `group: gateway.networking.k8s.io` in the same namespace. * `kind: Service` with `group: \"\"` or `group: \"core\"` in the same namespace. This type is only supported for waypoints.\n\nIf not set, the policy is applied as defined by the selector. At most one of the selector and targetRefs can be set.\n\nNOTE: If you are using the `targetRefs` field in a multi-revision environment with Istio versions prior to 1.22, it is highly recommended that you pin the policy to a revision running 1.22+ via the `istio.io/rev` label. This is to prevent proxies connected to older control planes (that don't know about the `targetRefs` field) from misinterpreting the policy as namespace-wide during the upgrade process.\n\nNOTE: Waypoint proxies are required to use this field for policies to apply; `selector` policies will be ignored.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.type.v1beta1.PolicyTargetReference"
          }
        },
        "tracing": {
          "description": "Optional. Tracing configures the tracing behavior for all selected workloads.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Tracing"
          }
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Telemetry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.Tracing": {
      "description": "Tracing configures tracing behavior for workloads within a mesh. It can be used to enable/disable tracing, as well as to set sampling rates and custom tag extraction.\n\nTracing configuration support overrides of the fields `providers`, `random_sampling_percentage`, `disable_span_reporting`, and `custom_tags` at each level in the configuration hierarchy, with missing values filled in from parent resources. However, when specified, `custom_tags` will fully replace any values provided by parent configuration.",
      "type": "object",
      "properties": {
        "customTags": {
          "description": "Optional. Configures additional custom tags to the generated trace spans.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Tracing_CustomTag"
          }
        },
        "disableSpanReporting": {
          "description": "Controls span reporting. If set to true, no spans will be reported for impacted workloads. This does NOT impact context propagation or trace sampling behavior.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        },
        "match": {
          "description": "Allows tailoring of behavior to specific conditions.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Tracing_TracingSelector"
        },
        "providers": {
          "description": "Optional. Name of provider(s) to use for span reporting. If a provider is not specified, the [default tracing provider](https://istio.io/docs/reference/config/istio.mesh.v1alpha1/#MeshConfig-DefaultProviders) will be used. NOTE: At the moment, only a single provider can be specified in a given Tracing rule.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.ProviderRef"
          }
        },
        "randomSamplingPercentage": {
          "description": "Controls the rate at which traffic will be selected for tracing if no prior sampling decision has been made. If a prior sampling decision has been made, that decision will be respected. However, if no sampling decision has been made (example: no `x-b3-sampled` tracing header was present in the requests), the traffic will be selected for telemetry generation at the percentage specified.\n\nDefaults to 0%. Valid values [0.00-100.00]. Can be specified in 0.01% increments.",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.DoubleValue"
        },
        "useRequestIdForTraceSampling": {
          "description": "This value is true by default; Envoy decides whether or not to sample based on the value of the Request ID generated by Ingress in distributed tracing. The format of this Request ID is specific to Envoy, and if the Request ID generated by the proxy that receives user traffic first is not specific to Envoy, Envoy will break the trace because it cannot interpret the Request ID. By setting this value to false, we can prevent Envoy from sampling based on the Request ID. As a result, the trace will not be broken even if the Request ID is not in the Envoy format. [Trace Context Propagation](https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/observability/tracing#trace-context-propagation) provides more information on Request ID handling. $hide_from_docs",
          "$ref": "#/definitions/org.golang.google.protobuf.types.known.wrapperspb.BoolValue"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_CustomTag": {
      "description": "CustomTag defines a tag to be added to a trace span that is based on an operator-supplied value. This value can either be a hard-coded value, a value taken from an environment variable known to the sidecar proxy, or from a request header.\n\nNOTE: when specified, `custom_tags` will fully replace any values provided by parent configuration.",
      "type": "object",
      "required": [
        "Type"
      ],
      "properties": {
        "Type": {
          "description": "Types that are assignable to Type:\n\n\t*Tracing_CustomTag_Literal\n\t*Tracing_CustomTag_Environment\n\t*Tracing_CustomTag_Header",
          "default": {},
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.IsTracing_CustomTag_Type"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_CustomTag",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-interface-fields": "Type"
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_CustomTag_Environment": {
      "type": "object",
      "required": [
        "environment"
      ],
      "properties": {
        "environment": {
          "description": "Environment adds the value of an environment variable to each span.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Tracing_Environment"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_CustomTag_Environment",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsTracing_CustomTag_Type"
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_CustomTag_Header": {
      "type": "object",
      "required": [
        "header"
      ],
      "properties": {
        "header": {
          "description": "RequestHeader adds the value of an header from the request to each span.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Tracing_RequestHeader"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_CustomTag_Header",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsTracing_CustomTag_Type"
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_CustomTag_Literal": {
      "type": "object",
      "required": [
        "literal"
      ],
      "properties": {
        "literal": {
          "description": "Literal adds the same, hard-coded value to each span.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Tracing_Literal"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_CustomTag_Literal",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-implements": "IsTracing_CustomTag_Type"
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_Environment": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "Optional. If the environment variable is not found, this value will be used instead.",
          "type": "string"
        },
        "name": {
          "description": "Name of the environment variable from which to extract the tag value.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_Environment",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_Literal": {
      "type": "object",
      "properties": {
        "value": {
          "description": "The tag value to use.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_Literal",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_RequestHeader": {
      "type": "object",
      "properties": {
        "defaultValue": {
          "description": "Optional. If the header is not found, this value will be used instead.",
          "type": "string"
        },
        "name": {
          "description": "Name of the header from which to extract the tag value.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_RequestHeader",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.Tracing_TracingSelector": {
      "description": "TracingSelector provides a coarse-grained ability to configure tracing behavior based on certain traffic metadata (such as traffic direction).",
      "type": "object",
      "properties": {
        "mode": {
          "description": "This determines whether or not to apply the tracing configuration based on the direction of traffic relative to the proxied workload.",
          "default": {},
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.WorkloadMode"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "Tracing_TracingSelector",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.telemetry.v1alpha1.WorkloadMode": {
      "description": "WorkloadMode allows selection of the role of the underlying workload in network traffic. A workload is considered as acting as a `SERVER` if it is the destination of the traffic (that is, traffic direction, from the perspective of the workload is *inbound*). If the workload is the source of the network traffic, it is considered to be in `CLIENT` mode (traffic is *outbound* from the workload).",
      "type": "object",
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1alpha1",
        "Kind": "WorkloadMode",
        "Scope": "Namespaced"
      },
      "x-kubernetes-fabric8-enum-values": "CLIENT(1),CLIENT_AND_SERVER(0),SERVER(2)",
      "x-kubernetes-fabric8-type": "enum"
    },
    "io.istio.api.type.v1beta1.PolicyTargetReference": {
      "description": "PolicyTargetReference format as defined by [GEP-2648](https://gateway-api.sigs.k8s.io/geps/gep-2648/#direct-policy-design-rules).\n\nPolicyTargetReference specifies the targeted resource which the policy should be applied to. It must only target a single resource at a time, but it can be used to target larger resources such as Gateways that may apply to multiple child resources. The PolicyTargetReference will be used instead of a WorkloadSelector in the RequestAuthentication, AuthorizationPolicy, Telemetry, and WasmPlugin CRDs to target a Kubernetes Gateway.\n\nThe following is an example of an AuthorizationPolicy bound to a waypoint proxy using a PolicyTargetReference. The example sets `action` to `DENY` to create a deny policy. It denies all the requests with `POST` method on port `8080` directed through the `waypoint` Gateway in the `foo` namespace.\n\n```yaml apiVersion: security.istio.io/v1 kind: AuthorizationPolicy metadata:\n\n\tname: httpbin\n\tnamespace: foo\n\nspec:\n\n\ttargetRefs:\n\t- name: waypoint\n\t  kind: Gateway\n\t  group: gateway.networking.k8s.io\n\taction: DENY\n\trules:\n\t- to:\n\t  - operation:\n\t      methods: [\"POST\"]\n\t      ports: [\"8080\"]\n\n```",
      "type": "object",
      "properties": {
        "group": {
          "description": "group is the group of the target resource.",
          "type": "string"
        },
        "kind": {
          "description": "kind is kind of the target resource.",
          "type": "string"
        },
        "name": {
          "description": "name is the name of the target resource.",
          "type": "string"
        },
        "namespace": {
          "description": "namespace is the namespace of the referent. When unspecified, the local namespace is inferred.",
          "type": "string"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "PolicyTargetReference",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.type.v1beta1.PortSelector": {
      "description": "PortSelector is the criteria for specifying if a policy can be applied to a listener having a specific port.",
      "type": "object",
      "properties": {
        "number": {
          "description": "Port number",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "PortSelector",
        "Scope": "Namespaced"
      }
    },
    "io.istio.api.type.v1beta1.WorkloadSelector": {
      "description": "WorkloadSelector specifies the criteria used to determine if a policy can be applied to a proxy. The matching criteria includes the metadata associated with a proxy, workload instance info such as labels attached to the pod/VM, or any other info that the proxy provides to Istio during the initial handshake. If multiple conditions are specified, all conditions need to match in order for the workload instance to be selected. Currently, only label based selection mechanism is supported.",
      "type": "object",
      "properties": {
        "matchLabels": {
          "description": "One or more labels that indicate a specific set of pods/VMs on which a policy should be applied. The scope of label search is restricted to the configuration namespace in which the resource is present.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "default": ""
          }
        }
      },
      "x-fabric8-info": {
        "Type": "nested",
        "Group": "",
        "Version": "v1beta1",
        "Kind": "WorkloadSelector",
        "Scope": "Namespaced"
      }
    },
    "io.istio.extensions.v1alpha1.WasmPlugin": {
      "description": "WasmPlugin provides a mechanism to extend the functionality provided by the Istio proxy through WebAssembly filters.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.extensions.v1alpha1.WasmPlugin"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "extensions.istio.io",
        "Version": "v1alpha1",
        "Kind": "WasmPlugin",
        "Scope": "Namespaced"
      }
    },
    "io.istio.extensions.v1alpha1.WasmPluginList": {
      "description": "WasmPluginList is a collection of WasmPlugins.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.extensions.v1alpha1.WasmPlugin"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "extensions.istio.io",
        "Version": "v1alpha1",
        "Kind": "WasmPluginList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.DestinationRule": {
      "description": "DestinationRule defines policies that apply to traffic intended for a service after routing has occurred.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.DestinationRule"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "DestinationRule",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.DestinationRuleList": {
      "description": "DestinationRuleList is a collection of DestinationRules.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1.DestinationRule"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "DestinationRuleList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.Gateway": {
      "description": "Gateway describes a load balancer operating at the edge of the mesh receiving incoming or outgoing HTTP/TCP connections.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Gateway"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "Gateway",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.GatewayList": {
      "description": "GatewayList is a collection of Gateways.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1.Gateway"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "GatewayList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.ServiceEntry": {
      "description": "ServiceEntry enables adding additional entries into Istio's internal service registry.\n\n\u003c!-- crd generation tags mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)\" (NONE, STATIC, or DNS)\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags istiostatus-override: ServiceEntryStatus: istio.io/api/networking/v1alpha3 --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntryStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "ServiceEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.ServiceEntryList": {
      "description": "ServiceEntryList is a collection of ServiceEntries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1.ServiceEntry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "ServiceEntryList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.Sidecar": {
      "description": "`Sidecar` describes the configuration of the sidecar proxy that mediates inbound and outbound communication of the workload instance to which it is attached.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Sidecar"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "Sidecar",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.SidecarList": {
      "description": "SidecarList is a collection of Sidecars.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1.Sidecar"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "SidecarList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.VirtualService": {
      "description": "Configuration affecting traffic routing.\n\n\u003c!-- crd generation tags that should apply these routes\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.VirtualService"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "VirtualService",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.VirtualServiceList": {
      "description": "VirtualServiceList is a collection of VirtualServices.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1.VirtualService"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "VirtualServiceList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.WorkloadEntry": {
      "description": "WorkloadEntry enables specifying the properties of a single non-Kubernetes workload such a VM or a bare metal services that can be referred to by service entries.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadEntry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "WorkloadEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.WorkloadEntryList": {
      "description": "WorkloadEntryList is a collection of WorkloadEntries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1.WorkloadEntry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "WorkloadEntryList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.WorkloadGroup": {
      "description": "`WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates. A `WorkloadGroup` can have more than one `WorkloadEntry`. `WorkloadGroup` has no relationship to resources which control service registry like `ServiceEntry` and as such doesn't configure host name for these workloads.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadGroup"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "WorkloadGroup",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1.WorkloadGroupList": {
      "description": "WorkloadGroupList is a collection of WorkloadGroups.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1.WorkloadGroup"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1",
        "Kind": "WorkloadGroupList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.DestinationRule": {
      "description": "DestinationRule defines policies that apply to traffic intended for a service after routing has occurred.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.DestinationRule"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "DestinationRule",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.DestinationRuleList": {
      "description": "DestinationRuleList is a collection of DestinationRules.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.DestinationRule"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "DestinationRuleList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.EnvoyFilter": {
      "description": "EnvoyFilter provides a mechanism to customize the Envoy configuration generated by istiod.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.EnvoyFilter"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilter",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.EnvoyFilterList": {
      "description": "EnvoyFilterList is a collection of EnvoyFilters.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.EnvoyFilter"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "EnvoyFilterList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.Gateway": {
      "description": "Gateway describes a load balancer operating at the edge of the mesh receiving incoming or outgoing HTTP/TCP connections.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Gateway"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "Gateway",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.GatewayList": {
      "description": "GatewayList is a collection of Gateways.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.Gateway"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "GatewayList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.ServiceEntry": {
      "description": "ServiceEntry enables adding additional entries into Istio's internal service registry.\n\n\u003c!-- crd generation tags mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)\" (NONE, STATIC, or DNS)\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags istiostatus-override: ServiceEntryStatus: istio.io/api/networking/v1alpha3 --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntryStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "ServiceEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.ServiceEntryList": {
      "description": "ServiceEntryList is a collection of ServiceEntries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.ServiceEntry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "ServiceEntryList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.Sidecar": {
      "description": "`Sidecar` describes the configuration of the sidecar proxy that mediates inbound and outbound communication of the workload instance to which it is attached.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Sidecar"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "Sidecar",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.SidecarList": {
      "description": "SidecarList is a collection of Sidecars.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.Sidecar"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "SidecarList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.VirtualService": {
      "description": "Configuration affecting traffic routing.\n\n\u003c!-- crd generation tags that should apply these routes\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.VirtualService"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "VirtualService",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.VirtualServiceList": {
      "description": "VirtualServiceList is a collection of VirtualServices.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.VirtualService"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "VirtualServiceList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.WorkloadEntry": {
      "description": "WorkloadEntry enables specifying the properties of a single non-Kubernetes workload such a VM or a bare metal services that can be referred to by service entries.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadEntry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "WorkloadEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.WorkloadEntryList": {
      "description": "WorkloadEntryList is a collection of WorkloadEntries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.WorkloadEntry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "WorkloadEntryList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.WorkloadGroup": {
      "description": "`WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates. A `WorkloadGroup` can have more than one `WorkloadEntry`. `WorkloadGroup` has no relationship to resources which control service registry like `ServiceEntry` and as such doesn't configure host name for these workloads.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadGroup"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "WorkloadGroup",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1alpha3.WorkloadGroupList": {
      "description": "WorkloadGroupList is a collection of WorkloadGroups.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1alpha3.WorkloadGroup"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1alpha3",
        "Kind": "WorkloadGroupList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.DestinationRule": {
      "description": "DestinationRule defines policies that apply to traffic intended for a service after routing has occurred.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.DestinationRule"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "DestinationRule",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.DestinationRuleList": {
      "description": "DestinationRuleList is a collection of DestinationRules.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.DestinationRule"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "DestinationRuleList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.Gateway": {
      "description": "Gateway describes a load balancer operating at the edge of the mesh receiving incoming or outgoing HTTP/TCP connections.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Gateway"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "Gateway",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.GatewayList": {
      "description": "GatewayList is a collection of Gateways.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.Gateway"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "GatewayList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.ProxyConfig": {
      "description": "`ProxyConfig` exposes proxy level configuration options.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1beta1.ProxyConfig"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "ProxyConfig",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.ProxyConfigList": {
      "description": "ProxyConfigList is a collection of ProxyConfigs.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.ProxyConfig"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "ProxyConfigList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.ServiceEntry": {
      "description": "ServiceEntry enables adding additional entries into Istio's internal service registry.\n\n\u003c!-- crd generation tags mesh or part of the mesh (MESH_EXTERNAL or MESH_INTERNAL)\" (NONE, STATIC, or DNS)\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags istiostatus-override: ServiceEntryStatus: istio.io/api/networking/v1alpha3 --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.ServiceEntryStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "ServiceEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.ServiceEntryList": {
      "description": "ServiceEntryList is a collection of ServiceEntries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.ServiceEntry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "ServiceEntryList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.Sidecar": {
      "description": "`Sidecar` describes the configuration of the sidecar proxy that mediates inbound and outbound communication of the workload instance to which it is attached.\n\n\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.Sidecar"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "Sidecar",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.SidecarList": {
      "description": "SidecarList is a collection of Sidecars.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.Sidecar"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "SidecarList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.VirtualService": {
      "description": "Configuration affecting traffic routing.\n\n\u003c!-- crd generation tags that should apply these routes\" representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.VirtualService"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "VirtualService",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.VirtualServiceList": {
      "description": "VirtualServiceList is a collection of VirtualServices.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.VirtualService"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "VirtualServiceList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.WorkloadEntry": {
      "description": "WorkloadEntry enables specifying the properties of a single non-Kubernetes workload such a VM or a bare metal services that can be referred to by service entries.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadEntry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "WorkloadEntry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.WorkloadEntryList": {
      "description": "WorkloadEntryList is a collection of WorkloadEntries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.WorkloadEntry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "WorkloadEntryList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.WorkloadGroup": {
      "description": "`WorkloadGroup` enables specifying the properties of a single workload for bootstrap and provides a template for `WorkloadEntry`, similar to how `Deployment` specifies properties of workloads via `Pod` templates. A `WorkloadGroup` can have more than one `WorkloadEntry`. `WorkloadGroup` has no relationship to resources which control service registry like `ServiceEntry` and as such doesn't configure host name for these workloads.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.networking.v1alpha3.WorkloadGroup"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "WorkloadGroup",
        "Scope": "Namespaced"
      }
    },
    "io.istio.networking.v1beta1.WorkloadGroupList": {
      "description": "WorkloadGroupList is a collection of WorkloadGroups.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.networking.v1beta1.WorkloadGroup"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "networking.istio.io",
        "Version": "v1beta1",
        "Kind": "WorkloadGroupList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1.AuthorizationPolicy": {
      "description": "AuthorizationPolicy enables access control on workloads.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.AuthorizationPolicy"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "security.istio.io",
        "Version": "v1",
        "Kind": "AuthorizationPolicy",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1.AuthorizationPolicyList": {
      "description": "AuthorizationPolicyList is a collection of AuthorizationPolicies.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.security.v1.AuthorizationPolicy"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "security.istio.io",
        "Version": "v1",
        "Kind": "AuthorizationPolicyList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1.PeerAuthentication": {
      "description": "\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.PeerAuthentication"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "security.istio.io",
        "Version": "v1",
        "Kind": "PeerAuthentication",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1.PeerAuthenticationList": {
      "description": "PeerAuthenticationList is a collection of PeerAuthentications.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.security.v1.PeerAuthentication"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "security.istio.io",
        "Version": "v1",
        "Kind": "PeerAuthenticationList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1.RequestAuthentication": {
      "description": "\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.RequestAuthentication"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "security.istio.io",
        "Version": "v1",
        "Kind": "RequestAuthentication",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1.RequestAuthenticationList": {
      "description": "RequestAuthenticationList is a collection of RequestAuthentications.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.security.v1.RequestAuthentication"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "security.istio.io",
        "Version": "v1",
        "Kind": "RequestAuthenticationList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1beta1.AuthorizationPolicy": {
      "description": "AuthorizationPolicy enables access control on workloads.\n\n\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.AuthorizationPolicy"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "security.istio.io",
        "Version": "v1beta1",
        "Kind": "AuthorizationPolicy",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1beta1.AuthorizationPolicyList": {
      "description": "AuthorizationPolicyList is a collection of AuthorizationPolicies.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.security.v1beta1.AuthorizationPolicy"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "security.istio.io",
        "Version": "v1beta1",
        "Kind": "AuthorizationPolicyList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1beta1.PeerAuthentication": {
      "description": "\u003c!-- crd generation tags representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.PeerAuthentication"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "security.istio.io",
        "Version": "v1beta1",
        "Kind": "PeerAuthentication",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1beta1.PeerAuthenticationList": {
      "description": "PeerAuthenticationList is a collection of PeerAuthentications.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.security.v1beta1.PeerAuthentication"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "security.istio.io",
        "Version": "v1beta1",
        "Kind": "PeerAuthenticationList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1beta1.RequestAuthentication": {
      "description": "\u003c!-- crd generation tags --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.security.v1beta1.RequestAuthentication"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "security.istio.io",
        "Version": "v1beta1",
        "Kind": "RequestAuthentication",
        "Scope": "Namespaced"
      }
    },
    "io.istio.security.v1beta1.RequestAuthenticationList": {
      "description": "RequestAuthenticationList is a collection of RequestAuthentications.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.security.v1beta1.RequestAuthentication"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "security.istio.io",
        "Version": "v1beta1",
        "Kind": "RequestAuthenticationList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.telemetry.v1.Telemetry": {
      "description": "\u003c!-- crd generation tags is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Telemetry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "telemetry.istio.io",
        "Version": "v1",
        "Kind": "Telemetry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.telemetry.v1.TelemetryList": {
      "description": "TelemetryList is a collection of Telemetries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.telemetry.v1.Telemetry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "telemetry.istio.io",
        "Version": "v1",
        "Kind": "TelemetryList",
        "Scope": "Namespaced"
      }
    },
    "io.istio.telemetry.v1alpha1.Telemetry": {
      "description": "\u003c!-- crd generation tags is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata\" --\u003e\n\n\u003c!-- go code generation tags --\u003e",
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the implementation of this definition.",
          "$ref": "#/definitions/io.istio.api.telemetry.v1alpha1.Telemetry"
        },
        "status": {
          "$ref": "#/definitions/io.istio.api.meta.v1alpha1.IstioStatus"
        }
      },
      "x-fabric8-info": {
        "Type": "object",
        "Group": "telemetry.istio.io",
        "Version": "v1alpha1",
        "Kind": "Telemetry",
        "Scope": "Namespaced"
      }
    },
    "io.istio.telemetry.v1alpha1.TelemetryList": {
      "description": "TelemetryList is a collection of Telemetries.",
      "type": "object",
      "required": [
        "items"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/io.istio.telemetry.v1alpha1.Telemetry"
          }
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string"
        },
        "metadata": {
          "default": {},
          "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ListMeta"
        }
      },
      "x-fabric8-info": {
        "Type": "list",
        "Group": "telemetry.istio.io",
        "Version": "v1alpha1",
        "Kind": "TelemetryList",
        "Scope": "Namespaced"
      }
    }
  }
}