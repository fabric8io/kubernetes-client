<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2015 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.fabric8</groupId>
    <artifactId>kubernetes-model-generator</artifactId>
    <version>5.6-SNAPSHOT</version>
  </parent>

  <artifactId>kubernetes-model-core</artifactId>
  <packaging>bundle</packaging>
  <name>Fabric8 :: Kubernetes Model :: Core</name>

  <properties>
    <clone-kube>true</clone-kube>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-model-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <configuration>
              <skipAttach>false</skipAttach>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven.bundle.plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
            <!-- To enable deserialization type inference in OSGi, all KubernetesDeserializer$Mapping#PACKAGES must be included in this list -->
            <Import-Package>
              *,
              io.fabric8.kubernetes.api.model.admission.v1,
              io.fabric8.kubernetes.api.model.admission.v1beta1,
              io.fabric8.kubernetes.api.model.admissionregistration.v1,
              io.fabric8.kubernetes.api.model.admissionregistration.v1beta1,
              io.fabric8.kubernetes.api.model.authentication,
              io.fabric8.kubernetes.api.model.authorization.v1,
              io.fabric8.kubernetes.api.model.authorization.v1beta1,
              io.fabric8.kubernetes.api.model.apiextensions.v1,
              io.fabric8.kubernetes.api.model.apiextensions.v1beta1,
              io.fabric8.kubernetes.api.model.apps,
              io.fabric8.kubernetes.api.model.autoscaling.v1,
              io.fabric8.kubernetes.api.model.autoscaling.v2beta1,
              io.fabric8.kubernetes.api.model.autoscaling.v2beta2,
              io.fabric8.kubernetes.api.model.batch.v1,
              io.fabric8.kubernetes.api.model.batch.v1beta1,
              io.fabric8.kubernetes.api.model.certificates.v1,
              io.fabric8.kubernetes.api.model.certificates.v1beta1,
              io.fabric8.kubernetes.api.model.coordination.v1,
              io.fabric8.kubernetes.api.model.events.v1,
              io.fabric8.kubernetes.api.model.events.v1beta1,
              io.fabric8.kubernetes.api.model.discovery.v1,
              io.fabric8.kubernetes.api.model.discovery.v1beta1,
              io.fabric8.kubernetes.api.model.extensions,
              io.fabric8.kubernetes.api.model.flowcontrol.v1beta1,
              io.fabric8.kubernetes.api.model.metrics.v1beta1,
              io.fabric8.kubernetes.api.model.networking.v1,
              io.fabric8.kubernetes.api.model.networking.v1beta1,
              io.fabric8.kubernetes.api.model.node.v1alpha1,
              io.fabric8.kubernetes.api.model.node.v1beta1,
              io.fabric8.kubernetes.api.model.policy.v1,
              io.fabric8.kubernetes.api.model.policy.v1beta1,
              io.fabric8.kubernetes.api.model.rbac,
              io.fabric8.kubernetes.api.model.scheduling.v1,
              io.fabric8.kubernetes.api.model.scheduling.v1beta1,
              io.fabric8.kubernetes.api.model.storage,
              io.fabric8.kubernetes.api.model.storage.v1beta1,
              io.fabric8.openshift.api.model;resolution:=optional,
              io.fabric8.openshift.api.model.clusterautoscaling.v1;resolution:=optional,
              io.fabric8.openshift.api.model.clusterautoscaling.v1beta1;resolution:=optional,
              io.fabric8.openshift.api.model.runtime;resolution:=optional,
              io.fabric8.openshift.api.model.console.v1;resolution:=optional,
              io.fabric8.openshift.api.model.console.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.monitoring.v1;resolution:=optional,
              io.fabric8.openshift.api.model.monitoring.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.operator;resolution:=optional,
              io.fabric8.openshift.api.model.operator.v1;resolution:=optional,
              io.fabric8.openshift.api.model.operator.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.operator.controlplane.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.operatorhub.manifests;resolution:=optional,
              io.fabric8.openshift.api.model.operatorhub.v1;resolution:=optional,
              io.fabric8.openshift.api.model.operatorhub.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.operatorhub.lifecyclemanager.v1;resolution:=optional,
              io.fabric8.openshift.api.model.machineconfig.v1;resolution:=optional,
              io.fabric8.openshift.api.model.machine.v1beta1;resolution:=optional,
              io.fabric8.openshift.api.model.tuned.v1;resolution:=optional,
              io.fabric8.openshift.api.model.whereabouts.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.storageversionmigrator.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.miscellaneous.cloudcredential.v1;resolution:=optional,
              io.fabric8.openshift.api.model.miscellaneous.cncf.cni.v1;resolution:=optional,
              io.fabric8.openshift.api.model.miscellaneous.imageregistry.operator.v1;resolution:=optional,
              io.fabric8.openshift.api.model.miscellaneous.metal3.v1alpha1;resolution:=optional,
              io.fabric8.openshift.api.model.miscellaneous.network.operator.v1;resolution:=optional,
            </Import-Package>
            <Private-Package>io.fabric8.kubernetes.internal</Private-Package>
            <Export-Package>
              io.fabric8.kubernetes.api,
              io.fabric8.kubernetes.api.builder,
              io.fabric8.kubernetes.api.model**,
            </Export-Package>
            <Include-Resource>
              {maven-resources},
              /META-INF/jandex.idx=target/classes/META-INF/jandex.idx,
              /core.properties=target/classes/core.properties,
            </Include-Resource>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>generate</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jsonschema2pojo</groupId>
            <artifactId>jsonschema2pojo-maven-plugin</artifactId>
            <configuration>
              <customAnnotator>io.fabric8.kubernetes.jsonschema2pojo.KubernetesCoreTypeAnnotator</customAnnotator>
              <customRuleFactory>io.fabric8.kubernetes.jsonschema2pojo.Fabric8RuleFactory</customRuleFactory>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>generate-sources</phase>
                <configuration>
                  <target>
                    <echo>Removing the duplicate generated class</echo>
                    <delete
                      file="${generate.targetDirectory}/io/fabric8/kubernetes/api/model/Duration.java"
                      verbose="true" />
                    <delete
                      file="${generate.targetDirectory}/io/fabric8/kubernetes/api/model/HasMetadata.java"
                      verbose="true" />
                    <delete
                      file="${generate.targetDirectory}/io/fabric8/kubernetes/api/model/IntOrString.java"
                      verbose="true" />
                    <delete
                      file="${generate.targetDirectory}/io/fabric8/kubernetes/api/model/Quantity.java"
                      verbose="true" />
                    <delete
                      file="${generate.targetDirectory}/io/fabric8/kubernetes/api/model/WatchEvent.java"
                      verbose="true" />
                    <delete verbose="true">
                      <fileset dir="${generate.targetDirectory}">
                        <include name="*.java" />
                      </fileset>
                    </delete>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
