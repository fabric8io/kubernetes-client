#
# Copyright (C) 2015 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
  kind: "Template"
  apiVersion: "v1"
  metadata: 
    annotations: 
      iconClass: "icon-jboss"
      description: "Application template for EAP 6 applications built using STI."
    name: "eap6-basic-sti"
  labels: 
    template: "eap6-basic-sti"
  parameters: 
    - 
      description: "EAP Release version, e.g. 6.4, etc."
      name: "EAP_RELEASE"
      value: "6.4"
      required: true
    - 
      description: "The name for the application."
      name: "APPLICATION_NAME"
      value: "eap-app"
      required: true
    - 
      description: "Custom hostname for service routes. Leave blank for default hostname, e.g.: <application-name>.<project>.<default-domain-suffix>"
      name: "APPLICATION_HOSTNAME"
      value: ""
      required: false
    - 
      description: "Git source URI for application"
      name: "GIT_URI"
      value: "https://github.com/jboss-developer/jboss-eap-quickstarts"
      required: false
    - 
      description: "Git branch/tag reference"
      name: "GIT_REF"
      value: "6.4.x"
      required: false
    - 
      description: "Path within Git project to build; empty for root project directory."
      name: "GIT_CONTEXT_DIR"
      value: "kitchensink"
      required: false
    - 
      description: "Queue names"
      name: "HORNETQ_QUEUES"
      value: ""
      required: false
    - 
      description: "Topic names"
      name: "HORNETQ_TOPICS"
      value: ""
      required: false
    - 
      description: "HornetQ cluster admin password"
      name: "HORNETQ_CLUSTER_PASSWORD"
      from: "[a-zA-Z0-9]{8}"
      generate: "expression"
      required: true
    - 
      description: "GitHub trigger secret"
      name: "GITHUB_TRIGGER_SECRET"
      from: "[a-zA-Z0-9]{8}"
      generate: "expression"
      required: true
    - 
      description: "Generic build trigger secret"
      name: "GENERIC_TRIGGER_SECRET"
      from: "[a-zA-Z0-9]{8}"
      generate: "expression"
      required: true
    - 
      description: "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project."
      name: "IMAGE_STREAM_NAMESPACE"
      value: "openshift"
      required: true
  objects: 
    - 
      kind: "Service"
      apiVersion: "v1"
      spec: 
        ports: 
          - 
            port: 8080
            targetPort: 8080
        selector: 
          deploymentConfig: "${APPLICATION_NAME}"
      metadata: 
        name: "${APPLICATION_NAME}"
        labels: 
          application: "${APPLICATION_NAME}"
        annotations: 
          description: "The web server's http port."
    - 
      kind: "Route"
      apiVersion: "v1"
      id: "${APPLICATION_NAME}-http-route"
      metadata: 
        name: "${APPLICATION_NAME}-http-route"
        labels: 
          application: "${APPLICATION_NAME}"
        annotations: 
          description: "Route for application's http service."
      spec: 
        host: "${APPLICATION_HOSTNAME}"
        to: 
          name: "${APPLICATION_NAME}"
    - 
      kind: "ImageStream"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        labels: 
          application: "${APPLICATION_NAME}"
    - 
      kind: "BuildConfig"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        labels: 
          application: "${APPLICATION_NAME}"
      spec: 
        source: 
          type: "Git"
          git: 
            uri: "${GIT_URI}"
            ref: "${GIT_REF}"
          contextDir: "${GIT_CONTEXT_DIR}"
        strategy: 
          type: "Source"
          sourceStrategy: 
            from: 
              kind: "ImageStreamTag"
              namespace: "${IMAGE_STREAM_NAMESPACE}"
              name: "jboss-eap6-openshift:${EAP_RELEASE}"
        output: 
          to: 
            kind: "ImageStreamTag"
            name: "${APPLICATION_NAME}:latest"
        triggers: 
          - 
            type: "GitHub"
            github: 
              secret: "${GITHUB_TRIGGER_SECRET}"
          - 
            type: "Generic"
            generic: 
              secret: "${GENERIC_TRIGGER_SECRET}"
          - 
            type: "ImageChange"
            imageChange: {}
    - 
      kind: "DeploymentConfig"
      apiVersion: "v1"
      metadata: 
        name: "${APPLICATION_NAME}"
        labels: 
          application: "${APPLICATION_NAME}"
      spec: 
        strategy: 
          type: "Recreate"
        triggers: 
          - 
            type: "ImageChange"
            imageChangeParams: 
              automatic: true
              containerNames: 
                - "${APPLICATION_NAME}"
              from: 
                kind: "ImageStream"
                name: "${APPLICATION_NAME}"
        replicas: 1
        selector: 
          deploymentConfig: "${APPLICATION_NAME}"
        template: 
          metadata: 
            name: "${APPLICATION_NAME}"
            labels: 
              deploymentConfig: "${APPLICATION_NAME}"
              application: "${APPLICATION_NAME}"
          spec: 
            containers: 
              - 
                name: "${APPLICATION_NAME}"
                image: "${APPLICATION_NAME}"
                imagePullPolicy: "Always"
                readinessProbe: 
                  exec: 
                    command: 
                      - "/bin/bash"
                      - "-c"
                      - "/opt/eap/bin/readinessProbe.sh"
                ports: 
                  - 
                    name: "http"
                    containerPort: 8080
                    protocol: "TCP"
                  - 
                    name: "ping"
                    containerPort: 8888
                    protocol: "TCP"
                env: 
                  - 
                    name: "OPENSHIFT_KUBE_PING_LABELS"
                    value: "application=${APPLICATION_NAME}"
                  - 
                    name: "OPENSHIFT_KUBE_PING_NAMESPACE"
                    valueFrom: 
                      fieldRef: 
                        fieldPath: "metadata.namespace"
                  - 
                    name: "HORNETQ_CLUSTER_PASSWORD"
                    value: "${HORNETQ_CLUSTER_PASSWORD}"
                  - 
                    name: "HORNETQ_QUEUES"
                    value: "${HORNETQ_QUEUES}"
                  - 
                    name: "HORNETQ_TOPICS"
                    value: "${HORNETQ_TOPICS}"
