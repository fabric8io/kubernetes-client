<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (C) 2015 Red Hat, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>io.fabric8</groupId>
    <artifactId>kubernetes-client-project</artifactId>
    <version>1.3.57-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <groupId>io.fabric8</groupId>
  <artifactId>kubernetes-client</artifactId>
  <name>Fabric8 :: Kubernetes :: Java Client</name>
  <packaging>jar</packaging>

  <properties>
    <osgi.import>*</osgi.import>
    <osgi.export>
      io.fabric8.kubernetes.client*"
    </osgi.export>
    <osgi.private>
      io.fabric8.kubernetes.client.internal,
      io.fabric8.kubernetes.client.handlers,
      io.fabric8.kubernetes.client.dsl.internal
    </osgi.private>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <!-- We cleanup system properties an env vars, so that we can test in a predictable env -->
          <environmentVariables>
            <KUBERNETES_API_VERSION></KUBERNETES_API_VERSION>
            <KUBERNETES_TLS_PROTOCOLS></KUBERNETES_TLS_PROTOCOLS>
            <KUBERNETES_TRUST_CERTIFICATES></KUBERNETES_TRUST_CERTIFICATES>
            <KUBERNETES_CERTS_CA_FILE></KUBERNETES_CERTS_CA_FILE>
            <KUBERNETES_CERTS_CA_DATA></KUBERNETES_CERTS_CA_DATA>
            <KUBERNETES_CERTS_CLIENT_FILE></KUBERNETES_CERTS_CLIENT_FILE>
            <KUBERNETES_CERTS_CLIENT_DATA></KUBERNETES_CERTS_CLIENT_DATA>
            <KUBERNETES_CERTS_CLIENT_KEY_FILE></KUBERNETES_CERTS_CLIENT_KEY_FILE>
            <KUBERNETES_CERTS_CLIENT_KEY_DATA></KUBERNETES_CERTS_CLIENT_KEY_DATA>
            <KUBERNETES_CERTS_CLIENT_KEY_ALGO></KUBERNETES_CERTS_CLIENT_KEY_ALGO>
            <KUBERNETES_CERTS_CLIENT_KEY_PASSPHRASE></KUBERNETES_CERTS_CLIENT_KEY_PASSPHRASE>
            <KUBERNETES_AUTH_BASIC_USERNAME></KUBERNETES_AUTH_BASIC_USERNAME>
            <KUBERNETES_AUTH_BASIC_PASSWORD></KUBERNETES_AUTH_BASIC_PASSWORD>
            <KUBERNETES_AUTH_TRYKUBECONFIG></KUBERNETES_AUTH_TRYKUBECONFIG>
            <KUBERNETES_AUTH_TRYSERVICEACCOUNT></KUBERNETES_AUTH_TRYSERVICEACCOUNT>
            <KUBERNETES_AUTH_TOKEN></KUBERNETES_AUTH_TOKEN>
            <KUBERNETES_WATCH_RECONNECTINTERVAL></KUBERNETES_WATCH_RECONNECTINTERVAL>
            <KUBERNETES_WATCH_RECONNECTLIMIT></KUBERNETES_WATCH_RECONNECTLIMIT>
            <KUBERNETES_REQUEST_TIMEOUT></KUBERNETES_REQUEST_TIMEOUT>
            <KUBERNETES_NAMESPACE></KUBERNETES_NAMESPACE>
          </environmentVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven.jar.plugin.version}</version>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-scr-plugin</artifactId>
        <version>${maven.scr.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>scr</goal>
            </goals>
            <configuration>
              <specVersion>1.2</specVersion>
              <strictMode>true</strictMode>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>kubernetes-model</artifactId>
      <version>${kubernetes.model.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp</groupId>
      <artifactId>okhttp</artifactId>
      <version>${okhttp.version}</version>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp</groupId>
      <artifactId>okhttp-ws</artifactId>
      <version>${okhttp.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-yaml</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- Compile Only Dependencies -->
    <dependency>
      <groupId>io.sundr</groupId>
      <artifactId>builder-annotations</artifactId>
      <version>${sundrio.version}</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.apache.felix</groupId>
      <artifactId>org.apache.felix.scr.annotations</artifactId>
      <version>${scr.annotations.version}</version>
      <scope>compile</scope>
      <optional>true</optional>
    </dependency>

    <!-- Testing Dependencies -->
    <dependency>
      <groupId>com.google.mockwebserver</groupId>
      <artifactId>mockwebserver</artifactId>
      <version>${mockwebserver.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

</project>
